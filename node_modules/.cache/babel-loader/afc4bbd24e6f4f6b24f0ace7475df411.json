{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ProfileScreen/index.js\";\nimport { Button, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Header } from \"../../internal/Header/Header\";\nimport ProfileContainer from \"./ProfileContainer\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport { capitalize } from \"lodash\";\nimport arbitratorData from \"../../../assets/arbitratorData\";\nimport mediatorData from \"../../../assets/mediatorData\";\nimport PaginationForItems from \"../../common/PaginationForItems\";\nimport _ from \"lodash\";\nimport { BigScreen } from \"../../internal/Header/Styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FilterBar from \"./FilterBar\";\nimport useSettings from \"../../../hooks/useSettings\";\nimport { CardsContainer, HeadWrap, HiddenDiv, HorizontalContainer, SearchBar, SearchBarContainer, SearchIcon, SubHead } from \"./Styles\";\nimport { Helmet } from \"react-helmet\";\nconst useStyles = makeStyles(() => ({\n  link: {\n    display: \"flex\",\n    margin: \"auto\",\n    fontFamily: theme.fonts.primaryFontRegular\n  },\n  icon: {\n    margin: \"auto 5px\",\n    width: 20,\n    height: 20\n  },\n  displayType: {\n    display: \"flex\"\n  },\n  selectBar: {\n    padding: \"12px 5px\",\n    width: \"100%\",\n    border: \"2px solid #acb1c2\",\n    borderRadius: \"4px\",\n    marginTop: \"10px\"\n  }\n}));\n\nfunction handleClick(event) {}\n\nfunction ProfileScreen(props) {\n  //states,styles and refs declaration\n  let [currentData, setCurrentData] = useState([]);\n  let filterRef = useRef({\n    experience: \"\",\n    location: \"\",\n    language: []\n  });\n  const [checkedLanguages, setCheckedLanguages] = useState([]);\n  const classes = useStyles();\n  const neutral = props.neutral;\n  const [currentPage, setCurrentPage] = useState(1);\n  const {\n    setting,\n    settingsLoading\n  } = useSettings();\n  const [profilesPerPage, setProfilesPerPage] = useState(10);\n  const [filterBar, setFilterBar] = useState(\"none\");\n  const indexOfLastProfile = currentPage * profilesPerPage;\n  const indexOfFirstProfile = indexOfLastProfile - profilesPerPage;\n  const currentProfiles = currentData.slice(indexOfFirstProfile, indexOfLastProfile);\n  const [inputText, setInputText] = useState(\"\");\n  const [locationSelections, setLocationSelections] = useState([]);\n  const [languageSelections, setLanguageSelections] = useState([]);\n  const experienceSelections = [\"More than 10 years\", \"More than 20 years\", \"More than 30 years\"];\n  const data = props.neutral === \"arbitrators\" ? setting === null || setting === void 0 ? void 0 : setting.arbitratorsInfo : props.neutral === \"mediators\" ? setting === null || setting === void 0 ? void 0 : setting.mediatorsInfo : null; //Sub function of filter to perform language check.\n\n  const handleCheck = value => {\n    if (checkedLanguages.includes(value)) {\n      setCheckedLanguages(prev => prev.filter(language => language != value));\n    } else {\n      let finalArray = []; // for (let i = 0; i < 2; i++) {\n      //   finalArray.push(\"English\");\n      // }\n      //finalArray.push(\"English\");\n\n      finalArray.push(value);\n      setCheckedLanguages(finalArray);\n    }\n  }; //Search function\n\n\n  const searchData = (profile, input) => {\n    return _.lowerCase(profile.name).includes(_.lowerCase(input)) || _.lowerCase(profile.qualification).includes(_.lowerCase(input)) || _.lowerCase(profile.location).includes(_.lowerCase(input)) || _.lowerCase(profile.areasOfExpertise).includes(_.lowerCase(input));\n  };\n\n  const checker = (arr, target) => {\n    return target.every(v => arr.includes(v));\n  }; // Filter function\n\n\n  const filters = (profile, filterRef) => {\n    return (filterRef.location ? _.lowerCase(profile.location).includes(_.lowerCase(filterRef.location)) : 1) && (filterRef.experience ? filterRef.experience === \"More than 10 years\" ? profile.yearsOfExperience >= 10 : filterRef.experience === \"More than 20 years\" ? profile.yearsOfExperience >= 20 : filterRef.experience === \"More than 30 years\" ? profile.yearsOfExperience >= 30 : filterRef.experience === \"More than 40 years\" ? profile.yearsOfExperience >= 40 : 1 : 1) && (filterRef.language ? checker(profile.languagesKnown, filterRef.language) : 1);\n  }; //combined filter and search function for final output\n\n\n  const filterData = (inputText, filterRef) => {\n    const filteredData = (data === null || data === void 0 ? void 0 : data.length) ? data.filter(profile => {\n      return searchData(profile, inputText) && filters(profile, filterRef);\n    }) : \"\";\n    console.log(filteredData.length);\n    inputText || filterRef ? setCurrentData(filteredData) : setCurrentData(data);\n  }; //To auto populate location options for the filter\n\n\n  const locationHandler = data => {\n    let finalArray = [];\n    data.map(obj => finalArray.includes(obj.location) ? null : obj.location && finalArray.push(obj.location));\n    finalArray.sort();\n    setLocationSelections(finalArray);\n  }; //To auto populate language options for filter\n\n\n  const languageHandler = data => {\n    let finalArray = [];\n    data.map(obj => finalArray.includes(obj.languagesKnown) ? null : obj.languagesKnown && finalArray.push(obj.languagesKnown));\n    finalArray = _.uniqBy(_.flatten(finalArray));\n    console.log(\"language\", finalArray);\n    finalArray = finalArray.filter(value => _.lowerCase(value) != _.lowerCase(\"English\"));\n    setLanguageSelections(finalArray.sort());\n  }; //Necessary changes when data is changed\n\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setInputText(\"\");\n    filterRef.current = {\n      experience: \"\",\n      location: \"\",\n      language: []\n    };\n\n    if (!_.isEmpty(setting)) {\n      setCurrentData(data);\n      locationHandler(data);\n      languageHandler(data);\n      setCheckedLanguages([]);\n    }\n  }, [data, settingsLoading]); // to update the language checkbox filter\n\n  useEffect(() => {\n    filterRef.current.language = checkedLanguages;\n    filterData(inputText, filterRef.current);\n    paginate(1);\n  }, [checkedLanguages]);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    \"http-equiv\": \"Content-Type\",\n    content: \"text/html; charset=utf-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, props.neutral === \"arbitrators\" ? \"Arbitrators Directory of Dispute Resolution Professionals in India - JustAct\" : \"Mediators Directory of Dispute Resolution Professionals in India - JustAct\"), props.neutral === \"arbitrators\" ? /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Get connected to expert Arbitrators across India in seconds. Find a Dispute Resolution Professional that meets your needs. Our Directory contains ADR Professionals whose qualifications have been verified.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"Get connected to professional mediators across India in a second. Find a Dispute Resolution Professional that meets your needs. Our Directory contains ADR Professionals whose qualifications have been verified.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }), props.neutral === \"arbitrators\" ? /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"Arbitrators Directory of ADR, ADR Professionals in India, Directory of ADR Professionals, Online Dispute Resolution, Online Dispute Resolution in India, Online Arbitration, Dispute Resolution Professionals, JustAct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"Mediators Directory of ADR, ADR Professionals in India, Directory of ADR Professionals, Online Dispute Resolution, Online Dispute Resolution in India, Online Mediators, Dispute Resolution Professionals, Mediators in india, JustAct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HorizontalContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FilterBar, {\n    classes,\n    neutral,\n    filterBar,\n    filterRef,\n    experienceSelections,\n    languageSelections,\n    locationSelections,\n    inputText,\n    checkedLanguages,\n    handleCheck,\n    handleClick,\n    setInputText,\n    setFilterBar,\n    setCheckedLanguages,\n    filterData,\n    paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(BigScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FilterBar, {\n    classes,\n    neutral,\n    filterRef,\n    experienceSelections,\n    languageSelections,\n    locationSelections,\n    inputText,\n    checkedLanguages,\n    handleCheck,\n    handleClick,\n    setInputText,\n    setCheckedLanguages,\n    filterData,\n    paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CardsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(HeadWrap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 15\n    }\n  }, capitalize(props.neutral)), /*#__PURE__*/React.createElement(HiddenDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(SearchBarContainer, {\n    style: {\n      margin: \"10px 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    src: require(\"../../../assets/images/searchBar.svg\"),\n    alt: \"search_icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(SearchBar, {\n    placeholder: \"Name, Expertise or Qualification \",\n    value: inputText,\n    onChange: e => {\n      setInputText(e.target.value);\n      filterData(e.target.value, filterRef.current);\n      paginate(1);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CloseIcon, {\n    style: {\n      fontSize: \"large\",\n      margin: \"auto 8px\",\n      color: \"#acb1c2\"\n    },\n    onClick: () => {\n      setInputText(\"\");\n      filterData(\"\", filterRef.current);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setFilterBar(\"inline\");\n    },\n    style: {\n      marginLeft: \"20px\",\n      color: COLORS.BTN_GREEN\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, \"Filters\")), inputText && /*#__PURE__*/React.createElement(SubHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, \"Showing search results for \\\"\", inputText, \"\\\"\"), !settingsLoading ? /*#__PURE__*/React.createElement(ProfileContainer, {\n    settingsLoading: settingsLoading,\n    data: currentProfiles,\n    neutralType: props.neutral,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }) : \"\", !settingsLoading ? /*#__PURE__*/React.createElement(PaginationForItems, {\n    profilesPerPage: profilesPerPage,\n    totalProfiles: currentData.length,\n    paginate: paginate,\n    page: currentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }) : \"\")))));\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ProfileScreen/index.js"],"names":["Button","makeStyles","React","useEffect","useRef","useState","Header","ProfileContainer","COLORS","theme","capitalize","arbitratorData","mediatorData","PaginationForItems","_","BigScreen","CloseIcon","FilterBar","useSettings","CardsContainer","HeadWrap","HiddenDiv","HorizontalContainer","SearchBar","SearchBarContainer","SearchIcon","SubHead","Helmet","useStyles","link","display","margin","fontFamily","fonts","primaryFontRegular","icon","width","height","displayType","selectBar","padding","border","borderRadius","marginTop","handleClick","event","ProfileScreen","props","currentData","setCurrentData","filterRef","experience","location","language","checkedLanguages","setCheckedLanguages","classes","neutral","currentPage","setCurrentPage","setting","settingsLoading","profilesPerPage","setProfilesPerPage","filterBar","setFilterBar","indexOfLastProfile","indexOfFirstProfile","currentProfiles","slice","inputText","setInputText","locationSelections","setLocationSelections","languageSelections","setLanguageSelections","experienceSelections","data","arbitratorsInfo","mediatorsInfo","handleCheck","value","includes","prev","filter","finalArray","push","searchData","profile","input","lowerCase","name","qualification","areasOfExpertise","checker","arr","target","every","v","filters","yearsOfExperience","languagesKnown","filterData","filteredData","length","console","log","locationHandler","map","obj","sort","languageHandler","uniqBy","flatten","window","scrollTo","current","isEmpty","paginate","pageNumber","require","e","fontSize","color","marginLeft","BTN_GREEN"],"mappings":"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","sourcesContent":["import { Button, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Header } from \"../../internal/Header/Header\";\nimport ProfileContainer from \"./ProfileContainer\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport { capitalize } from \"lodash\";\nimport arbitratorData from \"../../../assets/arbitratorData\";\nimport mediatorData from \"../../../assets/mediatorData\";\nimport PaginationForItems from \"../../common/PaginationForItems\";\nimport _ from \"lodash\";\nimport { BigScreen } from \"../../internal/Header/Styles\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport FilterBar from \"./FilterBar\";\nimport useSettings from \"../../../hooks/useSettings\";\nimport {\n  CardsContainer,\n  HeadWrap,\n  HiddenDiv,\n  HorizontalContainer,\n  SearchBar,\n  SearchBarContainer,\n  SearchIcon,\n  SubHead\n} from \"./Styles\";\nimport { Helmet } from \"react-helmet\";\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    display: \"flex\",\n    margin: \"auto\",\n    fontFamily: theme.fonts.primaryFontRegular\n  },\n  icon: {\n    margin: \"auto 5px\",\n    width: 20,\n    height: 20\n  },\n  displayType: {\n    display: \"flex\"\n  },\n  selectBar: {\n    padding: \"12px 5px\",\n    width: \"100%\",\n    border: \"2px solid #acb1c2\",\n    borderRadius: \"4px\",\n    marginTop: \"10px\"\n  }\n}));\n\nfunction handleClick(event) {}\nfunction ProfileScreen(props) {\n  //states,styles and refs declaration\n  let [currentData, setCurrentData] = useState([]);\n  let filterRef = useRef({\n    experience: \"\",\n    location: \"\",\n    language: []\n  });\n\n  const [checkedLanguages, setCheckedLanguages] = useState([]);\n  const classes = useStyles();\n  const neutral = props.neutral;\n  const [currentPage, setCurrentPage] = useState(1);\n  const { setting, settingsLoading } = useSettings();\n  const [profilesPerPage, setProfilesPerPage] = useState(10);\n  const [filterBar, setFilterBar] = useState(\"none\");\n  const indexOfLastProfile = currentPage * profilesPerPage;\n  const indexOfFirstProfile = indexOfLastProfile - profilesPerPage;\n  const currentProfiles = currentData.slice(\n    indexOfFirstProfile,\n    indexOfLastProfile\n  );\n  const [inputText, setInputText] = useState(\"\");\n  const [locationSelections, setLocationSelections] = useState([]);\n  const [languageSelections, setLanguageSelections] = useState([]);\n  const experienceSelections = [\n    \"More than 10 years\",\n    \"More than 20 years\",\n    \"More than 30 years\"\n  ];\n  const data =\n    props.neutral === \"arbitrators\"\n      ? setting?.arbitratorsInfo\n      : props.neutral === \"mediators\"\n      ? setting?.mediatorsInfo\n      : null;\n\n  //Sub function of filter to perform language check.\n  const handleCheck = value => {\n    if (checkedLanguages.includes(value)) {\n      setCheckedLanguages(prev => prev.filter(language => language != value));\n    } else {\n      let finalArray = [];\n      // for (let i = 0; i < 2; i++) {\n      //   finalArray.push(\"English\");\n      // }\n      //finalArray.push(\"English\");\n      finalArray.push(value);\n      setCheckedLanguages(finalArray);\n    }\n  };\n\n  //Search function\n  const searchData = (profile, input) => {\n    return (\n      _.lowerCase(profile.name).includes(_.lowerCase(input)) ||\n      _.lowerCase(profile.qualification).includes(_.lowerCase(input)) ||\n      _.lowerCase(profile.location).includes(_.lowerCase(input)) ||\n      _.lowerCase(profile.areasOfExpertise).includes(_.lowerCase(input))\n    );\n  };\n\n  const checker = (arr, target) => {\n    return target.every(v => arr.includes(v));\n  };\n  // Filter function\n  const filters = (profile, filterRef) => {\n    return (\n      (filterRef.location\n        ? _.lowerCase(profile.location).includes(\n            _.lowerCase(filterRef.location)\n          )\n        : 1) &&\n      (filterRef.experience\n        ? filterRef.experience === \"More than 10 years\"\n          ? profile.yearsOfExperience >= 10\n          : filterRef.experience === \"More than 20 years\"\n          ? profile.yearsOfExperience >= 20\n          : filterRef.experience === \"More than 30 years\"\n          ? profile.yearsOfExperience >= 30\n          : filterRef.experience === \"More than 40 years\"\n          ? profile.yearsOfExperience >= 40\n          : 1\n        : 1) &&\n      (filterRef.language\n        ? checker(profile.languagesKnown, filterRef.language)\n        : 1)\n    );\n  };\n  //combined filter and search function for final output\n  const filterData = (inputText, filterRef) => {\n    const filteredData = data?.length\n      ? data.filter(profile => {\n          return searchData(profile, inputText) && filters(profile, filterRef);\n        })\n      : \"\";\n    console.log(filteredData.length);\n    inputText || filterRef\n      ? setCurrentData(filteredData)\n      : setCurrentData(data);\n  };\n  //To auto populate location options for the filter\n  const locationHandler = data => {\n    let finalArray = [];\n    data.map(obj =>\n      finalArray.includes(obj.location)\n        ? null\n        : obj.location && finalArray.push(obj.location)\n    );\n    finalArray.sort();\n    setLocationSelections(finalArray);\n  };\n  //To auto populate language options for filter\n  const languageHandler = data => {\n    let finalArray = [];\n    data.map(obj =>\n      finalArray.includes(obj.languagesKnown)\n        ? null\n        : obj.languagesKnown && finalArray.push(obj.languagesKnown)\n    );\n    finalArray = _.uniqBy(_.flatten(finalArray));\n    console.log(\"language\", finalArray);\n    finalArray = finalArray.filter(\n      value => _.lowerCase(value) != _.lowerCase(\"English\")\n    );\n\n    setLanguageSelections(finalArray.sort());\n  };\n\n  //Necessary changes when data is changed\n  useEffect(() => {\n    window.scrollTo(0, 0);\n    setInputText(\"\");\n    filterRef.current = {\n      experience: \"\",\n      location: \"\",\n      language: []\n    };\n    if (!_.isEmpty(setting)) {\n      setCurrentData(data);\n      locationHandler(data);\n      languageHandler(data);\n      setCheckedLanguages([]);\n    }\n  }, [data, settingsLoading]);\n\n  // to update the language checkbox filter\n  useEffect(() => {\n    filterRef.current.language = checkedLanguages;\n    filterData(inputText, filterRef.current);\n    paginate(1);\n  }, [checkedLanguages]);\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return (\n    <>\n      <Helmet>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>\n          {props.neutral === \"arbitrators\"\n            ? \"Arbitrators Directory of Dispute Resolution Professionals in India - JustAct\"\n            : \"Mediators Directory of Dispute Resolution Professionals in India - JustAct\"}\n        </title>\n        {props.neutral === \"arbitrators\" ? (\n          <meta\n            name=\"description\"\n            content=\"Get connected to expert Arbitrators across India in seconds. Find a Dispute Resolution Professional that meets your needs. Our Directory contains ADR Professionals whose qualifications have been verified.\"\n          />\n        ) : (\n          <meta\n            name=\"description\"\n            content=\"Get connected to professional mediators across India in a second. Find a Dispute Resolution Professional that meets your needs. Our Directory contains ADR Professionals whose qualifications have been verified.\"\n          />\n        )}\n        {props.neutral === \"arbitrators\" ? (\n          <meta\n            name=\"keywords\"\n            content=\"Arbitrators Directory of ADR, ADR Professionals in India, Directory of ADR Professionals, Online Dispute Resolution, Online Dispute Resolution in India, Online Arbitration, Dispute Resolution Professionals, JustAct\"\n          />\n        ) : (\n          <meta\n            name=\"keywords\"\n            content=\"Mediators Directory of ADR, ADR Professionals in India, Directory of ADR Professionals, Online Dispute Resolution, Online Dispute Resolution in India, Online Mediators, Dispute Resolution Professionals, Mediators in india, JustAct\"\n          />\n        )}\n      </Helmet>\n      <div>\n        <Header>\n          <HorizontalContainer>\n            {/* SideBar filter for Mobile devices */}\n            <FilterBar\n              {...{\n                classes,\n                neutral,\n                filterBar,\n                filterRef,\n                experienceSelections,\n                languageSelections,\n                locationSelections,\n                inputText,\n                checkedLanguages,\n                handleCheck,\n                handleClick,\n                setInputText,\n                setFilterBar,\n                setCheckedLanguages,\n                filterData,\n                paginate\n              }}\n            />\n            <BigScreen>\n              <FilterBar\n                {...{\n                  classes,\n                  neutral,\n                  filterRef,\n                  experienceSelections,\n                  languageSelections,\n                  locationSelections,\n                  inputText,\n                  checkedLanguages,\n                  handleCheck,\n                  handleClick,\n                  setInputText,\n                  setCheckedLanguages,\n                  filterData,\n                  paginate\n                }}\n              />\n            </BigScreen>\n\n            {/* Profiles screen display */}\n            <CardsContainer>\n              <HeadWrap>{capitalize(props.neutral)}</HeadWrap>\n              <HiddenDiv>\n                <SearchBarContainer style={{ margin: \"10px 0\" }}>\n                  <SearchIcon\n                    src={require(\"../../../assets/images/searchBar.svg\")}\n                    alt=\"search_icon\"\n                  />\n                  <SearchBar\n                    placeholder=\"Name, Expertise or Qualification \"\n                    value={inputText}\n                    onChange={e => {\n                      setInputText(e.target.value);\n                      filterData(e.target.value, filterRef.current);\n                      paginate(1);\n                    }}\n                    autoFocus\n                  />\n                  <CloseIcon\n                    style={{\n                      fontSize: \"large\",\n                      margin: \"auto 8px\",\n                      color: \"#acb1c2\"\n                    }}\n                    onClick={() => {\n                      setInputText(\"\");\n                      filterData(\"\", filterRef.current);\n                    }}\n                  />\n                </SearchBarContainer>\n                <Button\n                  onClick={() => {\n                    setFilterBar(\"inline\");\n                  }}\n                  style={{ marginLeft: \"20px\", color: COLORS.BTN_GREEN }}\n                >\n                  Filters\n                </Button>\n              </HiddenDiv>\n              {inputText && (\n                <SubHead>Showing search results for \"{inputText}\"</SubHead>\n              )}\n\n              {/* <ProfileContainer\n              data={currentProfiles}\n              neutralType={props.neutral}\n            /> */}\n              {!settingsLoading ? (\n                <ProfileContainer\n                  settingsLoading={settingsLoading}\n                  data={currentProfiles}\n                  neutralType={props.neutral}\n                />\n              ) : (\n                \"\"\n              )}\n              {!settingsLoading ? (\n                <PaginationForItems\n                  profilesPerPage={profilesPerPage}\n                  totalProfiles={currentData.length}\n                  paginate={paginate}\n                  page={currentPage}\n                />\n              ) : (\n                \"\"\n              )}\n              {/* <PaginationForItems\n              profilesPerPage={profilesPerPage}\n              totalProfiles={currentData.length}\n              paginate={paginate}\n              page={currentPage}\n            /> */}\n            </CardsContainer>\n          </HorizontalContainer>\n        </Header>\n      </div>\n    </>\n  );\n}\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}