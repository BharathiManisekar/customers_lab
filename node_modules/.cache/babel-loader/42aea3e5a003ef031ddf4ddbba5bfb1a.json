{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseRequests/index.js\";\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { Container, ButtonWrapper, AcceptButton, DeclineButton, StyledTitle, TableWrapper, Padding } from \"./Styles\";\nimport { Heading } from \"../../../styles/component/style\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport ActionBar from \"../../common/ActionBar\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport moment from \"moment\";\nimport CaseService from \"../../../services/CaseService\";\nimport queryString from \"query-string\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { formatNumberToMetrics, getErrorMessage, parseTimeStamp } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport AssignPartyModal from \"./components/AssignPartyModal\";\nimport labels from \"../../../helpers/labels.json\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { HyperLink } from \"../../common/styled-components\";\nimport CaseDescriptionModal from \"./components/CaseDescriptionModal\";\nimport AgentListModal from \"../../common/AgentListModal\";\nimport theme from \"../../../assets/theme\";\n\nasync function getCases(stringParams) {\n  try {\n    const response = await CaseService.caseRequests(stringParams);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst Index = () => {\n  const breadcrumbs = [_.startCase(labels.home), labels.case_invites_received];\n  const [state, setState] = useState({});\n  const [modal, setModal] = useState({\n    state: false\n  });\n  const MTRef = useRef();\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    hideAlert,\n    showAlert\n  } = useAlert();\n  const [caseDescriptionModal, setCaseDescriptionModal] = useState({\n    state: false\n  });\n  const [agentModal, setAgentModal] = useState({\n    state: false,\n    agents: []\n  });\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.case_id\"],\n    render: rowData => /*#__PURE__*/React.createElement(Padding, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 28\n      }\n    }, rowData.id),\n    sorting: false,\n    tooltip: \"Unique Identifier for the Case across JustAct platform\",\n    headerStyle: {\n      paddingLeft: \"28px\",\n      width: 120,\n      display: \"flex\"\n    },\n    cellStyle: {\n      paddingLeft: \"28px\",\n      width: 120\n    }\n  }, {\n    field: \"title\",\n    title: labels[\"table.case_title\"],\n    sorting: false,\n    render: rowData => /*#__PURE__*/React.createElement(StyledTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }\n    }, rowData.title),\n    headerStyle: {\n      maxWidth: 270\n    },\n    cellStyle: {\n      maxWidth: 250\n    }\n  }, {\n    field: \"owner.name\",\n    title: labels[\"role.claimant\"],\n    sorting: false,\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, _.startCase(rowData.owner.name))\n  }, {\n    field: \"respondentName\",\n    title: labels[\"role.respondent\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$respondentPa, _rowData$respondentPa2, _rowData$respondentPa3;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa = rowData.respondentParty) === null || _rowData$respondentPa === void 0 ? void 0 : _rowData$respondentPa.name) ? rowData.respondentParty.name : (rowData === null || rowData === void 0 ? void 0 : rowData.respondentName) ? rowData.respondentName : (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa2 = rowData.respondentParties) === null || _rowData$respondentPa2 === void 0 ? void 0 : _rowData$respondentPa2.length) ? rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa3 = rowData.respondentParties[0]) === null || _rowData$respondentPa3 === void 0 ? void 0 : _rowData$respondentPa3.name : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: 35\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"-\"));\n    }\n  }, {\n    field: \"resolutionKind\",\n    title: labels[\"table.caseType\"],\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, _.startCase(rowData.resolutionKind)),\n    headerStyle: {\n      minWidth: 140\n    },\n    sorting: false\n  }, {\n    field: \"totalClaimValue\",\n    title: labels[\"table.claim_value\"],\n    tooltip: \"Claim Value of the Case\",\n    render: rowData => {\n      const caseItems = rowData.totalClaimValue;\n      if (caseItems) return \"INR \" + formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\");else return \"Non Monetary\";\n    },\n    headerStyle: {\n      minWidth: 140\n    }\n  }, {\n    field: \"submittedOn\",\n    title: labels[\"table.received_on\"],\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : rowData.submittedOn) ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\") : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")),\n    headerStyle: {\n      minWidth: 120\n    }\n  }, {\n    field: \"\",\n    sorting: false,\n    title: labels[\"table.description\"],\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      onClick: () => {\n        var _rowData$claimantPart;\n\n        setCaseDescriptionModal({\n          state: true,\n          caseDetails: rowData\n        });\n        setAgentModal({\n          state: false,\n          agents: rowData === null || rowData === void 0 ? void 0 : (_rowData$claimantPart = rowData.claimantParty) === null || _rowData$claimantPart === void 0 ? void 0 : _rowData$claimantPart.agents\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, \"View\")\n  }, {\n    field: \"actions\",\n    title: labels[\"table.actions\"],\n    sorting: false,\n    headerStyle: {\n      textAlign: \"center\"\n    },\n    render: rowData => /*#__PURE__*/React.createElement(ButtonWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Accept Case\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AcceptButton, {\n      onClick: () => handleAccept(rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../../assets/images/checkBoxSelected.svg\"),\n      alt: \"accept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"Decline Case\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DeclineButton, {\n      onClick: () => showAlert({\n        heading: \"Decline Case?\",\n        desc: `Are you sure you want to decline this case invitation? A case once declined cannot be accepted later.`,\n        // desc:\n        //   \"Are you sure you want to decline this case invite? This operation cannot be undone.\",\n        primaryBtnText: \"Decline\",\n        secondaryBtnText: \"Cancel\",\n        clickSecondarybtn: () => hideAlert(),\n        clickPrimaryBtn: () => {\n          handleDecline(rowData.id);\n        },\n        isOpen: true,\n        onDialogClose: () => hideAlert()\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: require(\"../../../assets/images/closeButton.svg\"),\n      alt: \"decline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }))))\n  }];\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      search: query.search\n    };\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}`;\n    }\n\n    getCases(stringParams).then(result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  async function handleDecline(id) {\n    try {\n      setLoader({\n        state: true,\n        message: \"Rejecting Case...\"\n      });\n      const response = await CaseService.declineCase(id);\n\n      if (response) {\n        enqueueSnackbar(\"Your have declined the invitation.\", {\n          variant: \"success\"\n        });\n        MTRef.current.onSearchChange(\"\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      hideAlert();\n      setCaseDescriptionModal({\n        state: false\n      });\n    }\n  }\n\n  async function handleAccept(caseObj) {\n    setCaseDescriptionModal({\n      state: false\n    });\n    setModal({\n      state: true,\n      case: caseObj\n    });\n  }\n\n  const onBreadcrumbClick = selected => {\n    switch (_.snakeCase(selected)) {\n      case labels.home:\n        navigate(\"/dashboard\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs,\n    onBreadcrumbClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"CreateCase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }\n  }, labels.case_invites_received), /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    columns,\n    data,\n    state,\n    MTRef,\n    noToolbar: true,\n    pageSize: 10,\n    singularTitle: \"\",\n    pluralTitle: labels.invites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 11\n    }\n  }))), modal.state && /*#__PURE__*/React.createElement(AssignPartyModal, {\n    modal,\n    setModal,\n    MTRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }\n  }), caseDescriptionModal.state && /*#__PURE__*/React.createElement(CaseDescriptionModal, {\n    caseDescriptionModal,\n    setCaseDescriptionModal,\n    handleAccept,\n    setAgentModal,\n    handleDecline: () => showAlert({\n      heading: \"Decline Case?\",\n      desc: \"Are you sure you want to decline this case invite? This operation cannot be undone.\",\n      primaryBtnText: \"Decline\",\n      secondaryBtnText: \"Cancel\",\n      clickSecondarybtn: () => hideAlert(),\n      clickPrimaryBtn: () => {\n        var _caseDescriptionModal;\n\n        handleDecline((_caseDescriptionModal = caseDescriptionModal.caseDetails) === null || _caseDescriptionModal === void 0 ? void 0 : _caseDescriptionModal.id);\n      },\n      isOpen: true,\n      onDialogClose: () => hideAlert()\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }\n  }), agentModal.state && /*#__PURE__*/React.createElement(AgentListModal, {\n    modal: agentModal,\n    setModal: setAgentModal,\n    type: \"claimant\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseRequests/index.js"],"names":["React","Fragment","useState","useRef","Container","ButtonWrapper","AcceptButton","DeclineButton","StyledTitle","TableWrapper","Padding","Heading","_","navigate","ActionBar","CustomTable","moment","CaseService","queryString","useLoader","formatNumberToMetrics","getErrorMessage","parseTimeStamp","useSnackbar","AssignPartyModal","labels","useAlert","Tooltip","HyperLink","CaseDescriptionModal","AgentListModal","theme","getCases","stringParams","response","caseRequests","error","Index","breadcrumbs","startCase","home","case_invites_received","state","setState","modal","setModal","MTRef","setLoader","enqueueSnackbar","hideAlert","showAlert","caseDescriptionModal","setCaseDescriptionModal","agentModal","setAgentModal","agents","columns","field","title","render","rowData","id","sorting","tooltip","headerStyle","paddingLeft","width","display","cellStyle","maxWidth","owner","name","respondentParty","respondentName","respondentParties","length","marginLeft","resolutionKind","minWidth","caseItems","totalClaimValue","parseFloat","toFixed","submittedOn","format","created_at","caseDetails","claimantParty","textAlign","handleAccept","require","heading","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","handleDecline","isOpen","onDialogClose","data","query","Promise","resolve","params","page","perPage","search","orderBy","sort","sortDirection","orderDirection","isEmpty","stringify","then","result","total","catch","variant","lastPage","message","declineCase","current","onSearchChange","caseObj","case","onBreadcrumbClick","selected","snakeCase","invites"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport {\n  Container,\n  ButtonWrapper,\n  AcceptButton,\n  DeclineButton,\n  StyledTitle,\n  TableWrapper,\n  Padding,\n} from \"./Styles\";\nimport { Heading } from \"../../../styles/component/style\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport ActionBar from \"../../common/ActionBar\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport moment from \"moment\";\nimport CaseService from \"../../../services/CaseService\";\nimport queryString from \"query-string\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport {\n  formatNumberToMetrics,\n  getErrorMessage,\n  parseTimeStamp,\n} from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport AssignPartyModal from \"./components/AssignPartyModal\";\nimport labels from \"../../../helpers/labels.json\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { HyperLink } from \"../../common/styled-components\";\nimport CaseDescriptionModal from \"./components/CaseDescriptionModal\";\nimport AgentListModal from \"../../common/AgentListModal\";\nimport theme from \"../../../assets/theme\";\n\nasync function getCases(stringParams) {\n  try {\n    const response = await CaseService.caseRequests(stringParams);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst Index = () => {\n  const breadcrumbs = [_.startCase(labels.home), labels.case_invites_received];\n  const [state, setState] = useState({});\n  const [modal, setModal] = useState({ state: false });\n  const MTRef = useRef();\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const { hideAlert, showAlert } = useAlert();\n  const [caseDescriptionModal, setCaseDescriptionModal] = useState({\n    state: false,\n  });\n  const [agentModal, setAgentModal] = useState({ state: false, agents: [] });\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.case_id\"],\n      render: (rowData) => <Padding>{rowData.id}</Padding>,\n      sorting: false,\n      tooltip: \"Unique Identifier for the Case across JustAct platform\",\n      headerStyle: {\n        paddingLeft: \"28px\",\n        width: 120,\n        display: \"flex\",\n      },\n      cellStyle: {\n        paddingLeft: \"28px\",\n        width: 120,\n      },\n    },\n    {\n      field: \"title\",\n      title: labels[\"table.case_title\"],\n      sorting: false,\n      render: (rowData) => <StyledTitle>{rowData.title}</StyledTitle>,\n      headerStyle: {\n        maxWidth: 270,\n      },\n      cellStyle: {\n        maxWidth: 250,\n      },\n    },\n    {\n      field: \"owner.name\",\n      title: labels[\"role.claimant\"],\n      sorting: false,\n      render: (rowData) => <>{_.startCase(rowData.owner.name)}</>,\n    },\n    {\n      field: \"respondentName\",\n      title: labels[\"role.respondent\"],\n      sorting: false,\n      render: (rowData) => (\n        <>\n          {rowData?.respondentParty?.name ? (\n            rowData.respondentParty.name\n          ) : rowData?.respondentName ? (\n            rowData.respondentName\n          ) : rowData?.respondentParties?.length ? (\n            rowData?.respondentParties[0]?.name\n          ) : (\n            <div style={{ marginLeft: 35 }}>-</div>\n          )}\n        </>\n      ),\n    },\n    {\n      field: \"resolutionKind\",\n      title: labels[\"table.caseType\"],\n      render: (rowData) => <>{_.startCase(rowData.resolutionKind)}</>,\n      headerStyle: {\n        minWidth: 140,\n      },\n      sorting: false,\n    },\n    {\n      field: \"totalClaimValue\",\n      title: labels[\"table.claim_value\"],\n      tooltip: \"Claim Value of the Case\",\n      render: (rowData) => {\n        const caseItems = rowData.totalClaimValue;\n        if (caseItems)\n          return (\n            \"INR \" +\n            formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\")\n          );\n        else return \"Non Monetary\";\n      },\n      headerStyle: {\n        minWidth: 140,\n      },\n    },\n    {\n      field: \"submittedOn\",\n      title: labels[\"table.received_on\"],\n      render: (rowData) => (\n        <>\n          {rowData?.submittedOn\n            ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\")\n            : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")}\n        </>\n      ),\n      headerStyle: {\n        minWidth: 120,\n      },\n    },\n    {\n      field: \"\",\n      sorting: false,\n      title: labels[\"table.description\"],\n      render: (rowData) => (\n        <HyperLink\n          onClick={() => {\n            setCaseDescriptionModal({ state: true, caseDetails: rowData });\n            setAgentModal({\n              state: false,\n              agents: rowData?.claimantParty?.agents,\n            });\n          }}\n        >\n          View\n        </HyperLink>\n      ),\n    },\n    {\n      field: \"actions\",\n      title: labels[\"table.actions\"],\n      sorting: false,\n      headerStyle: {\n        textAlign: \"center\",\n      },\n      render: (rowData) => (\n        <ButtonWrapper>\n          <Tooltip title=\"Accept Case\">\n            <AcceptButton onClick={() => handleAccept(rowData)}>\n              <img\n                src={require(\"../../../assets/images/checkBoxSelected.svg\")}\n                alt=\"accept\"\n              />\n            </AcceptButton>\n          </Tooltip>\n          <Tooltip title=\"Decline Case\">\n            <DeclineButton\n              onClick={() =>\n                showAlert({\n                  heading: \"Decline Case?\",\n                  desc: `Are you sure you want to decline this case invitation? A case once declined cannot be accepted later.`,\n                  // desc:\n                  //   \"Are you sure you want to decline this case invite? This operation cannot be undone.\",\n                  primaryBtnText: \"Decline\",\n                  secondaryBtnText: \"Cancel\",\n                  clickSecondarybtn: () => hideAlert(),\n                  clickPrimaryBtn: () => {\n                    handleDecline(rowData.id);\n                  },\n                  isOpen: true,\n                  onDialogClose: () => hideAlert(),\n                })\n              }\n            >\n              <img\n                src={require(\"../../../assets/images/closeButton.svg\")}\n                alt=\"decline\"\n              />\n            </DeclineButton>\n          </Tooltip>\n        </ButtonWrapper>\n      ),\n    },\n  ];\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        search: query.search,\n      };\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      getCases(stringParams)\n        .then((result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  async function handleDecline(id) {\n    try {\n      setLoader({ state: true, message: \"Rejecting Case...\" });\n      const response = await CaseService.declineCase(id);\n      if (response) {\n        enqueueSnackbar(\"Your have declined the invitation.\", {\n          variant: \"success\",\n        });\n        MTRef.current.onSearchChange(\"\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n      hideAlert();\n      setCaseDescriptionModal({ state: false });\n    }\n  }\n\n  async function handleAccept(caseObj) {\n    setCaseDescriptionModal({ state: false });\n    setModal({ state: true, case: caseObj });\n  }\n\n  const onBreadcrumbClick = (selected) => {\n    switch (_.snakeCase(selected)) {\n      case labels.home:\n        navigate(\"/dashboard\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Fragment>\n      <ActionBar {...{ breadcrumbs, onBreadcrumbClick }} />\n      <Container className=\"CreateCase\">\n        <Heading>{labels.case_invites_received}</Heading>\n        <TableWrapper>\n          <CustomTable\n            {...{\n              columns,\n              data,\n              state,\n              MTRef,\n            }}\n            noToolbar\n            pageSize={10}\n            singularTitle=\"\"\n            pluralTitle={labels.invites}\n          />\n        </TableWrapper>\n      </Container>\n      {modal.state && <AssignPartyModal {...{ modal, setModal, MTRef }} />}\n      {caseDescriptionModal.state && (\n        <CaseDescriptionModal\n          {...{\n            caseDescriptionModal,\n            setCaseDescriptionModal,\n            handleAccept,\n            setAgentModal,\n          }}\n          handleDecline={() =>\n            showAlert({\n              heading: \"Decline Case?\",\n              desc:\n                \"Are you sure you want to decline this case invite? This operation cannot be undone.\",\n              primaryBtnText: \"Decline\",\n              secondaryBtnText: \"Cancel\",\n              clickSecondarybtn: () => hideAlert(),\n              clickPrimaryBtn: () => {\n                handleDecline(caseDescriptionModal.caseDetails?.id);\n              },\n              isOpen: true,\n              onDialogClose: () => hideAlert(),\n            })\n          }\n        />\n      )}\n      {agentModal.state && (\n        <AgentListModal\n          modal={agentModal}\n          setModal={setAgentModal}\n          type=\"claimant\"\n        />\n      )}\n    </Fragment>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}