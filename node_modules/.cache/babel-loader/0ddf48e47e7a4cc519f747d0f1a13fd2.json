{"ast":null,"code":"import API from \"../api/manager\";\nimport config from \"../api/config\";\n\nconst createCartItem = data => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.cart.index,\n    data\n  });\n};\n\nconst addAllCart = data => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.cart.index + `/all`,\n    data\n  });\n};\n\nconst removeAllCart = data => {\n  return API({\n    method: \"DELETE\",\n    url: config.urls.cart.index + `/all`,\n    data\n  });\n};\n\nconst removeCartItem = id => {\n  return API({\n    method: \"DELETE\",\n    url: config.urls.cart.index + `/${id}`\n  });\n};\n\nconst getCart = () => {\n  return API({\n    method: \"GET\",\n    url: config.urls.cart.index\n  });\n};\n\nconst initiate = () => {\n  return API({\n    method: \"POST\",\n    url: config.urls.cart.index\n  });\n};\n\nconst capture = data => {\n  return API({\n    method: \"POST\",\n    url: config.urls.cart.capture,\n    data\n  });\n};\n\nconst getSelectedCartItem = query => {\n  return API({\n    method: \"GET\",\n    url: config.urls.cart.index + query\n  });\n};\n\nconst generatePerforma = () => {\n  return API({\n    method: \"POST\",\n    url: config.urls.cart.orders,\n    data: {}\n  });\n};\n\nconst payPerformaInvoice = data => {\n  return API({\n    method: \"POST\",\n    url: config.urls.cart.order,\n    data\n  });\n};\n\nexport default {\n  createCartItem,\n  removeCartItem,\n  addAllCart,\n  removeAllCart,\n  getCart,\n  initiate,\n  capture,\n  getSelectedCartItem,\n  generatePerforma,\n  payPerformaInvoice\n};","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/services/CartService.js"],"names":["API","config","createCartItem","data","method","url","urls","cart","index","addAllCart","removeAllCart","removeCartItem","id","getCart","initiate","capture","getSelectedCartItem","query","generatePerforma","orders","payPerformaInvoice","order"],"mappings":"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","sourcesContent":["import API from \"../api/manager\";\nimport config from \"../api/config\";\n\nconst createCartItem = (data) => {\n  return API({ method: \"PUT\", url: config.urls.cart.index, data });\n};\nconst addAllCart = (data) => {\n  return API({ method: \"PUT\", url: config.urls.cart.index + `/all`, data });\n};\nconst removeAllCart = (data) => {\n  return API({ method: \"DELETE\", url: config.urls.cart.index + `/all`, data });\n};\nconst removeCartItem = (id) => {\n  return API({ method: \"DELETE\", url: config.urls.cart.index + `/${id}` });\n};\nconst getCart = () => {\n  return API({ method: \"GET\", url: config.urls.cart.index });\n};\nconst initiate = () => {\n  return API({ method: \"POST\", url: config.urls.cart.index });\n};\nconst capture = (data) => {\n  return API({ method: \"POST\", url: config.urls.cart.capture, data });\n};\nconst getSelectedCartItem = (query) => {\n  return API({ method: \"GET\", url: config.urls.cart.index + query });\n};\n\nconst generatePerforma = () => {\n  return API({ method: \"POST\", url: config.urls.cart.orders, data: {} });\n};\n\nconst payPerformaInvoice = (data) => {\n  return API({ method: \"POST\", url: config.urls.cart.order, data });\n};\n\nexport default {\n  createCartItem,\n  removeCartItem,\n  addAllCart,\n  removeAllCart,\n  getCart,\n  initiate,\n  capture,\n  getSelectedCartItem,\n  generatePerforma,\n  payPerformaInvoice,\n};\n"]},"metadata":{},"sourceType":"module"}