{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CustomSelect/CustomSelectVisibility.js\";\nimport React from \"react\";\nimport { Select } from \"@material-ui/core\";\nimport { StyledSelectFormControl, StyledDropdownIcon } from \"./styles\";\nimport { StyledMenuItem, CustomCheckBox } from \"../FormInputs\";\nimport styled from \"styled-components\";\nimport _, { values } from \"lodash\";\nimport COLORS from \"../../../assets/Colors\";\nimport { Tooltip } from \"@material-ui/core\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport HttpsLockOpen from \"@material-ui/icons/LockOpen\";\nimport PublicIcon from \"@material-ui/icons/Public\";\n\nconst CustomSelect = ({\n  label,\n  name,\n  value = [],\n  onChange,\n  disabled,\n  menuItemValues,\n  multiple = false,\n  selectedItems = [],\n  white = false,\n  helperText,\n  showId = false,\n  ...props\n}) => {\n  function renderValue(selectValue) {\n    if (multiple) {\n      const selectedKeys = menuItemValues.filter(menuItemValue => selectValue === null || selectValue === void 0 ? void 0 : selectValue.includes(menuItemValue === null || menuItemValue === void 0 ? void 0 : menuItemValue.value)).map(menuItemValues => menuItemValues === null || menuItemValues === void 0 ? void 0 : menuItemValues.label);\n      return selectedKeys === null || selectedKeys === void 0 ? void 0 : selectedKeys.join(\", \");\n    } else {\n      const selectedKey = menuItemValues.find(menuItemValue => menuItemValue.value === selectValue);\n      return _.trim(selectValue) === \"\" ? /*#__PURE__*/React.createElement(PlaceHolderText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, selectedKey === null || selectedKey === void 0 ? void 0 : selectedKey.label) : selectedKey === null || selectedKey === void 0 ? void 0 : selectedKey.label;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(StyledSelectFormControl, {\n    className: white ? \"input-white\" : \"\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, Object.assign({\n    multiple,\n    name,\n    value,\n    onChange,\n    renderValue,\n    disabled\n  }, props, {\n    IconComponent: () => /*#__PURE__*/React.createElement(StyledDropdownIcon, {\n      alt: \"select\",\n      src: require(\"../../../assets/images/dropdownIcon.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }) // IconComponent={() => null}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), menuItemValues.map((item, idx) => /*#__PURE__*/React.createElement(StyledMenuItem, {\n    key: idx,\n    value: item.value,\n    disabled: item.disabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, item.label === \"me\" ? /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      color: COLORS.LOGOUT_RED\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, item.label) : item.label === \"others\" ? /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      color: COLORS.BOX_BLUE\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, item.label) : item.label))), helperText && /*#__PURE__*/React.createElement(ErrorLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 22\n    }\n  }, helperText));\n};\n\nexport default CustomSelect;\nconst PlaceHolderText = styled.div`\n  opacity: 0.5;\n`;\nconst ErrorLabel = styled.div`\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n  margin: 5px 0px 0px 5px;\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CustomSelect/CustomSelectVisibility.js"],"names":["React","Select","StyledSelectFormControl","StyledDropdownIcon","StyledMenuItem","CustomCheckBox","styled","_","values","COLORS","Tooltip","HttpsIcon","HttpsLockOpen","PublicIcon","CustomSelect","label","name","value","onChange","disabled","menuItemValues","multiple","selectedItems","white","helperText","showId","props","renderValue","selectValue","selectedKeys","filter","menuItemValue","includes","map","join","selectedKey","find","trim","require","item","idx","color","LOGOUT_RED","BOX_BLUE","PlaceHolderText","div","ErrorLabel"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Select } from \"@material-ui/core\";\nimport { StyledSelectFormControl, StyledDropdownIcon } from \"./styles\";\nimport { StyledMenuItem, CustomCheckBox } from \"../FormInputs\";\nimport styled from \"styled-components\";\nimport _, { values } from \"lodash\";\nimport COLORS from \"../../../assets/Colors\";\nimport { Tooltip } from \"@material-ui/core\";\nimport HttpsIcon from \"@material-ui/icons/Https\";\nimport HttpsLockOpen from \"@material-ui/icons/LockOpen\";\nimport PublicIcon from \"@material-ui/icons/Public\";\n\nconst CustomSelect = ({\n  label,\n  name,\n  value = [],\n  onChange,\n  disabled,\n  menuItemValues,\n  multiple = false,\n  selectedItems = [],\n  white = false,\n  helperText,\n  showId = false,\n  ...props\n}) => {\n  function renderValue(selectValue) {\n    if (multiple) {\n      const selectedKeys = menuItemValues\n        .filter(menuItemValue => selectValue?.includes(menuItemValue?.value))\n        .map(menuItemValues => menuItemValues?.label);\n      return selectedKeys?.join(\", \");\n    } else {\n      const selectedKey = menuItemValues.find(\n        menuItemValue => menuItemValue.value === selectValue\n      );\n      return _.trim(selectValue) === \"\" ? (\n        <PlaceHolderText>{selectedKey?.label}</PlaceHolderText>\n      ) : (\n        selectedKey?.label\n      );\n    }\n  }\n\n  return (\n    <StyledSelectFormControl\n      className={white ? \"input-white\" : \"\"}\n      variant=\"outlined\"\n    >\n      <Select\n        {...{ multiple, name, value, onChange, renderValue, disabled }}\n        {...props}\n        IconComponent={() => (\n          <StyledDropdownIcon\n            alt=\"select\"\n            src={require(\"../../../assets/images/dropdownIcon.svg\")}\n          />\n        )}\n        // IconComponent={() => null}\n      >\n        {menuItemValues.map((item, idx) => (\n          <StyledMenuItem key={idx} value={item.value} disabled={item.disabled}>\n            {item.label === \"me\" ? (\n              <b style={{ color: COLORS.LOGOUT_RED }}>{item.label}</b>\n            ) : item.label === \"others\" ? (\n              <b style={{ color: COLORS.BOX_BLUE }}>{item.label}</b>\n            ) : (\n              item.label\n            )}\n          </StyledMenuItem>\n        ))}\n      </Select>\n      {helperText && <ErrorLabel>{helperText}</ErrorLabel>}\n    </StyledSelectFormControl>\n  );\n};\n\nexport default CustomSelect;\n\nconst PlaceHolderText = styled.div`\n  opacity: 0.5;\n`;\n\nconst ErrorLabel = styled.div`\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n  margin: 5px 0px 0px 5px;\n`;\n"]},"metadata":{},"sourceType":"module"}