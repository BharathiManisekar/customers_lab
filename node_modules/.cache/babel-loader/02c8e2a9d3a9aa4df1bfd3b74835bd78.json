{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CasesTable/index.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2,\n    _theme$breakpoints3;\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport { navigate } from \"@reach/router\";\nimport queryString from \"query-string\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport CaseService from \"../../../services/CaseService\";\nimport FilterModal from \"./modal\";\nimport { formatNumberToMetrics, getCaseLabelByStatus, getErrorMessage, parseTimeStamp } from \"../../../helpers/functions\";\nimport { Drawer, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useSnackbar } from \"notistack\";\nimport usePrevious from \"../../../hooks/usePrevious\";\nimport labels from \"../../../helpers/labels.json\";\nimport PartyService from \"../../../services/PartyService\";\nimport { Footer } from \"../../internal/CaseCart/Styles\";\nimport { PrimaryCTAButton } from \"../Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport AlertDialog from \"../../common/Alert\";\nimport { DangerBtn } from \"../../../styles/component/style\";\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiDrawer-paperAnchorRight\": {\n      zIndex: 2001,\n      boxShadow: \"1px 0px 20px 0px rgba(0,0,0,0.2)\"\n    }\n  }\n});\n\nasync function getCases(query = \"\", id, caseType) {\n  try {\n    let stats = {};\n    const type = `?resolutionKind=${caseType}`;\n    const response = await CaseService.getCases(query);\n\n    if (id) {\n      stats = await PartyService.partyCaseStats(id);\n    } else {\n      stats = await CaseService.caseStatsByCaseType(type);\n    }\n\n    return { ...response,\n      stats\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst filterByStatus = selectedFilter => {\n  let key = \"status\";\n  let value = \"\";\n\n  switch (selectedFilter) {\n    case labels[\"filters.draft\"]:\n      value = \"draft\";\n      break;\n\n    case labels[\"filters.awaiting_payment\"]:\n      key = \"inCart\";\n      value = true;\n      break;\n\n    case labels[\"filters.under_resolution\"]:\n      value = \"underResolution\";\n      break;\n\n    case labels[\"filters.waiting_for_respondant\"]:\n      value = \"awaitingRespondent\";\n      break;\n\n    case labels[\"filters.settled\"]:\n      value = \"settled\";\n      break;\n\n    default:\n      break;\n  }\n\n  return {\n    key,\n    value\n  };\n};\n\nconst initFilters = [{\n  label: labels[\"filters.all\"],\n  key: \"allCount\",\n  value: 0\n}, {\n  label: labels[\"filters.waiting_for_respondant\"],\n  key: \"awaitingRespondentOnBoardingCount\",\n  value: 0\n}, {\n  label: labels[\"filters.under_resolution\"],\n  key: \"underResolution\",\n  value: 0\n}, {\n  label: labels[\"filters.settled\"],\n  key: \"settled\",\n  value: 0\n}, {\n  label: labels[\"filters.awaiting_payment\"],\n  key: \"inCartCount\",\n  value: 0\n}, {\n  label: labels[\"filters.draft\"],\n  key: \"draftCount\",\n  value: 0\n}];\nconst partyRoles = [{\n  label: labels[\"role.claimant\"],\n  value: \"claimant\"\n}, {\n  label: labels[\"role.respondent\"],\n  value: \"respondent\"\n}];\n\nconst CasesTable = ({\n  partyId = null,\n  status = null,\n  caseType = null,\n  draftSelection = false\n}) => {\n  var _state$data, _state$data2, _advanceFilter$partie3, _state$data3;\n\n  const [state, setState] = useState({});\n  const [filters, setFilters] = useState(initFilters);\n  const placeholderText = labels[\"table.caseSearch\"];\n  const [selectedFilter, setSelectedFilter] = useState(status ? status === \"Under Resolution\" ? status : _.capitalize(status) : \"All\");\n  const [advanceFilter, setAdvanceFilter] = useState({\n    parties: [],\n    role: partyRoles[0]\n  });\n  const filterPreviousValue = usePrevious(advanceFilter);\n  const [modal, setModal] = useState();\n  const MTRef = useRef();\n  const [noParty, setNoParty] = useState(false);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    setTriggerCount\n  } = useCartCount();\n  const [open, setOpen] = useState(false);\n  const [dialogData, setDialogData] = useState(false);\n  const themes = useTheme();\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(640));\n  console.log(\"selectedFilter\", advanceFilter);\n\n  function handleNavigateToParty(type, id, Case) {\n    var _Case$respondentParti;\n\n    switch (type) {\n      case \"draft\":\n        if (Case.totalClaimValue && caseType === \"negotiation\") {\n          navigate(`/dashboard/cases/create/${id}/step-3?caseType=${caseType}`);\n        } else if (Case.respondentName || Case.respondentMobile || Case.respondentEmail || Case.respondentPanNumber || (Case === null || Case === void 0 ? void 0 : (_Case$respondentParti = Case.respondentParties) === null || _Case$respondentParti === void 0 ? void 0 : _Case$respondentParti.length)) {\n          navigate(`/dashboard/cases/create/${id}/step-2?caseType=${caseType}`);\n        } else {\n          navigate(`/dashboard/cases/create/${id}?caseType=${caseType}`);\n        }\n\n        break;\n\n      default:\n        navigate(`/dashboard/cases/${id}?caseType=${caseType}`);\n        break;\n    }\n  }\n\n  function setStats(stats) {\n    const mapped = initFilters.map(filter => {\n      let returnData = {\n        label: filter.label,\n        value: filter.value\n      };\n\n      if (stats[filter.key] >= 0) {\n        returnData.value = stats[filter.key];\n      }\n\n      return returnData;\n    });\n    setFilters(mapped);\n  }\n\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.case_id\"],\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }\n    }, rowData.id),\n    tooltip: \"Unique Identifier for the Case across JustAct platform\",\n    headerStyle: {\n      maxWidth: 100,\n      width: 100,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      maxWidth: 100,\n      width: 100,\n      padding: `12px 16px`\n    } // headerStyle: {\n    //   minWidth: 80\n    // }\n\n  }, {\n    field: \"title\",\n    title: labels[\"table.case_title\"],\n    render: rowData => /*#__PURE__*/React.createElement(Bold, {\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, rowData.title),\n    // headerStyle: {\n    //   maxWidth: 80\n    // },\n    headerStyle: {\n      minWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      minWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    },\n    sorting: false\n  }, {\n    title: labels[\"table.party\"],\n    render: rowData => {\n      var _rowData$claimantPart;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 9\n        }\n      }, rowData === null || rowData === void 0 ? void 0 : (_rowData$claimantPart = rowData.claimantParty) === null || _rowData$claimantPart === void 0 ? void 0 : _rowData$claimantPart.name);\n    },\n    //render: (rowData) => <>{rowData?.claimantParty?.name}</>,\n    tooltip: \"Parties representing to file the case\",\n    sorting: false\n  }, {\n    field: \"role\",\n    title: labels[\"table.party_role\"],\n    tooltip: \"Your role is either Claimant or Respondent with respect to e case\",\n    render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, _.startCase(rowData.agentRole)),\n    //render: (rowData) => <>{_.startCase(rowData.agentRole)}</>,\n    sorting: false,\n    headerStyle: {\n      maxWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      minWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    }\n  }, {\n    field: \"respondentName\",\n    title: labels[\"table.counterparty\"],\n    tooltip: \"Party countering your case\",\n    sorting: false,\n    render: rowData => {\n      var _rowData$respondentPa, _rowData$respondentPa2, _rowData$respondentPa3;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          cursor: \"pointer\"\n        },\n        onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 9\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa = rowData.respondentParty) === null || _rowData$respondentPa === void 0 ? void 0 : _rowData$respondentPa.name) ? rowData.respondentParty.name : (rowData === null || rowData === void 0 ? void 0 : rowData.respondentName) ? rowData.respondentName : (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa2 = rowData.respondentParties) === null || _rowData$respondentPa2 === void 0 ? void 0 : _rowData$respondentPa2.length) ? rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa3 = rowData.respondentParties[0]) === null || _rowData$respondentPa3 === void 0 ? void 0 : _rowData$respondentPa3.name : /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, \"-\"));\n    },\n    headerStyle: {\n      maxWidth: 120,\n      width: 120,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      maxWidth: 120,\n      width: 120,\n      padding: `12px 16px`\n    } // headerStyle: {\n    //   minWidth: 140\n    // }\n\n  }, {\n    field: \"totalClaimValue\",\n    title: labels[\"table.claim_value\"],\n    tooltip: \"Claim Value of the Case\",\n    render: rowData => {\n      const divStyle = {\n        cursor: \"pointer\"\n      };\n      const caseItems = rowData.totalClaimValue;\n      if (caseItems) return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        style: divStyle,\n        onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }\n      }, \"INR \" + formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\"));else return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        style: divStyle,\n        onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, \"Non Monetary\");\n    },\n    // render: (rowData) => {\n    //   const caseItems = rowData.totalClaimValue;\n    //   if (caseItems)\n    //     return (\n    //       \"INR \" +\n    //       formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\")\n    //     );\n    //   else return \"Non Monetary\";\n    // },\n    sorting: false,\n    headerStyle: {\n      maxWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      maxWidth: 80,\n      width: 80,\n      padding: `12px 16px`\n    }\n  }, {\n    field: \"status\",\n    title: labels[\"table.status\"],\n    tooltip: \"Status of the Case\",\n    render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }\n    }, getCaseLabelByStatus(rowData)),\n    headerStyle: {\n      maxWidth: 50,\n      width: 50,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      maxWidth: 50,\n      width: 50,\n      padding: `12px 16px`\n    } //render: (rowData) => getCaseLabelByStatus(rowData),\n\n  }, {\n    field: \"nextHearingDate\",\n    title: labels[\"table.nextHearingDate\"],\n    render: rowData => {\n      var _rowData$nextHearingD, _rowData$nextHearingD2;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: 40\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 9\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : (_rowData$nextHearingD = rowData.nextHearingDate) === null || _rowData$nextHearingD === void 0 ? void 0 : _rowData$nextHearingD.date) ? rowData === null || rowData === void 0 ? void 0 : (_rowData$nextHearingD2 = rowData.nextHearingDate) === null || _rowData$nextHearingD2 === void 0 ? void 0 : _rowData$nextHearingD2.date : \"-\");\n    },\n    headerStyle: {\n      maxWidth: 50\n    } //render: (rowData) => getCaseLabelByStatus(rowData),\n\n  }, {\n    field: \"created_at\",\n    title: labels[\"table.created\"],\n    tooltip: \"Case Created Date\",\n    headerStyle: {\n      minWidth: 100,\n      width: 100,\n      padding: `12px 16px`\n    },\n    cellStyle: {\n      minWidth: 100,\n      width: 100,\n      padding: `12px 16px`\n    },\n    render: rowData => /*#__PURE__*/React.createElement(Datecolumn, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id, rowData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }\n    }, (rowData === null || rowData === void 0 ? void 0 : rowData.submittedOn) ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\") : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")), (rowData === null || rowData === void 0 ? void 0 : rowData.status) === \"draft\" && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"delete\",\n      onClick: () => deleteWaring(false, rowData === null || rowData === void 0 ? void 0 : rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 13\n      }\n    }, labels[\"table.delete\"]))\n  }];\n  /**\n   * @description Function to deleted the selected case\n   */\n\n  const deleteSelectedDraft = async () => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Deleting Cases...\"\n      });\n      const res = await CaseService.deleteSelectedCases();\n\n      if (res === null || res === void 0 ? void 0 : res.message) {\n        enqueueSnackbar(res === null || res === void 0 ? void 0 : res.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      MTRef.current.onQueryChange(\"\");\n      setOpen(false);\n    }\n  };\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n\n\n  const deleteDraft = async id => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Deleting Cases...\"\n      });\n      const res = await CaseService.deleteDraftCase(id);\n\n      if (res === null || res === void 0 ? void 0 : res.message) {\n        enqueueSnackbar(res === null || res === void 0 ? void 0 : res.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      MTRef.current.onQueryChange(\"\");\n      setOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    if ((selectedFilter || advanceFilter) && filterPreviousValue && caseType) {\n      var _MTRef$current, _MTRef$current$state;\n\n      MTRef.current.onQueryChange(MTRef === null || MTRef === void 0 ? void 0 : (_MTRef$current = MTRef.current) === null || _MTRef$current === void 0 ? void 0 : (_MTRef$current$state = _MTRef$current.state) === null || _MTRef$current$state === void 0 ? void 0 : _MTRef$current$state.query);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selectedFilter, advanceFilter, caseType]);\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy, _advanceFilter$partie;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10\n    };\n\n    if (partyId) {\n      params.partyId = partyId;\n    }\n\n    params.selected = true;\n    let partyQueryString = \"\";\n\n    if (query.search) {\n      params.search = query.search;\n    }\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    if (caseType) {\n      params.resolutionKind = caseType;\n    }\n\n    const {\n      key,\n      value\n    } = filterByStatus(selectedFilter);\n\n    if (key && value) {\n      params[key] = value;\n    }\n\n    if ((advanceFilter === null || advanceFilter === void 0 ? void 0 : (_advanceFilter$partie = advanceFilter.parties) === null || _advanceFilter$partie === void 0 ? void 0 : _advanceFilter$partie.length) > 0) {\n      var _advanceFilter$partie2;\n\n      const partyId = advanceFilter === null || advanceFilter === void 0 ? void 0 : (_advanceFilter$partie2 = advanceFilter.parties) === null || _advanceFilter$partie2 === void 0 ? void 0 : _advanceFilter$partie2.map(el => el.id);\n      partyQueryString = queryString.stringify({\n        partyIds: partyId\n      }, {\n        arrayFormat: \"index\"\n      });\n      params.agentRole = advanceFilter.role.value;\n    }\n\n    let stringParams = \"\";\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}`;\n    }\n\n    if (partyQueryString) {\n      stringParams += `&${partyQueryString}`;\n    }\n\n    getCases(stringParams, partyId, caseType).then(async result => {\n      if (result) {\n        if (result.message === \"Your are not associated with any Party\") {\n          resolve({\n            data: [],\n            page: 0,\n            total: 0\n          });\n          setState({\n            data: [],\n            lastPage: 1,\n            page: 1,\n            perPage: 10,\n            total: 0\n          });\n          setNoParty(true);\n        } else {\n          var _result$data;\n\n          const rowData = result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.map(row => ({ ...row,\n            tableData: {\n              checked: row === null || row === void 0 ? void 0 : row.isSelected\n            }\n          }));\n          resolve({\n            data: rowData,\n            page: result.page - 1,\n            total: result.total,\n            lastPage: result.lastPage\n          });\n          setState({\n            data: rowData,\n            page: result.page - 1,\n            total: result.total,\n            lastPage: result.lastPage\n          });\n          setStats(result.stats);\n        }\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  const handleCaseSelection = async (cases, data) => {\n    const param = `?resolutionKind=${caseType}`;\n\n    if ((cases === null || cases === void 0 ? void 0 : cases.length) > 1 && !data) {\n      try {\n        setLoader({\n          state: true,\n          message: \"Modifying Cases...\"\n        });\n        await CaseService.addAllCases(param);\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n        MTRef.current.onQueryChange(\"\");\n      }\n    } else if ((cases === null || cases === void 0 ? void 0 : cases.length) === 0 && !data) {\n      try {\n        setLoader({\n          state: true,\n          message: \"Modifying Cases...\"\n        });\n        await CaseService.removeAllCases(param);\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n        MTRef.current.onQueryChange(\"\");\n      }\n    } else {\n      try {\n        var _data$tableData;\n\n        setLoader({\n          state: true,\n          message: \"Modifying Cases...\"\n        });\n\n        if (data === null || data === void 0 ? void 0 : (_data$tableData = data.tableData) === null || _data$tableData === void 0 ? void 0 : _data$tableData.checked) {\n          await CaseService.selectCaseItem(data === null || data === void 0 ? void 0 : data.id);\n        } else {\n          await CaseService.removeCaseItem(data.id);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        }); // MTRef.current.onQueryChange(\"\");\n      }\n    }\n  };\n\n  const deleteWaring = (isSelectAll, id) => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () => isSelectAll ? deleteSelectedDraft() : deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case(s)?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  const submitCaseWarning = () => {\n    setOpen(true);\n    setDialogData({\n      secondaryBtnText: \"Cancel\",\n      primaryBtnText: \"Proceed\",\n      clickPrimaryBtn: () => selectAllSubmit(),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Before submitting the case, please check all the information that you have provided. The proceedings shall be conducted based on this information.`,\n      //desc: `Before submitting a case, please make sure that all the mandatory fields are entered for every case. In case of any data is missed, it might lead to data issue and the process cannot be undone.`,\n      heading: \"Submit Cases\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  const selectAllSubmit = async () => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting Cases...\"\n      });\n      const param = `?resolutionKind=${caseType}`;\n      const res = await CaseService.submitDraftCase(param);\n\n      if (res === null || res === void 0 ? void 0 : res.message) {\n        enqueueSnackbar(res === null || res === void 0 ? void 0 : res.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      setTriggerCount(true);\n      setOpen(false);\n      setDialogData({});\n      MTRef.current.onQueryChange(\"\");\n    }\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 5\n    }\n  }, columns.length > 0 && /*#__PURE__*/React.createElement(CustomTable, {\n    onSelectionChange: handleCaseSelection,\n    selection: draftSelection && selectedFilter === \"Draft\",\n    hidePagination: state.lastPage === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    pluralTitle: labels[\"cases\"],\n    singularTitle: noParty ? labels[\"party\"].toLowerCase() : labels[\"case\"].toLowerCase(),\n    customFilter: partyId ? false : true,\n    onFilterClick: () => setModal(true),\n    filterCount: advanceFilter === null || advanceFilter === void 0 ? void 0 : (_advanceFilter$partie3 = advanceFilter.parties) === null || _advanceFilter$partie3 === void 0 ? void 0 : _advanceFilter$partie3.length,\n    customMessage: noParty ? labels[\"table.caseError\"] : null,\n    columns,\n    data,\n    filters,\n    selectedFilter,\n    setSelectedFilter,\n    placeholderText,\n    MTRef,\n    state: state,\n    left: isBigScreen ? true : false,\n    top: isBigScreen ? \"140px\" : \"-50px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-row\",\n    style: {\n      display: selectedFilter === \"Draft\" && (state === null || state === void 0 ? void 0 : (_state$data3 = state.data) === null || _state$data3 === void 0 ? void 0 : _state$data3.some(el => {\n        var _el$tableData;\n\n        return (_el$tableData = el.tableData) === null || _el$tableData === void 0 ? void 0 : _el$tableData.checked;\n      })) ? \"flex\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DangerBtn, {\n    style: {\n      width: \"216px\",\n      marginLeft: \"26px\",\n      marginTop: 20\n    },\n    onClick: () => deleteWaring(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 13\n    }\n  }, labels[\"table.delete\"]), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    style: {\n      width: \"216px\",\n      marginLeft: \"26px\",\n      marginTop: 20\n    },\n    onClick: () => submitCaseWarning(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 13\n    }\n  }, labels.proceed)))), /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"persistent\",\n    className: classes.root,\n    anchor: \"right\",\n    open: modal,\n    onClose: () => setModal(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FilterModal, {\n    modal,\n    setModal,\n    advanceFilter,\n    setAdvanceFilter,\n    partyRoles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(AlertDialog, Object.assign({\n    isOpen: open\n  }, dialogData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default CasesTable;\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex: 1;\n  & .button-row {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 1;\n    @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n      flex-direction: row;\n      justify-content: flex-end;\n    }\n  }\n`;\nconst Container = styled.div``;\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n  padding-left: 29px;\n  ${({\n  disabled\n}) => disabled && css`\n      cursor: not-allowed;\n      opacity: 0.6;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n`;\nconst Datecolumn = styled.div`\n  .delete {\n    margin-top: 2px;\n    cursor: pointer;\n    color: ${COLORS.LOGOUT_RED};\n    font-size: 12px;\n  }\n`;\nconst Bold = styled.span`\n  cursor: pointer;\n  ${({\n  disabled\n}) => disabled && css`\n      cursor: not-allowed;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.sm_up} {\n    font-family: ${theme.fonts.primaryFontBold};\n  }\n`;\nconst Center = styled.div`\n  margin-left: 0;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints3 = theme.breakpoints) === null || _theme$breakpoints3 === void 0 ? void 0 : _theme$breakpoints3.lg_up} {\n    margin-left: 35px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CasesTable/index.js"],"names":["React","useState","useEffect","useRef","styled","css","COLORS","theme","CustomTable","navigate","queryString","_","moment","CaseService","FilterModal","formatNumberToMetrics","getCaseLabelByStatus","getErrorMessage","parseTimeStamp","Drawer","useMediaQuery","makeStyles","useTheme","useSnackbar","usePrevious","labels","PartyService","Footer","PrimaryCTAButton","useLoader","useCartCount","AlertDialog","DangerBtn","useStyles","root","zIndex","boxShadow","getCases","query","id","caseType","stats","type","response","partyCaseStats","caseStatsByCaseType","error","filterByStatus","selectedFilter","key","value","initFilters","label","partyRoles","CasesTable","partyId","status","draftSelection","state","setState","filters","setFilters","placeholderText","setSelectedFilter","capitalize","advanceFilter","setAdvanceFilter","parties","role","filterPreviousValue","modal","setModal","MTRef","noParty","setNoParty","enqueueSnackbar","setLoader","setTriggerCount","open","setOpen","dialogData","setDialogData","themes","isBigScreen","breakpoints","up","console","log","handleNavigateToParty","Case","totalClaimValue","respondentName","respondentMobile","respondentEmail","respondentPanNumber","respondentParties","length","setStats","mapped","map","filter","returnData","columns","field","title","render","rowData","tooltip","headerStyle","maxWidth","width","padding","cellStyle","minWidth","sorting","cursor","claimantParty","name","startCase","agentRole","respondentParty","divStyle","caseItems","parseFloat","toFixed","marginLeft","nextHearingDate","date","submittedOn","format","created_at","deleteWaring","deleteSelectedDraft","message","res","deleteSelectedCases","variant","current","onQueryChange","deleteDraft","deleteDraftCase","data","Promise","resolve","params","page","perPage","selected","partyQueryString","search","orderBy","sort","sortDirection","orderDirection","resolutionKind","el","stringify","partyIds","arrayFormat","stringParams","isEmpty","then","result","total","lastPage","row","tableData","checked","isSelected","catch","handleCaseSelection","cases","param","addAllCases","removeAllCases","selectCaseItem","removeCaseItem","isSelectAll","primaryBtnText","secondaryBtnText","clickPrimaryBtn","clickSecondarybtn","desc","heading","descriptionTextStyle","textAlign","submitCaseWarning","selectAllSubmit","submitDraftCase","classes","toLowerCase","display","some","marginTop","proceed","ButtonContainer","div","sm_up","Container","HyperLink","span","BTN_GREEN","disabled","Datecolumn","LOGOUT_RED","Bold","fonts","primaryFontBold","Center","lg_up"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport { navigate } from \"@reach/router\";\nimport queryString from \"query-string\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport CaseService from \"../../../services/CaseService\";\nimport FilterModal from \"./modal\";\nimport {\n  formatNumberToMetrics,\n  getCaseLabelByStatus,\n  getErrorMessage,\n  parseTimeStamp\n} from \"../../../helpers/functions\";\nimport { Drawer, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useSnackbar } from \"notistack\";\nimport usePrevious from \"../../../hooks/usePrevious\";\nimport labels from \"../../../helpers/labels.json\";\nimport PartyService from \"../../../services/PartyService\";\nimport { Footer } from \"../../internal/CaseCart/Styles\";\nimport { PrimaryCTAButton } from \"../Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport AlertDialog from \"../../common/Alert\";\nimport { DangerBtn } from \"../../../styles/component/style\";\n\nconst useStyles = makeStyles({\n  root: {\n    \"& .MuiDrawer-paperAnchorRight\": {\n      zIndex: 2001,\n      boxShadow: \"1px 0px 20px 0px rgba(0,0,0,0.2)\"\n    }\n  }\n});\n\nasync function getCases(query = \"\", id, caseType) {\n  try {\n    let stats = {};\n    const type = `?resolutionKind=${caseType}`;\n    const response = await CaseService.getCases(query);\n    if (id) {\n      stats = await PartyService.partyCaseStats(id);\n    } else {\n      stats = await CaseService.caseStatsByCaseType(type);\n    }\n    return { ...response, stats };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst filterByStatus = selectedFilter => {\n  let key = \"status\";\n  let value = \"\";\n  switch (selectedFilter) {\n    case labels[\"filters.draft\"]:\n      value = \"draft\";\n      break;\n    case labels[\"filters.awaiting_payment\"]:\n      key = \"inCart\";\n      value = true;\n      break;\n    case labels[\"filters.under_resolution\"]:\n      value = \"underResolution\";\n      break;\n    case labels[\"filters.waiting_for_respondant\"]:\n      value = \"awaitingRespondent\";\n      break;\n    case labels[\"filters.settled\"]:\n      value = \"settled\";\n      break;\n    default:\n      break;\n  }\n  return { key, value };\n};\n\nconst initFilters = [\n  { label: labels[\"filters.all\"], key: \"allCount\", value: 0 },\n  {\n    label: labels[\"filters.waiting_for_respondant\"],\n    key: \"awaitingRespondentOnBoardingCount\",\n    value: 0\n  },\n  {\n    label: labels[\"filters.under_resolution\"],\n    key: \"underResolution\",\n    value: 0\n  },\n  { label: labels[\"filters.settled\"], key: \"settled\", value: 0 },\n  { label: labels[\"filters.awaiting_payment\"], key: \"inCartCount\", value: 0 },\n  { label: labels[\"filters.draft\"], key: \"draftCount\", value: 0 }\n];\n\nconst partyRoles = [\n  { label: labels[\"role.claimant\"], value: \"claimant\" },\n  { label: labels[\"role.respondent\"], value: \"respondent\" }\n];\n\nconst CasesTable = ({\n  partyId = null,\n  status = null,\n  caseType = null,\n  draftSelection = false\n}) => {\n  const [state, setState] = useState({});\n  const [filters, setFilters] = useState(initFilters);\n  const placeholderText = labels[\"table.caseSearch\"];\n  const [selectedFilter, setSelectedFilter] = useState(\n    status\n      ? status === \"Under Resolution\"\n        ? status\n        : _.capitalize(status)\n      : \"All\"\n  );\n  const [advanceFilter, setAdvanceFilter] = useState({\n    parties: [],\n    role: partyRoles[0]\n  });\n  const filterPreviousValue = usePrevious(advanceFilter);\n  const [modal, setModal] = useState();\n  const MTRef = useRef();\n  const [noParty, setNoParty] = useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  const { setLoader } = useLoader();\n  const { setTriggerCount } = useCartCount();\n\n  const [open, setOpen] = useState(false);\n  const [dialogData, setDialogData] = useState(false);\n  const themes = useTheme();\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(640));\n\n  console.log(\"selectedFilter\", advanceFilter);\n\n  function handleNavigateToParty(type, id, Case) {\n    switch (type) {\n      case \"draft\":\n        if (Case.totalClaimValue && caseType === \"negotiation\") {\n          navigate(`/dashboard/cases/create/${id}/step-3?caseType=${caseType}`);\n        } else if (\n          Case.respondentName ||\n          Case.respondentMobile ||\n          Case.respondentEmail ||\n          Case.respondentPanNumber ||\n          Case?.respondentParties?.length\n        ) {\n          navigate(`/dashboard/cases/create/${id}/step-2?caseType=${caseType}`);\n        } else {\n          navigate(`/dashboard/cases/create/${id}?caseType=${caseType}`);\n        }\n        break;\n      default:\n        navigate(`/dashboard/cases/${id}?caseType=${caseType}`);\n        break;\n    }\n  }\n\n  function setStats(stats) {\n    const mapped = initFilters.map(filter => {\n      let returnData = {\n        label: filter.label,\n        value: filter.value\n      };\n      if (stats[filter.key] >= 0) {\n        returnData.value = stats[filter.key];\n      }\n      return returnData;\n    });\n    setFilters(mapped);\n  }\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.case_id\"],\n      render: rowData => (\n        <HyperLink\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {rowData.id}\n        </HyperLink>\n      ),\n      tooltip: \"Unique Identifier for the Case across JustAct platform\",\n      headerStyle: {\n        maxWidth: 100,\n        width: 100,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        maxWidth: 100,\n        width: 100,\n        padding: `12px 16px`\n      }\n      // headerStyle: {\n      //   minWidth: 80\n      // }\n    },\n    {\n      field: \"title\",\n      title: labels[\"table.case_title\"],\n      render: rowData => (\n        <Bold\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {rowData.title}\n        </Bold>\n      ),\n      // headerStyle: {\n      //   maxWidth: 80\n      // },\n      headerStyle: {\n        minWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        minWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n      sorting: false\n    },\n    {\n      title: labels[\"table.party\"],\n      render: rowData => (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {rowData?.claimantParty?.name}\n        </div>\n      ),\n      //render: (rowData) => <>{rowData?.claimantParty?.name}</>,\n      tooltip: \"Parties representing to file the case\",\n      sorting: false\n    },\n    {\n      field: \"role\",\n      title: labels[\"table.party_role\"],\n      tooltip:\n        \"Your role is either Claimant or Respondent with respect to e case\",\n      render: rowData => (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {_.startCase(rowData.agentRole)}\n        </div>\n      ),\n      //render: (rowData) => <>{_.startCase(rowData.agentRole)}</>,\n      sorting: false,\n      headerStyle: {\n        maxWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        minWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n    },\n    {\n      field: \"respondentName\",\n      title: labels[\"table.counterparty\"],\n      tooltip: \"Party countering your case\",\n      sorting: false,\n      render: rowData => (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {rowData?.respondentParty?.name ? (\n            rowData.respondentParty.name\n          ) : rowData?.respondentName ? (\n            rowData.respondentName\n          ) : rowData?.respondentParties?.length ? (\n            rowData?.respondentParties[0]?.name\n          ) : (\n            <Center>-</Center>\n          )}\n        </div>\n      ),\n      headerStyle: {\n        maxWidth: 120,\n        width: 120,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        maxWidth: 120,\n        width: 120,\n        padding: `12px 16px`\n      },\n      // headerStyle: {\n      //   minWidth: 140\n      // }\n    },\n    {\n      field: \"totalClaimValue\",\n      title: labels[\"table.claim_value\"],\n      tooltip: \"Claim Value of the Case\",\n      render: rowData => {\n        const divStyle = {\n          cursor: \"pointer\"\n        };\n        const caseItems = rowData.totalClaimValue;\n        if (caseItems)\n          return (\n            <div\n              className=\"container\"\n              style={divStyle}\n              onClick={() =>\n                handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n              }\n            >\n              {\"INR \" +\n                formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\")}\n            </div>\n          );\n        else\n          return (\n            <div\n              className=\"container\"\n              style={divStyle}\n              onClick={() =>\n                handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n              }\n            >\n              {\"Non Monetary\"}\n            </div>\n          );\n      },\n      // render: (rowData) => {\n      //   const caseItems = rowData.totalClaimValue;\n      //   if (caseItems)\n      //     return (\n      //       \"INR \" +\n      //       formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\")\n      //     );\n      //   else return \"Non Monetary\";\n      // },\n      sorting: false,\n      headerStyle: {\n        maxWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        maxWidth: 80,\n        width: 80,\n        padding: `12px 16px`\n      },\n    },\n    {\n      field: \"status\",\n      title: labels[\"table.status\"],\n      tooltip: \"Status of the Case\",\n      render: rowData => (\n        <div\n          style={{ cursor: \"pointer\" }}\n          onClick={() =>\n            handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n          }\n        >\n          {getCaseLabelByStatus(rowData)}\n        </div>\n      ),\n      headerStyle: {\n        maxWidth: 50,\n        width: 50,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        maxWidth: 50,\n        width: 50,\n        padding: `12px 16px`\n      },\n      //render: (rowData) => getCaseLabelByStatus(rowData),\n    },\n    {\n      field: \"nextHearingDate\",\n      title: labels[\"table.nextHearingDate\"],\n      render: rowData => (\n        <div style={{ marginLeft: 40 }}>\n          {rowData?.nextHearingDate?.date\n            ? rowData?.nextHearingDate?.date\n            : \"-\"}\n        </div>\n      ),\n      headerStyle: {\n        maxWidth: 50,\n      }\n      //render: (rowData) => getCaseLabelByStatus(rowData),\n    },\n    {\n      field: \"created_at\",\n      title: labels[\"table.created\"],\n      tooltip: \"Case Created Date\",\n      headerStyle: {\n        minWidth: 100,\n        width: 100,\n        padding: `12px 16px`\n      },\n      cellStyle: {\n        minWidth: 100,\n        width: 100,\n        padding: `12px 16px`\n      },\n      render: rowData => (\n        <Datecolumn>\n          <div\n            style={{ cursor: \"pointer\" }}\n            onClick={() =>\n              handleNavigateToParty(rowData?.status, rowData?.id, rowData)\n            }\n          >\n            {rowData?.submittedOn\n              ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\")\n              : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")}\n          </div>\n          {rowData?.status === \"draft\" && (\n            <div\n              className=\"delete\"\n              onClick={() => deleteWaring(false, rowData?.id)}\n            >\n              {labels[\"table.delete\"]}\n            </div>\n          )}\n        </Datecolumn>\n      )\n    }\n  ];\n\n  /**\n   * @description Function to deleted the selected case\n   */\n  const deleteSelectedDraft = async () => {\n    try {\n      setLoader({ state: true, message: \"Deleting Cases...\" });\n      const res = await CaseService.deleteSelectedCases();\n      if (res?.message) {\n        enqueueSnackbar(res?.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({ state: false });\n      MTRef.current.onQueryChange(\"\");\n      setOpen(false);\n    }\n  };\n\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n  const deleteDraft = async id => {\n    try {\n      setLoader({ state: true, message: \"Deleting Cases...\" });\n      const res = await CaseService.deleteDraftCase(id);\n      if (res?.message) {\n        enqueueSnackbar(res?.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({ state: false });\n      MTRef.current.onQueryChange(\"\");\n      setOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    if ((selectedFilter || advanceFilter) && filterPreviousValue && caseType) {\n      MTRef.current.onQueryChange(MTRef?.current?.state?.query);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedFilter, advanceFilter, caseType]);\n\n  const data = query =>\n    new Promise(resolve => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10\n      };\n      if (partyId) {\n        params.partyId = partyId;\n      }\n      params.selected = true;\n      let partyQueryString = \"\";\n      if (query.search) {\n        params.search = query.search;\n      }\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      if (caseType) {\n        params.resolutionKind = caseType;\n      }\n      const { key, value } = filterByStatus(selectedFilter);\n      if (key && value) {\n        params[key] = value;\n      }\n      if (advanceFilter?.parties?.length > 0) {\n        const partyId = advanceFilter?.parties?.map(el => el.id);\n        partyQueryString = queryString.stringify(\n          { partyIds: partyId },\n          { arrayFormat: \"index\" }\n        );\n        params.agentRole = advanceFilter.role.value;\n      }\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      if (partyQueryString) {\n        stringParams += `&${partyQueryString}`;\n      }\n      getCases(stringParams, partyId, caseType)\n        .then(async result => {\n          if (result) {\n            if (result.message === \"Your are not associated with any Party\") {\n              resolve({\n                data: [],\n                page: 0,\n                total: 0\n              });\n              setState({\n                data: [],\n                lastPage: 1,\n                page: 1,\n                perPage: 10,\n                total: 0\n              });\n              setNoParty(true);\n            } else {\n              const rowData = result?.data?.map(row => ({\n                ...row,\n                tableData: { checked: row?.isSelected }\n              }));\n              resolve({\n                data: rowData,\n                page: result.page - 1,\n                total: result.total,\n                lastPage: result.lastPage\n              });\n              setState({\n                data: rowData,\n                page: result.page - 1,\n                total: result.total,\n                lastPage: result.lastPage\n              });\n              setStats(result.stats);\n            }\n          }\n        })\n        .catch(error => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\"\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0\n          });\n        });\n    });\n\n  const handleCaseSelection = async (cases, data) => {\n    const param = `?resolutionKind=${caseType}`;\n    if (cases?.length > 1 && !data) {\n      try {\n        setLoader({ state: true, message: \"Modifying Cases...\" });\n        await CaseService.addAllCases(param);\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({ state: false });\n        MTRef.current.onQueryChange(\"\");\n      }\n    } else if (cases?.length === 0 && !data) {\n      try {\n        setLoader({ state: true, message: \"Modifying Cases...\" });\n        await CaseService.removeAllCases(param);\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({ state: false });\n        MTRef.current.onQueryChange(\"\");\n      }\n    } else {\n      try {\n        setLoader({ state: true, message: \"Modifying Cases...\" });\n        if (data?.tableData?.checked) {\n          await CaseService.selectCaseItem(data?.id);\n        } else {\n          await CaseService.removeCaseItem(data.id);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({ state: false });\n        // MTRef.current.onQueryChange(\"\");\n      }\n    }\n  };\n\n  const deleteWaring = (isSelectAll, id) => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () =>\n        isSelectAll ? deleteSelectedDraft() : deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case(s)?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  const submitCaseWarning = () => {\n    setOpen(true);\n    setDialogData({\n      secondaryBtnText: \"Cancel\",\n      primaryBtnText: \"Proceed\",\n      clickPrimaryBtn: () => selectAllSubmit(),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Before submitting the case, please check all the information that you have provided. The proceedings shall be conducted based on this information.`,\n      //desc: `Before submitting a case, please make sure that all the mandatory fields are entered for every case. In case of any data is missed, it might lead to data issue and the process cannot be undone.`,\n      heading: \"Submit Cases\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  const selectAllSubmit = async () => {\n    try {\n      setLoader({ state: true, message: \"Submitting Cases...\" });\n      const param = `?resolutionKind=${caseType}`;\n      const res = await CaseService.submitDraftCase(param);\n      if (res?.message) {\n        enqueueSnackbar(res?.message, {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({ state: false });\n      setTriggerCount(true);\n      setOpen(false);\n      setDialogData({});\n      MTRef.current.onQueryChange(\"\");\n    }\n  };\n\n  const classes = useStyles();\n  return (\n    <Container>\n      {columns.length > 0 && (\n        <CustomTable\n          onSelectionChange={handleCaseSelection}\n          selection={draftSelection && selectedFilter === \"Draft\"}\n          hidePagination={state.lastPage === 1}\n          pageSize={state?.data?.length ? state?.data?.length : 10}\n          pluralTitle={labels[\"cases\"]}\n          singularTitle={\n            noParty\n              ? labels[\"party\"].toLowerCase()\n              : labels[\"case\"].toLowerCase()\n          }\n          customFilter={partyId ? false : true}\n          onFilterClick={() => setModal(true)}\n          filterCount={advanceFilter?.parties?.length}\n          customMessage={noParty ? labels[\"table.caseError\"] : null}\n          {...{\n            columns,\n            data,\n            filters,\n            selectedFilter,\n            setSelectedFilter,\n            placeholderText,\n            MTRef\n          }}\n          state={state}\n          left={isBigScreen ? true : false}\n          top={isBigScreen ? \"140px\" : \"-50px\"}\n        />\n      )}\n\n      <Footer>\n        <ButtonContainer>\n          <div\n            className=\"button-row\"\n            style={{\n              display:\n                selectedFilter === \"Draft\" &&\n                state?.data?.some(el => el.tableData?.checked)\n                  ? \"flex\"\n                  : \"none\"\n            }}\n          >\n            <DangerBtn\n              style={{\n                width: \"216px\",\n                marginLeft: \"26px\",\n                marginTop: 20\n              }}\n              onClick={() => deleteWaring(true)}\n            >\n              {labels[\"table.delete\"]}\n            </DangerBtn>\n\n            <PrimaryCTAButton\n              style={{\n                width: \"216px\",\n                marginLeft: \"26px\",\n                marginTop: 20\n              }}\n              onClick={() => submitCaseWarning()}\n            >\n              {labels.proceed}\n            </PrimaryCTAButton>\n          </div>\n        </ButtonContainer>\n      </Footer>\n      <Drawer\n        variant=\"persistent\"\n        className={classes.root}\n        anchor={\"right\"}\n        open={modal}\n        onClose={() => setModal(false)}\n      >\n        <FilterModal\n          {...{\n            modal,\n            setModal,\n            advanceFilter,\n            setAdvanceFilter,\n            partyRoles\n          }}\n        />\n      </Drawer>\n      <AlertDialog isOpen={open} {...{ ...dialogData }} />\n    </Container>\n  );\n};\n\nexport default CasesTable;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex: 1;\n  & .button-row {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    flex: 1;\n    @media ${theme?.breakpoints?.sm_up} {\n      flex-direction: row;\n      justify-content: flex-end;\n    }\n  }\n`;\n\nconst Container = styled.div``;\n\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n  padding-left: 29px;\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      cursor: not-allowed;\n      opacity: 0.6;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n`;\n\nconst Datecolumn = styled.div`\n  .delete {\n    margin-top: 2px;\n    cursor: pointer;\n    color: ${COLORS.LOGOUT_RED};\n    font-size: 12px;\n  }\n`;\n\nconst Bold = styled.span`\n  cursor: pointer;\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      cursor: not-allowed;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n  @media ${theme?.breakpoints?.sm_up} {\n    font-family: ${theme.fonts.primaryFontBold};\n  }\n`;\n\nconst Center = styled.div`\n  margin-left: 0;\n  @media ${theme?.breakpoints?.lg_up} {\n    margin-left: 35px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}