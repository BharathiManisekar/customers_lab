{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentRefund/index.js\";\nimport React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport { Container, TableWrapper, HyperLink, StyledAmount, TopCenter, Center } from \"../PaymentHistory/Styles\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport { getErrorMessage, getFileName, parseTimeStamp } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getPaymentRefunds(query = \"\") {\n  try {\n    const response = await CaseService.getRefundHistory(query);\n    console.log(response);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst PaymentRefund = () => {\n  var _state$data, _state$data2;\n\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const placeholderText = \"Search Refund\";\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [triggerRefresh, setTriggerRefresh] = useState(false);\n  useEffect(() => {\n    if (triggerRefresh) {\n      var _MTRef$current, _MTRef$current$state;\n\n      MTRef.current.onQueryChange(MTRef === null || MTRef === void 0 ? void 0 : (_MTRef$current = MTRef.current) === null || _MTRef$current === void 0 ? void 0 : (_MTRef$current$state = _MTRef$current.state) === null || _MTRef$current$state === void 0 ? void 0 : _MTRef$current$state.query);\n      setTriggerRefresh(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [triggerRefresh]);\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.order_id\"],\n    tooltip: \"Payment order identifier\",\n    sorting: true,\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TopCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, rowData === null || rowData === void 0 ? void 0 : rowData.id)),\n    cellStyle: {\n      paddingLeft: 32\n    }\n  }, {\n    field: \"id\",\n    title: labels[\"table.refund_invoice_id\"],\n    tooltip: \"Invoice identifier\",\n    sorting: true,\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      style: {\n        textDecoration: \"none\",\n        cursor: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, rowData === null || rowData === void 0 ? void 0 : rowData.id)\n  }, {\n    field: \"parties.name\",\n    title: labels[\"table.party_name\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$party;\n\n      return rowData === null || rowData === void 0 ? void 0 : (_rowData$party = rowData.party) === null || _rowData$party === void 0 ? void 0 : _rowData$party.name;\n    }\n  }, {\n    field: \"amount\",\n    title: labels[\"table.total_amount\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$cartItem, _rowData$cartItem$amo;\n\n      return /*#__PURE__*/React.createElement(StyledAmount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, \"INR \", rowData === null || rowData === void 0 ? void 0 : (_rowData$cartItem = rowData.cartItem) === null || _rowData$cartItem === void 0 ? void 0 : (_rowData$cartItem$amo = _rowData$cartItem.amount) === null || _rowData$cartItem$amo === void 0 ? void 0 : _rowData$cartItem$amo.toFixed(2));\n    }\n  }, {\n    field: \"amount\",\n    title: labels[\"table.refund_amount\"],\n    tooltip: \"The amount approved for refund\",\n    sorting: false,\n    render: rowData => {\n      var _rowData$refundInfo;\n\n      return /*#__PURE__*/React.createElement(StyledAmount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }\n      }, \"INR\", \" \", !_.isEmpty(rowData.refundInfo) ? Number(`${rowData === null || rowData === void 0 ? void 0 : (_rowData$refundInfo = rowData.refundInfo) === null || _rowData$refundInfo === void 0 ? void 0 : _rowData$refundInfo.totalRefund}`).toFixed(2) : Number(`${rowData === null || rowData === void 0 ? void 0 : rowData.allowedRefund.refundAmount}`).toFixed(2));\n    }\n  }, {\n    field: \"created_at\",\n    title: labels[\"table.date\"],\n    sorting: false,\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, moment(parseTimeStamp(rowData === null || rowData === void 0 ? void 0 : rowData.created_at)).format(\"DD/MM/YYYY\"))\n  }, {\n    field: \"invoiceUrl\",\n    title: labels[\"table.download\"],\n    sorting: false,\n    render: rowData => {\n      var _getFileName;\n\n      return (rowData === null || rowData === void 0 ? void 0 : rowData.refundReceiptUrl) ? /*#__PURE__*/React.createElement(HyperLink, {\n        style: {\n          wordBreak: \"break-word\",\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        },\n        onClick: () => window.open(rowData === null || rowData === void 0 ? void 0 : rowData.refundReceiptUrl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : rowData.refundReceiptUrl) ? (_getFileName = getFileName(rowData === null || rowData === void 0 ? void 0 : rowData.refundReceiptUrl)) === null || _getFileName === void 0 ? void 0 : _getFileName.split(\".pdf\")[0] : \"Download\") : /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, \"-\");\n    }\n  }];\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      kind: \"refund\"\n    };\n\n    if (query.search) {\n      params.query = query.search;\n    }\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}`;\n    }\n\n    getPaymentRefunds(stringParams).then(async result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"CreateCase\",\n    style: {\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    hidePagination: state.lastPage === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    pluralTitle: labels.payment_refund,\n    singularTitle: \"\",\n    columns,\n    MTRef,\n    placeholderText,\n    data,\n    //noToolbar\n    hideFilterBar: true,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default PaymentRefund;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentRefund/index.js"],"names":["React","Fragment","useState","useRef","useEffect","Container","TableWrapper","HyperLink","StyledAmount","TopCenter","Center","_","queryString","CustomTable","CaseService","moment","getErrorMessage","getFileName","parseTimeStamp","useSnackbar","labels","getPaymentRefunds","query","response","getRefundHistory","console","log","error","PaymentRefund","state","setState","MTRef","placeholderText","enqueueSnackbar","triggerRefresh","setTriggerRefresh","current","onQueryChange","columns","field","title","tooltip","sorting","render","rowData","id","cellStyle","paddingLeft","textDecoration","cursor","party","name","cartItem","amount","toFixed","isEmpty","refundInfo","Number","totalRefund","allowedRefund","refundAmount","created_at","format","refundReceiptUrl","wordBreak","window","open","split","data","Promise","resolve","params","page","perPage","kind","search","orderBy","sort","sortDirection","orderDirection","stringParams","stringify","then","result","total","catch","variant","lastPage","overflow","length","payment_refund"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef, useEffect } from \"react\";\nimport {\n  Container,\n  TableWrapper,\n  HyperLink,\n  StyledAmount,\n  TopCenter,\n  Center,\n} from \"../PaymentHistory/Styles\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport {\n  getErrorMessage,\n  getFileName,\n  parseTimeStamp,\n} from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getPaymentRefunds(query = \"\") {\n  try {\n    const response = await CaseService.getRefundHistory(query);\n    console.log(response);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\nconst PaymentRefund = () => {\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const placeholderText = \"Search Refund\";\n  const { enqueueSnackbar } = useSnackbar();\n  const [triggerRefresh, setTriggerRefresh] = useState(false);\n\n  useEffect(() => {\n    if (triggerRefresh) {\n      MTRef.current.onQueryChange(MTRef?.current?.state?.query);\n      setTriggerRefresh(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [triggerRefresh]);\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.order_id\"],\n      tooltip: \"Payment order identifier\",\n      sorting: true,\n      render: (rowData) => (\n        <HyperLink>\n          <TopCenter>{rowData?.id}</TopCenter>\n        </HyperLink>\n      ),\n      cellStyle: {\n        paddingLeft: 32,\n      },\n    },\n    {\n      field: \"id\",\n      title: labels[\"table.refund_invoice_id\"],\n      tooltip: \"Invoice identifier\",\n      sorting: true,\n      render: (rowData) => (\n        <HyperLink\n          style={{\n            textDecoration: \"none\",\n            cursor: \"inherit\",\n          }}\n        >\n          {rowData?.id}\n        </HyperLink>\n      ),\n    },\n    {\n      field: \"parties.name\",\n      title: labels[\"table.party_name\"],\n      sorting: false,\n      render: (rowData) => rowData?.party?.name,\n    },\n    {\n      field: \"amount\",\n      title: labels[\"table.total_amount\"],\n      sorting: false,\n      render: (rowData) => (\n        <StyledAmount>INR {rowData?.cartItem?.amount?.toFixed(2)}</StyledAmount>\n      ),\n    },\n    {\n      field: \"amount\",\n      title: labels[\"table.refund_amount\"],\n      tooltip: \"The amount approved for refund\",\n      sorting: false,\n      render: (rowData) => (\n        <StyledAmount>\n          INR{\" \"}\n          {!_.isEmpty(rowData.refundInfo)\n            ? Number(`${rowData?.refundInfo?.totalRefund}`).toFixed(2)\n            : Number(`${rowData?.allowedRefund.refundAmount}`).toFixed(2)}\n        </StyledAmount>\n      ),\n    },\n    {\n      field: \"created_at\",\n      title: labels[\"table.date\"],\n      sorting: false,\n      render: (rowData) => (\n        <>{moment(parseTimeStamp(rowData?.created_at)).format(\"DD/MM/YYYY\")}</>\n      ),\n    },\n    {\n      field: \"invoiceUrl\",\n      title: labels[\"table.download\"],\n      sorting: false,\n      render: (rowData) =>\n        rowData?.refundReceiptUrl ? (\n          <HyperLink\n            style={{\n              wordBreak: \"break-word\",\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => window.open(rowData?.refundReceiptUrl)}\n          >\n            {rowData?.refundReceiptUrl\n              ? getFileName(rowData?.refundReceiptUrl)?.split(\".pdf\")[0]\n              : \"Download\"}\n          </HyperLink>\n        ) : (\n          <Center>-</Center>\n        ),\n    },\n  ];\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        kind: \"refund\",\n      };\n      if (query.search) {\n        params.query = query.search;\n      }\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      getPaymentRefunds(stringParams)\n        .then(async (result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  return (\n    <Fragment>\n      <Container className=\"CreateCase\" style={{ overflow: \"hidden\" }}>\n        <TableWrapper>\n          <CustomTable\n            hidePagination={state.lastPage === 1}\n            pageSize={state?.data?.length ? state?.data?.length : 10}\n            pluralTitle={labels.payment_refund}\n            singularTitle=\"\"\n            {...{\n              columns,\n              MTRef,\n              placeholderText,\n              data,\n            }}\n            //noToolbar\n            hideFilterBar\n            state={state}\n          />\n        </TableWrapper>\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default PaymentRefund;\n"]},"metadata":{},"sourceType":"module"}