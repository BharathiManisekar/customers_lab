{"ast":null,"code":"/**\n * @description Function to set the inital value for the form\n * @param {*} caseObj\n * @param {*} menuItems\n * @param {*} searchParams\n */\nexport const setInitalFormValue = (caseObj, menuItems, searchParams) => {\n  var _caseObj$agreement_ur, _caseObj$agreement_ur2;\n\n  return {\n    requestedMediators: setInitialMediator(caseObj),\n    agreement: false,\n    claimantPartyId: menuItems.length ? (caseObj === null || caseObj === void 0 ? void 0 : caseObj.claimantPartyId) ? caseObj.claimantPartyId : menuItems[0].value : \"\" || \"\",\n    title: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.title) || \"\",\n    description: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.description) || \"\",\n    totalClaimValue: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.totalClaimValue) || 0,\n    resolutionKind: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) || searchParams.get(\"caseType\") || \"negotiation\",\n    agreement_urls: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.agreement_urls) && caseObj.agreement_urls.length ? setInitialAgreementUrl(caseObj.agreement_urls) : [dummyFileUpload],\n    subscriptionKind: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) || \"normal\",\n    arbitrationNotice: ((_caseObj$agreement_ur = caseObj.agreement_urls) === null || _caseObj$agreement_ur === void 0 ? void 0 : (_caseObj$agreement_ur2 = _caseObj$agreement_ur.find(el => (el === null || el === void 0 ? void 0 : el.uploadType) === \"Arbitration Notice\")) === null || _caseObj$agreement_ur2 === void 0 ? void 0 : _caseObj$agreement_ur2.url) || \"\"\n  };\n};\n/**\n *@description Function to set the initial agremment url\n * @param {*} urls\n */\n\nexport const setInitialAgreementUrl = (urls = []) => {\n  if (urls === null || urls === void 0 ? void 0 : urls.length) {\n    var _urls$filter;\n\n    const agrementUrl = urls === null || urls === void 0 ? void 0 : (_urls$filter = urls.filter(el => (el === null || el === void 0 ? void 0 : el.uploadType) !== \"Arbitration Notice\")) === null || _urls$filter === void 0 ? void 0 : _urls$filter.map(url => {\n      if (typeof url === \"string\") {\n        return {\n          uploadType: \"\",\n          url: url || \"\"\n        };\n      } else {\n        return {\n          uploadType: (url === null || url === void 0 ? void 0 : url.uploadType) || \"\",\n          url: (url === null || url === void 0 ? void 0 : url.url) || \"\"\n        };\n      }\n    });\n    return (agrementUrl === null || agrementUrl === void 0 ? void 0 : agrementUrl.length) ? agrementUrl : [dummyFileUpload];\n  }\n\n  return [dummyFileUpload];\n};\n/**\n * @description Function to set the initial mediator object\n * @param {*} caseObj\n */\n\nexport function setInitialMediator(caseObj) {\n  var _caseObj$requestedMed;\n\n  if (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed = caseObj.requestedMediators) === null || _caseObj$requestedMed === void 0 ? void 0 : _caseObj$requestedMed.length) {\n    var _caseObj$requestedMed2;\n\n    return caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed2 = caseObj.requestedMediators) === null || _caseObj$requestedMed2 === void 0 ? void 0 : _caseObj$requestedMed2.map(el => {\n      return {\n        mediatorName: (el === null || el === void 0 ? void 0 : el.name) || \"\",\n        mediatorEmail: (el === null || el === void 0 ? void 0 : el.email) || \"\",\n        mediatorMobile: (el === null || el === void 0 ? void 0 : el.mobile) || \"\"\n      };\n    });\n  } else {\n    var _caseObj$requestedMed3, _caseObj$requestedMed4, _caseObj$requestedMed5;\n\n    return [{\n      mediatorName: (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed3 = caseObj.requestedMediator) === null || _caseObj$requestedMed3 === void 0 ? void 0 : _caseObj$requestedMed3.name) || \"\",\n      mediatorEmail: (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed4 = caseObj.requestedMediator) === null || _caseObj$requestedMed4 === void 0 ? void 0 : _caseObj$requestedMed4.email) || \"\",\n      mediatorMobile: (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed5 = caseObj.requestedMediator) === null || _caseObj$requestedMed5 === void 0 ? void 0 : _caseObj$requestedMed5.mobile) || \"\"\n    }];\n  }\n}\n/**\n * @description Function to set the dummy file upload object\n * @param {*} values\n */\n\nexport const dummyFileUpload = {\n  uploadType: \"\",\n  url: \"\"\n};\n/**\n * @description Function to set the post payload\n * @param {*} payload\n */\n\nexport const setPostPayload = payload => {\n  var _payload$totalClaimVa, _payload$totalClaimVa2, _payload$totalClaimVa3, _payload$agreement_ur, _payload$agreement_ur2, _payload$requestedMed, _payload$requestedMed2;\n\n  //Total claim value\n  payload.totalClaimValue = Number((_payload$totalClaimVa = payload.totalClaimValue) === null || _payload$totalClaimVa === void 0 ? void 0 : (_payload$totalClaimVa2 = _payload$totalClaimVa.toString()) === null || _payload$totalClaimVa2 === void 0 ? void 0 : (_payload$totalClaimVa3 = _payload$totalClaimVa2.split(\",\")) === null || _payload$totalClaimVa3 === void 0 ? void 0 : _payload$totalClaimVa3.join(\"\")); //Set agreement url\n\n  payload.agreement_urls = (_payload$agreement_ur = payload.agreement_urls) === null || _payload$agreement_ur === void 0 ? void 0 : (_payload$agreement_ur2 = _payload$agreement_ur.filter(el => el === null || el === void 0 ? void 0 : el.url)) === null || _payload$agreement_ur2 === void 0 ? void 0 : _payload$agreement_ur2.map(el => {\n    return {\n      uploadType: (payload === null || payload === void 0 ? void 0 : payload.resolutionKind) === \"arbitration\" ? el === null || el === void 0 ? void 0 : el.uploadType : \"\",\n      url: el === null || el === void 0 ? void 0 : el.url\n    };\n  });\n\n  if ((payload === null || payload === void 0 ? void 0 : payload.resolutionKind) === \"arbitration\" && (payload === null || payload === void 0 ? void 0 : payload.arbitrationNotice)) {\n    payload.agreement_urls.push({\n      uploadType: \"Arbitration Notice\",\n      url: payload === null || payload === void 0 ? void 0 : payload.arbitrationNotice\n    });\n  } // set the requested mediator object\n\n\n  if (((_payload$requestedMed = payload.requestedMediators) === null || _payload$requestedMed === void 0 ? void 0 : _payload$requestedMed.length) && ((_payload$requestedMed2 = payload.requestedMediators[0]) === null || _payload$requestedMed2 === void 0 ? void 0 : _payload$requestedMed2.mediatorName)) {\n    var _payload$requestedMed3;\n\n    payload.requestedMediators = payload === null || payload === void 0 ? void 0 : (_payload$requestedMed3 = payload.requestedMediators) === null || _payload$requestedMed3 === void 0 ? void 0 : _payload$requestedMed3.map(mediator => {\n      var _mediator$mediatorEma;\n\n      return {\n        name: mediator === null || mediator === void 0 ? void 0 : mediator.mediatorName,\n        mobile: mediator === null || mediator === void 0 ? void 0 : mediator.mediatorMobile,\n        email: mediator === null || mediator === void 0 ? void 0 : (_mediator$mediatorEma = mediator.mediatorEmail) === null || _mediator$mediatorEma === void 0 ? void 0 : _mediator$mediatorEma.toString().toLowerCase()\n      };\n    });\n  } else {\n    payload.requestedMediators = [];\n  }\n\n  return { ...payload\n  };\n};","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase/function.js"],"names":["setInitalFormValue","caseObj","menuItems","searchParams","requestedMediators","setInitialMediator","agreement","claimantPartyId","length","value","title","description","totalClaimValue","resolutionKind","get","agreement_urls","setInitialAgreementUrl","dummyFileUpload","subscriptionKind","arbitrationNotice","find","el","uploadType","url","urls","agrementUrl","filter","map","mediatorName","name","mediatorEmail","email","mediatorMobile","mobile","requestedMediator","setPostPayload","payload","Number","toString","split","join","push","mediator","toLowerCase"],"mappings":"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","sourcesContent":["/**\n * @description Function to set the inital value for the form\n * @param {*} caseObj\n * @param {*} menuItems\n * @param {*} searchParams\n */\nexport const setInitalFormValue = (caseObj, menuItems, searchParams) => {\n  return {\n    requestedMediators: setInitialMediator(caseObj),\n    agreement: false,\n    claimantPartyId: menuItems.length\n      ? caseObj?.claimantPartyId\n        ? caseObj.claimantPartyId\n        : menuItems[0].value\n      : \"\" || \"\",\n    title: caseObj?.title || \"\",\n    description: caseObj?.description || \"\",\n    totalClaimValue: caseObj?.totalClaimValue || 0,\n    resolutionKind:\n      caseObj?.resolutionKind || searchParams.get(\"caseType\") || \"negotiation\",\n    agreement_urls:\n      caseObj?.agreement_urls && caseObj.agreement_urls.length\n        ? setInitialAgreementUrl(caseObj.agreement_urls)\n        : [dummyFileUpload],\n    subscriptionKind: caseObj?.subscriptionKind || \"normal\",\n    arbitrationNotice:\n      caseObj.agreement_urls?.find(\n        (el) => el?.uploadType === \"Arbitration Notice\"\n      )?.url || \"\",\n  };\n};\n\n/**\n *@description Function to set the initial agremment url\n * @param {*} urls\n */\nexport const setInitialAgreementUrl = (urls = []) => {\n  if (urls?.length) {\n    const agrementUrl = urls\n      ?.filter((el) => el?.uploadType !== \"Arbitration Notice\")\n      ?.map((url) => {\n        if (typeof url === \"string\") {\n          return {\n            uploadType: \"\",\n            url: url || \"\",\n          };\n        } else {\n          return {\n            uploadType: url?.uploadType || \"\",\n            url: url?.url || \"\",\n          };\n        }\n      });\n    return agrementUrl?.length ? agrementUrl : [dummyFileUpload];\n  }\n  return [dummyFileUpload];\n};\n\n/**\n * @description Function to set the initial mediator object\n * @param {*} caseObj\n */\nexport function setInitialMediator(caseObj) {\n  if (caseObj?.requestedMediators?.length) {\n    return caseObj?.requestedMediators?.map((el) => {\n      return {\n        mediatorName: el?.name || \"\",\n        mediatorEmail: el?.email || \"\",\n        mediatorMobile: el?.mobile || \"\",\n      };\n    });\n  } else {\n    return [\n      {\n        mediatorName: caseObj?.requestedMediator?.name || \"\",\n        mediatorEmail: caseObj?.requestedMediator?.email || \"\",\n        mediatorMobile: caseObj?.requestedMediator?.mobile || \"\",\n      },\n    ];\n  }\n}\n\n/**\n * @description Function to set the dummy file upload object\n * @param {*} values\n */\nexport const dummyFileUpload = {\n  uploadType: \"\",\n  url: \"\",\n};\n\n/**\n * @description Function to set the post payload\n * @param {*} payload\n */\nexport const setPostPayload = (payload) => {\n  //Total claim value\n  payload.totalClaimValue = Number(\n    payload.totalClaimValue?.toString()?.split(\",\")?.join(\"\")\n  );\n\n  //Set agreement url\n  payload.agreement_urls = payload.agreement_urls\n    ?.filter((el) => el?.url)\n    ?.map((el) => {\n      return {\n        uploadType:\n          payload?.resolutionKind === \"arbitration\" ? el?.uploadType : \"\",\n        url: el?.url,\n      };\n    });\n\n  if (payload?.resolutionKind === \"arbitration\" && payload?.arbitrationNotice) {\n    payload.agreement_urls.push({\n      uploadType: \"Arbitration Notice\",\n      url: payload?.arbitrationNotice,\n    });\n  }\n\n  // set the requested mediator object\n  if (\n    payload.requestedMediators?.length &&\n    payload.requestedMediators[0]?.mediatorName\n  ) {\n    payload.requestedMediators = payload?.requestedMediators?.map(\n      (mediator) => {\n        return {\n          name: mediator?.mediatorName,\n          mobile: mediator?.mediatorMobile,\n          email: mediator?.mediatorEmail?.toString().toLowerCase(),\n        };\n      }\n    );\n  } else {\n    payload.requestedMediators = [];\n  }\n  return { ...payload };\n};\n"]},"metadata":{},"sourceType":"module"}