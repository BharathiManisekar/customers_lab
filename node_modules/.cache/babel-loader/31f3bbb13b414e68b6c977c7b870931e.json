{"ast":null,"code":"var _jsxFileName = \"/home/justact/17-02-2022/customers_lab/src/Pages/NameSegment.js\";\nimport React, { useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport COLORS from \"../assets/Colors\";\nimport { PrimaryOutlinedCTAButton, PrimaryCTAButton } from \"../common/FormInput\";\nimport theme from \"../assets/theme\";\nimport CustomSelect from \"../internel/CustomSelect\";\nimport { NameType } from \"../Helpers/constants\";\nimport { Formik } from \"formik\";\nimport FormField from \"../common/FormField\";\nimport { FormLabel } from \"@material-ui/core\";\nexport default function NameSegment(_ref) {\n  let {\n    open,\n    setOpen\n  } = _ref;\n\n  const onFormSubmit = values => {\n    console.log(\"values\", values);\n    fetch(\"https://webhook.site/2f4843d8-78fa-47e1-affb-b0da6519efeb\", {\n      method: \"POST\",\n      body: JSON.stringify(values)\n    });\n  };\n\n  function handleRemove(schema, index, setFieldValue) {\n    let returnData = schema.filter((schema, id) => id !== index);\n    setFieldValue(\"schema\", returnData);\n  }\n\n  function addSection(setFieldValue, schema) {\n    let newSections = [...schema, {\n      first_name: \"\",\n      last_name: \"\",\n      gender: \"\",\n      age: \"\",\n      accout_name: \"\",\n      city: \"\",\n      state: \"\"\n    }];\n    setFieldValue(\"schema\", newSections);\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DrawerContainer, {\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Name Segment\"), /*#__PURE__*/React.createElement(CloseModal, {\n    onClick: () => setOpen(false),\n    src: require(\"../assets/images/ArrowBack.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(AgentFormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      segment_name: \"\",\n      // NameType\n      schema: [{\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        age: \"\",\n        accout_name: \"\",\n        city: \"\",\n        state: \"\"\n      }] // schema: [{ first_name: \"\", last_name: \"\" }]\n\n    },\n    onSubmit: onFormSubmit,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, _ref2 => {\n    let {\n      values,\n      handleChange,\n      errors,\n      handleSubmit,\n      touched,\n      handleBlur,\n      setFieldValue\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(FormContainer, {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Flex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      input: {\n        name: \"segment_name\",\n        label: \"Enter the Name of the Segment\",\n        type: \"text\",\n        required: true,\n        placeholder: \"Name of the Segment\"\n      },\n      touched,\n      errors,\n      values,\n      handleChange,\n      handleBlur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Label, {\n      style: {\n        lineHeight: 5.7\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, \"To Save Your Segment. you need to add the schemas to build the query\"), values.schema.map((element, index) => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginBottom: \"28px\"\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element === null || element === void 0 ? void 0 : element.first_name,\n      name: `schema[${index}].first_name`,\n      id: `schema[${index}].first_name`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.last_name,\n      name: `schema[${index}].last_name`,\n      id: `schema[${index}].last_name`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.gender,\n      name: `schema[${index}].gender`,\n      id: `schema[${index}].gender`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.age,\n      name: `schema[${index}].age`,\n      id: `schema[${index}].age`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.accout_name,\n      name: `schema[${index}].accout_name`,\n      id: `schema[${index}].accout_name`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.city,\n      name: `schema[${index}].city`,\n      id: `schema[${index}].city`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(CustomSelect, {\n      menuItemValues: NameType,\n      value: element.state,\n      name: `schema[${index}].state`,\n      id: `schema[${index}].state`,\n      onBlur: handleBlur,\n      onChange: handleChange,\n      style: {\n        marginTop: 6,\n        marginBottom: 20\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }), values.schema.length > 1 && /*#__PURE__*/React.createElement(DeleteIcon, {\n      src: require(\"../assets/images/removeIcon.svg\"),\n      alt: \"remove\",\n      onClick: () => handleRemove(values.schema, index, setFieldValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button add\",\n      type: \"button\",\n      onClick: () => addSection(setFieldValue, values.schema),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 19\n      }\n    }, \"+ Add New Schema\")), /*#__PURE__*/React.createElement(ButtonContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n      style: {\n        width: \"47%\",\n        height: \"48px\",\n        marginRight: 20\n      },\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 19\n      }\n    }, \"Save the Segment\"), /*#__PURE__*/React.createElement(PrimaryOutlinedCTAButton, {\n      onClick: () => setOpen(false),\n      style: {\n        width: \"47%\",\n        height: \"48px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }, \"Cancel\")));\n  }))));\n}\nconst FormContainer = styled.form``;\nconst DrawerContainer = styled.div`\n  width: 600px;\n  height: 100%;\n  background-color: white;\n  outline: none;\n`;\nconst ButtonContainer = styled.div`\n  width: 413px;\n  margin: 0 auto;\n  margin-top: 150px;\n`;\nconst Label = styled.div`\n  font-size: 10px;\n  line-height: 3.7;\n  text-transform: uppercase;\n  color: ${COLORS.COLOR_DARK};\n`;\nexport const BasicDetailsLabel = styled.div`\n  font-size: 10px;\n  line-height: 1.7;\n  color: ${COLORS.INPUT_LABEL};\n  text-transform: capitalize;\n`;\nexport const DeleteIcon = styled.img`\n  margin-left: 20px;\n  user-select: none;\n  object-fit: contain;\n  cursor: pointer;\n`;\nconst HeadingContainer = styled.div`\n  padding-top: 30px;\n  padding-bottom: 20px;\n  padding-left: 38px;\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  position: relative;\n  border-bottom: 1px solid ${COLORS.BTN_GREEN};\n  background-color: ${COLORS.BTN_GREEN};\n`;\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n  position: absolute;\n  left: 15px;\n`;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  }\n`;\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: center;\n`;\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 28px;\n  padding-right: 94px;\n  padding-bottom: 26px;\n  & form {\n    padding-top: 10px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/17-02-2022/customers_lab/src/Pages/NameSegment.js"],"names":["React","useState","Drawer","styled","COLORS","PrimaryOutlinedCTAButton","PrimaryCTAButton","theme","CustomSelect","NameType","Formik","FormField","FormLabel","NameSegment","open","setOpen","onFormSubmit","values","console","log","fetch","method","body","JSON","stringify","handleRemove","schema","index","setFieldValue","returnData","filter","id","addSection","newSections","first_name","last_name","gender","age","accout_name","city","state","require","segment_name","handleChange","errors","handleSubmit","touched","handleBlur","name","label","type","required","placeholder","lineHeight","map","element","marginBottom","marginTop","length","width","height","marginRight","FormContainer","form","DrawerContainer","div","ButtonContainer","Label","COLOR_DARK","BasicDetailsLabel","INPUT_LABEL","DeleteIcon","img","HeadingContainer","BTN_GREEN","CloseModal","Flex","Heading","h3","AgentFormContainer"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Drawer } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport COLORS from \"../assets/Colors\";\nimport {\n  PrimaryOutlinedCTAButton,\n  PrimaryCTAButton\n} from \"../common/FormInput\";\nimport theme from \"../assets/theme\";\nimport CustomSelect from \"../internel/CustomSelect\";\nimport { NameType } from \"../Helpers/constants\";\nimport { Formik } from \"formik\";\nimport FormField from \"../common/FormField\";\nimport { FormLabel } from \"@material-ui/core\";\n\nexport default function NameSegment({ open, setOpen }) {\n  const onFormSubmit = values => {\n    console.log(\"values\", values);\n\n    fetch(\"https://webhook.site/2f4843d8-78fa-47e1-affb-b0da6519efeb\", {\n      method: \"POST\",\n      body: JSON.stringify(values)\n    });\n  };\n\n  function handleRemove(schema, index, setFieldValue) {\n    let returnData = schema.filter((schema, id) => id !== index);\n    setFieldValue(\"schema\", returnData);\n  }\n\n  function addSection(setFieldValue, schema) {\n    let newSections = [\n      ...schema,\n      {\n        first_name: \"\",\n        last_name: \"\",\n        gender: \"\",\n        age: \"\",\n        accout_name: \"\",\n        city: \"\",\n        state: \"\"\n      }\n    ];\n    setFieldValue(\"schema\", newSections);\n  }\n\n  return (\n    <Drawer anchor=\"right\" open={open}>\n      <DrawerContainer role=\"presentation\">\n        <HeadingContainer>\n          <Heading>Name Segment</Heading>\n          <CloseModal\n            onClick={() => setOpen(false)}\n            src={require(\"../assets/images/ArrowBack.png\")}\n          />\n        </HeadingContainer>\n        <AgentFormContainer>\n          <Formik\n            initialValues={{\n              segment_name: \"\",\n              // NameType\n              schema: [\n                {\n                  first_name: \"\",\n                  last_name: \"\",\n                  gender: \"\",\n                  age: \"\",\n                  accout_name: \"\",\n                  city: \"\",\n                  state: \"\"\n                }\n              ]\n              // schema: [{ first_name: \"\", last_name: \"\" }]\n            }}\n            onSubmit={onFormSubmit}\n            validateOnBlur\n            validateOnChange\n          >\n            {({\n              values,\n              handleChange,\n              errors,\n              handleSubmit,\n              touched,\n              handleBlur,\n              setFieldValue\n            }) => (\n              <FormContainer onSubmit={handleSubmit}>\n                <div>\n                  <Flex>\n                    <FormField\n                      input={{\n                        name: \"segment_name\",\n                        label: \"Enter the Name of the Segment\",\n                        type: \"text\",\n                        required: true,\n                        placeholder: \"Name of the Segment\"\n                      }}\n                      {...{\n                        touched,\n                        errors,\n                        values,\n                        handleChange,\n                        handleBlur\n                      }}\n                    />\n                  </Flex>\n                  <Label style={{ lineHeight: 5.7 }}>\n                    To Save Your Segment. you need to add the schemas to build\n                    the query\n                  </Label>\n                  {values.schema.map((element, index) => (\n                    <div style={{ marginBottom: \"28px\" }} key={index}>\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element?.first_name}\n                        name={`schema[${index}].first_name`}\n                        id={`schema[${index}].first_name`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.last_name}\n                        name={`schema[${index}].last_name`}\n                        id={`schema[${index}].last_name`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.gender}\n                        name={`schema[${index}].gender`}\n                        id={`schema[${index}].gender`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.age}\n                        name={`schema[${index}].age`}\n                        id={`schema[${index}].age`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.accout_name}\n                        name={`schema[${index}].accout_name`}\n                        id={`schema[${index}].accout_name`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.city}\n                        name={`schema[${index}].city`}\n                        id={`schema[${index}].city`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      <CustomSelect\n                        menuItemValues={NameType}\n                        value={element.state}\n                        name={`schema[${index}].state`}\n                        id={`schema[${index}].state`}\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        style={{ marginTop: 6, marginBottom: 20 }}\n                      />\n                      {values.schema.length > 1 && (\n                        <DeleteIcon\n                          src={require(\"../assets/images/removeIcon.svg\")}\n                          alt=\"remove\"\n                          onClick={() =>\n                            handleRemove(values.schema, index, setFieldValue)\n                          }\n                        />\n                      )}\n                    </div>\n                  ))}\n                  <button\n                    className=\"button add\"\n                    type=\"button\"\n                    onClick={() => addSection(setFieldValue, values.schema)}\n                  >\n                    + Add New Schema\n                  </button>\n                </div>\n                <ButtonContainer>\n                  <PrimaryCTAButton\n                    style={{ width: \"47%\", height: \"48px\", marginRight: 20 }}\n                    onClick={handleSubmit}\n                  >\n                    Save the Segment\n                  </PrimaryCTAButton>\n                  <PrimaryOutlinedCTAButton\n                    onClick={() => setOpen(false)}\n                    style={{ width: \"47%\", height: \"48px\" }}\n                  >\n                    Cancel\n                  </PrimaryOutlinedCTAButton>\n                </ButtonContainer>\n              </FormContainer>\n            )}\n          </Formik>\n        </AgentFormContainer>\n      </DrawerContainer>\n    </Drawer>\n  );\n}\n\nconst FormContainer = styled.form``;\n\nconst DrawerContainer = styled.div`\n  width: 600px;\n  height: 100%;\n  background-color: white;\n  outline: none;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 413px;\n  margin: 0 auto;\n  margin-top: 150px;\n`;\n\nconst Label = styled.div`\n  font-size: 10px;\n  line-height: 3.7;\n  text-transform: uppercase;\n  color: ${COLORS.COLOR_DARK};\n`;\n\nexport const BasicDetailsLabel = styled.div`\n  font-size: 10px;\n  line-height: 1.7;\n  color: ${COLORS.INPUT_LABEL};\n  text-transform: capitalize;\n`;\n\nexport const DeleteIcon = styled.img`\n  margin-left: 20px;\n  user-select: none;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst HeadingContainer = styled.div`\n  padding-top: 30px;\n  padding-bottom: 20px;\n  padding-left: 38px;\n  display: flex;\n  /* justify-content: center; */\n  align-items: center;\n  position: relative;\n  border-bottom: 1px solid ${COLORS.BTN_GREEN};\n  background-color: ${COLORS.BTN_GREEN};\n`;\n\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n  position: absolute;\n  left: 15px;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  }\n`;\n\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 10px;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  text-align: center;\n`;\n\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 28px;\n  padding-right: 94px;\n  padding-bottom: 26px;\n  & form {\n    padding-top: 10px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}