{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/ClaimTable.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2,\n    _theme$breakpoints3;\n\nimport React, { createRef, useEffect, useRef, useState } from \"react\";\nimport theme from \"../../../../assets/theme\";\nimport { Checkbox, Tooltip, makeStyles, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { Images } from \"../../../../assets/images\";\nimport ReactTooltip from \"react-tooltip\";\nimport styled from \"styled-components\";\nimport { Formik, FieldArray } from \"formik\";\nimport DescriptionModal from \"../../../internal/CreateCase3/components/DescriptionModal\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport { formatNumberToMetrics, getErrorMessage } from \"../../../../helpers/functions\";\nimport CaseService from \"../../../../services/CaseService\";\nimport _ from \"lodash\";\nimport AWSService from \"../../../../services/AWSService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport SmallClaimTable from \"./SmallClaimTable\";\n\nconst ClaimTabel = ({\n  items,\n  enableCheckBox,\n  selectAll,\n  allowEdit,\n  itemsChecked,\n  disableChekBox,\n  heading,\n  formikRef,\n  isRespondent,\n  caseId,\n  roundNumber,\n  status,\n  errorText\n}) => {\n  const useTooltipStyles = makeStyles(() => ({\n    tooltip: {\n      margin: 0\n    }\n  }));\n  const {\n    hideAlert,\n    showAlert\n  } = useAlert();\n  const classes = useTooltipStyles();\n  const [modal, setModal] = useState({\n    state: false\n  });\n  const fileRef = useRef([]);\n  const [length, setLength] = useState(1);\n  const [documents, setDocuments] = useState([]);\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const themes = useTheme();\n  const [hasTriggered, setHasTrigger] = useState(true);\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(769));\n  useEffect(() => {\n    if ((items === null || items === void 0 ? void 0 : items.length) > 0) {\n      setLength(items === null || items === void 0 ? void 0 : items.length);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [items === null || items === void 0 ? void 0 : items.length]);\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length).fill().map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const showwarning = value => {\n    var _value$offer;\n\n    return Number(value === null || value === void 0 ? void 0 : (_value$offer = value.offer) === null || _value$offer === void 0 ? void 0 : _value$offer.claimValue) === Number(value === null || value === void 0 ? void 0 : value.previousOffer);\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  async function getCaseDocuments() {\n    try {\n      const result = await CaseService.getcaseDocuments(caseId, \"?page=1&perPage=10000\");\n      if (result === null || result === void 0 ? void 0 : result.data) setDocuments(result.data.filter(doc => {\n        var _doc$meta;\n\n        return (doc === null || doc === void 0 ? void 0 : (_doc$meta = doc.meta) === null || _doc$meta === void 0 ? void 0 : _doc$meta.round) === roundNumber;\n      }));\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    if ((items === null || items === void 0 ? void 0 : items.length) && hasTriggered) {\n      getCaseDocuments();\n      setHasTrigger(false);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [items, hasTriggered]);\n\n  function renderUploadBox({\n    item,\n    index\n  }) {\n    var _item$offer, _item$acceptedOffer;\n\n    const document = documents.find(doc => {\n      var _doc$meta2, _doc$meta3, _doc$meta4, _doc$meta5;\n\n      return (doc === null || doc === void 0 ? void 0 : (_doc$meta2 = doc.meta) === null || _doc$meta2 === void 0 ? void 0 : _doc$meta2.claimItemId) === (item === null || item === void 0 ? void 0 : item.id) && (isRespondent ? (doc === null || doc === void 0 ? void 0 : (_doc$meta3 = doc.meta) === null || _doc$meta3 === void 0 ? void 0 : _doc$meta3.role) === \"respondent\" : (doc === null || doc === void 0 ? void 0 : (_doc$meta4 = doc.meta) === null || _doc$meta4 === void 0 ? void 0 : _doc$meta4.role) === \"claimant\") && (doc === null || doc === void 0 ? void 0 : (_doc$meta5 = doc.meta) === null || _doc$meta5 === void 0 ? void 0 : _doc$meta5.round) === roundNumber;\n    });\n\n    if (allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer = item.offer) === null || _item$offer === void 0 ? void 0 : _item$offer.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer = item.acceptedOffer) === null || _item$acceptedOffer === void 0 ? void 0 : _item$acceptedOffer.status) === \"accepted\")) {\n      if (_.isEmpty(document)) {\n        return /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => {\n            var _fileRef$current$inde, _fileRef$current$inde2;\n\n            return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde = fileRef.current[index]) === null || _fileRef$current$inde === void 0 ? void 0 : (_fileRef$current$inde2 = _fileRef$current$inde.current) === null || _fileRef$current$inde2 === void 0 ? void 0 : _fileRef$current$inde2.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }\n        }, \"Add\");\n      } else {\n        return /*#__PURE__*/React.createElement(Row, {\n          style: {\n            marginTop: 0,\n            width: 123\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => {\n            var _document$url;\n\n            return window.open(document === null || document === void 0 ? void 0 : (_document$url = document.url) === null || _document$url === void 0 ? void 0 : _document$url.url);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(Seperator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => {\n            var _fileRef$current$inde3, _fileRef$current$inde4;\n\n            return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde3 = fileRef.current[index]) === null || _fileRef$current$inde3 === void 0 ? void 0 : (_fileRef$current$inde4 = _fileRef$current$inde3.current) === null || _fileRef$current$inde4 === void 0 ? void 0 : _fileRef$current$inde4.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }\n        }, \"Update\"));\n      }\n    } else {\n      var _item$description_doc;\n\n      return !_.isEmpty(document) || ((_item$description_doc = item.description_document_url) === null || _item$description_doc === void 0 ? void 0 : _item$description_doc.url) ? /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _document$url2, _item$description_doc2;\n\n          return window.open(!_.isEmpty(document) ? (_document$url2 = document.url) === null || _document$url2 === void 0 ? void 0 : _document$url2.url : (_item$description_doc2 = item.description_document_url) === null || _item$description_doc2 === void 0 ? void 0 : _item$description_doc2.url);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }\n      }, \"Download\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }\n      }, \"-\");\n    }\n  }\n\n  async function addOrUpdateDoc({\n    file,\n    claimItemId\n  }) {\n    try {\n      // const update = documents.find(\n      //   (doc) => doc?.meta?.claimItemId == claimItemId\n      // );\n      const update = documents.find(doc => {\n        var _doc$meta6, _doc$meta7, _doc$meta8, _doc$meta9;\n\n        return (doc === null || doc === void 0 ? void 0 : (_doc$meta6 = doc.meta) === null || _doc$meta6 === void 0 ? void 0 : _doc$meta6.claimItemId) === claimItemId && (isRespondent ? (doc === null || doc === void 0 ? void 0 : (_doc$meta7 = doc.meta) === null || _doc$meta7 === void 0 ? void 0 : _doc$meta7.role) === \"respondent\" : (doc === null || doc === void 0 ? void 0 : (_doc$meta8 = doc.meta) === null || _doc$meta8 === void 0 ? void 0 : _doc$meta8.role) === \"claimant\") && (doc === null || doc === void 0 ? void 0 : (_doc$meta9 = doc.meta) === null || _doc$meta9 === void 0 ? void 0 : _doc$meta9.round) === roundNumber;\n      });\n      const errorMessage = \"Invalid File Type\";\n      if ((file === null || file === void 0 ? void 0 : file.type) !== \"application/pdf\") throw errorMessage;\n      setLoader({\n        state: true,\n        message: `Uploading file ${file.name} ...`\n      });\n      const payload = {\n        key: file.name\n      };\n      const s3Response = await AWSService.getS3URL(payload);\n\n      if (s3Response.url) {\n        const url = await AWSService.uploadToS3(s3Response.url, file);\n        let payload = {\n          url: {\n            url: url,\n            uploadType: \"\"\n          }\n        };\n\n        if (!_.isEmpty(update)) {\n          const docId = update.id;\n          const response = await CaseService.caseUpdateDocument(payload, caseId, docId);\n\n          if (response) {\n            const newDocs = documents.map(doc => ({ ...doc,\n              url: (doc === null || doc === void 0 ? void 0 : doc.id) === docId ? url : doc === null || doc === void 0 ? void 0 : doc.url\n            }));\n            setDocuments(newDocs);\n          }\n        } else {\n          payload.meta = {\n            round: roundNumber,\n            claimItemId,\n            role: isRespondent ? \"respondent\" : \"claimant\"\n          };\n          const response = await CaseService.caseAddDocument(payload, caseId);\n\n          if (response === null || response === void 0 ? void 0 : response.uploadedDocument) {\n            setDocuments(s => [...s, response.uploadedDocument]);\n          }\n        }\n\n        enqueueSnackbar(\"Successfully Uploaded\", {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isBigScreen ? /*#__PURE__*/React.createElement(Formik, {\n    innerRef: formikRef,\n    initialValues: {\n      items: items\n    },\n    enableReinitialize: true,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validateOnMount: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    setFieldValue,\n    errors,\n    initialValues\n  }) => {\n    var _values$items, _values$items2, _values$items3;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ClaimBoxHeading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 15\n      }\n    }, heading), /*#__PURE__*/React.createElement(ClaimTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TR, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 19\n      }\n    }, enableCheckBox && /*#__PURE__*/React.createElement(Tooltip, {\n      title: disableChekBox || (values === null || values === void 0 ? void 0 : (_values$items = values.items) === null || _values$items === void 0 ? void 0 : _values$items.every(el => {\n        var _el$offer, _el$acceptedOffer;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer = el.offer) === null || _el$offer === void 0 ? void 0 : _el$offer.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer = el.acceptedOffer) === null || _el$acceptedOffer === void 0 ? void 0 : _el$acceptedOffer.status) === \"accepted\";\n      })) ? \"\" : \"Accept All\",\n      placement: \"top\",\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TH, {\n      width: \"5%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"checked\",\n        style: disableChekBox ? {\n          filter: \"grayscale(100%) !important\",\n          opacity: 0.5\n        } : {},\n        src: Images.checkBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }\n      }),\n      checked: values === null || values === void 0 ? void 0 : (_values$items2 = values.items) === null || _values$items2 === void 0 ? void 0 : _values$items2.every(el => {\n        var _el$offer2, _el$acceptedOffer2;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer2 = el.offer) === null || _el$offer2 === void 0 ? void 0 : _el$offer2.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer2 = el.acceptedOffer) === null || _el$acceptedOffer2 === void 0 ? void 0 : _el$acceptedOffer2.status) === \"accepted\";\n      }),\n      onChange: ev => {\n        const checked = ev.target.checked;\n        showAlert({\n          heading: \"Please confirm!\",\n          desc: `You are about to accept the offer made by the other party. Would you like us to go ahead and accept the offer for you?`,\n          //desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n          primaryBtnText: \"Yes\",\n          secondaryBtnText: \"No\",\n          clickSecondarybtn: () => hideAlert(),\n          clickPrimaryBtn: () => {\n            selectAll(checked, setFieldValue, initialValues);\n            hideAlert();\n          },\n          descriptionTextStyle: {\n            textAlign: \"left\"\n          },\n          isOpen: true,\n          onDialogClose: () => hideAlert()\n        });\n      },\n      disabled: disableChekBox || (values === null || values === void 0 ? void 0 : (_values$items3 = values.items) === null || _values$items3 === void 0 ? void 0 : _values$items3.every(el => {\n        var _el$offer3, _el$acceptedOffer3;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer3 = el.offer) === null || _el$offer3 === void 0 ? void 0 : _el$offer3.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer3 = el.acceptedOffer) === null || _el$acceptedOffer3 === void 0 ? void 0 : _el$acceptedOffer3.status) === \"accepted\";\n      })),\n      checkedIcon: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"checked\",\n        style: disableChekBox ? {\n          filter: \"grayscale(100%) !important\",\n          opacity: 0.5\n        } : {},\n        src: Images.checkBoxSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 31\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(TH, {\n      width: \"16%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 21\n      }\n    }, isRespondent ? \"Respondent Claim Item\" : \"Claimant Claim Item\"), /*#__PURE__*/React.createElement(TH, {\n      width: \"16%\",\n      style: {\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 21\n      }\n    }, isRespondent ? \"Respondent Claim Value\" : \"Claimant Claim Value\"), /*#__PURE__*/React.createElement(TH, {\n      width: \"13%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, \"Unit\"), /*#__PURE__*/React.createElement(TH, {\n      width: \"25%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 21\n      }\n    }, \"Supporting Document\"), /*#__PURE__*/React.createElement(TH, {\n      width: \"25%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 21\n      }\n    }, \"Claim Description\")), (values === null || values === void 0 ? void 0 : values.items) && /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"items\",\n      render: () => {\n        var _values$items4;\n\n        return values === null || values === void 0 ? void 0 : (_values$items4 = values.items) === null || _values$items4 === void 0 ? void 0 : _values$items4.map((item, index) => {\n          var _item$offer2, _item$acceptedOffer2, _item$acceptedOffer3, _item$offer3, _item$acceptedOffer4, _item$offer4, _item$acceptedOffer5, _item$acceptedOffer6, _item$offer5, _item$acceptedOffer7, _item$offer6, _item$acceptedOffer8, _errors$items$index, _errors$items$index$o, _item$offer7, _item$offer8, _item$offer9, _item$offer10, _item$offer11, _item$acceptedOffer9, _item$offer12, _item$offer13, _item$acceptedOffer10, _item$offer16;\n\n          return /*#__PURE__*/React.createElement(TR, {\n            isEven: index % 2 === 0,\n            key: index,\n            accepted: (item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer2 = item.offer) === null || _item$offer2 === void 0 ? void 0 : _item$offer2.status) === \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer2 = item.acceptedOffer) === null || _item$acceptedOffer2 === void 0 ? void 0 : _item$acceptedOffer2.status) === \"accepted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 27\n            }\n          }, enableCheckBox && /*#__PURE__*/React.createElement(Tooltip, {\n            title: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer3 = item.acceptedOffer) === null || _item$acceptedOffer3 === void 0 ? void 0 : _item$acceptedOffer3.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$offer3 = item.offer) === null || _item$offer3 === void 0 ? void 0 : _item$offer3.status) === \"accepted\" ? \"\" : \"Accept claim line item\",\n            placement: \"top\",\n            classes: classes,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 31\n            }\n          }, /*#__PURE__*/React.createElement(TD, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            icon: /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"checked\",\n              style: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer4 = item.acceptedOffer) === null || _item$acceptedOffer4 === void 0 ? void 0 : _item$acceptedOffer4.status) === \"accepted\" ? {\n                filter: \"grayscale(100%) !important\",\n                opacity: 0.5\n              } : {},\n              src: Images.checkBox,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 39\n              }\n            }),\n            checked: (item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer4 = item.offer) === null || _item$offer4 === void 0 ? void 0 : _item$offer4.status) === \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer5 = item.acceptedOffer) === null || _item$acceptedOffer5 === void 0 ? void 0 : _item$acceptedOffer5.status) === \"accepted\",\n            onChange: ev => {\n              const checked = ev.target.checked;\n              showAlert({\n                heading: \"Please confirm!\",\n                desc: `You are about to accept the offer made by the other party. Would you like us to go ahead and accept the offer for you?`,\n                //desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                primaryBtnText: \"Yes\",\n                secondaryBtnText: \"No\",\n                clickSecondarybtn: () => hideAlert(),\n                clickPrimaryBtn: () => {\n                  itemsChecked(checked, item, setFieldValue, `items[${index}].offer`, initialValues === null || initialValues === void 0 ? void 0 : initialValues.items[index].offer.claimValue);\n                  hideAlert();\n                },\n                descriptionTextStyle: {\n                  textAlign: \"left\"\n                },\n                isOpen: true,\n                onDialogClose: () => hideAlert()\n              });\n            },\n            disabled: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer6 = item.acceptedOffer) === null || _item$acceptedOffer6 === void 0 ? void 0 : _item$acceptedOffer6.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$offer5 = item.offer) === null || _item$offer5 === void 0 ? void 0 : _item$offer5.status) === \"accepted\",\n            checkedIcon: /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"checked\",\n              style: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer7 = item.acceptedOffer) === null || _item$acceptedOffer7 === void 0 ? void 0 : _item$acceptedOffer7.status) === \"accepted\" ? {\n                filter: \"grayscale(100%) !important\",\n                opacity: 0.5\n              } : {},\n              src: Images.checkBoxSelected,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 39\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 35\n            }\n          }))), /*#__PURE__*/React.createElement(TD, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 31\n            }\n          }, item.title)), /*#__PURE__*/React.createElement(TD, {\n            className: \"claim-table\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 29\n            }\n          }, allowEdit && ((item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer6 = item.offer) === null || _item$offer6 === void 0 ? void 0 : _item$offer6.status) !== \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer8 = item.acceptedOffer) === null || _item$acceptedOffer8 === void 0 ? void 0 : _item$acceptedOffer8.status) !== \"accepted\") ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(NumberFormat, {\n            thousandSeparator: true,\n            thousandsGroupStyle: \"lakh\",\n            isNumericString: true,\n            decimalScale: 2,\n            allowNegative: false,\n            \"data-tip\": true,\n            \"data-for\": `input_${index}`,\n            error: (errors === null || errors === void 0 ? void 0 : errors.items) && (errors === null || errors === void 0 ? void 0 : (_errors$items$index = errors.items[index]) === null || _errors$items$index === void 0 ? void 0 : (_errors$items$index$o = _errors$items$index.offer) === null || _errors$items$index$o === void 0 ? void 0 : _errors$items$index$o.claimValue) ? true : false,\n            className: \"input-white\",\n            value: (_item$offer7 = item.offer) === null || _item$offer7 === void 0 ? void 0 : _item$offer7.claimValue // fixedDecimalScale\n            ,\n            type: \"text\",\n            customInput: CustomInputField,\n            name: `items[${index}].offer.claimValue`,\n            onChange: e => {\n              if (e.target.value) {\n                var _e$target$value;\n\n                const numberText = (_e$target$value = e.target.value) === null || _e$target$value === void 0 ? void 0 : _e$target$value.split(\",\").join(\"\");\n                setFieldValue(`items[${index}].offer.claimValue`, Number(numberText));\n              }\n            },\n            onBlur: e => {\n              if (e.target.value) {\n                var _e$target$value2;\n\n                const numberText = (_e$target$value2 = e.target.value) === null || _e$target$value2 === void 0 ? void 0 : _e$target$value2.split(\",\").join(\"\");\n                setFieldValue(`items[${index}].offer.claimValue`, Number(numberText).toFixed(2));\n              }\n            },\n            style: {\n              width: 120\n            },\n            variant: \"outlined\",\n            min: 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(NumberFormat, {\n            isNumericString: true,\n            decimalScale: 2,\n            allowNegative: false,\n            value: (_item$offer8 = item.offer) === null || _item$offer8 === void 0 ? void 0 : _item$offer8.claimValue,\n            type: \"text\",\n            name: `items[${index}].offer.claimValue`,\n            onChange: handleChange,\n            style: {\n              width: 110,\n              display: \"none\"\n            },\n            min: 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 37\n            }\n          })), !!(item === null || item === void 0 ? void 0 : (_item$offer9 = item.offer) === null || _item$offer9 === void 0 ? void 0 : _item$offer9.suggestedClaimValue) && item.unit === \"INR\" && /*#__PURE__*/React.createElement(ReactTooltip, {\n            className: \"tool-tip\",\n            place: \"bottom\",\n            backgroundColor: \"#e1edf9\",\n            id: `input_${index}`,\n            arrowColor: \"#007aff\",\n            borderColor: \"#007aff\",\n            type: \"warning\",\n            effect: \"solid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 521,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 41\n            }\n          }, item.unit, \" \", formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$offer10 = item.offer) === null || _item$offer10 === void 0 ? void 0 : _item$offer10.suggestedClaimValue).toFixed(2).toString(), item.unit), \" \", \"( JustAct SmartSuggest )\")), showwarning(values === null || values === void 0 ? void 0 : values.items[index], initialValues === null || initialValues === void 0 ? void 0 : initialValues.items[index].previousOffer) && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"waring-msg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 37\n            }\n          }, \"You've entered the same claim value\")) : /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element right\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 557,\n              columnNumber: 33\n            }\n          }, (item === null || item === void 0 ? void 0 : item.offer) ? formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$offer11 = item.offer) === null || _item$offer11 === void 0 ? void 0 : _item$offer11.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit) : (item === null || item === void 0 ? void 0 : item.acceptedOffer) ? formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$acceptedOffer9 = item.acceptedOffer) === null || _item$acceptedOffer9 === void 0 ? void 0 : _item$acceptedOffer9.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit) : formatNumberToMetrics(parseFloat(item.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit))), /*#__PURE__*/React.createElement(TD, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 31\n            }\n          }, item.unit)), /*#__PURE__*/React.createElement(TD, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }\n          }, renderUploadBox({\n            item,\n            index\n          }), /*#__PURE__*/React.createElement(\"input\", {\n            ref: fileRef === null || fileRef === void 0 ? void 0 : fileRef.current[index],\n            onChange: e => {\n              var _e$target;\n\n              return addOrUpdateDoc({\n                file: e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0],\n                round: roundNumber,\n                claimItemId: item === null || item === void 0 ? void 0 : item.id\n              });\n            },\n            type: \"file\",\n            accept: \".pdf\",\n            style: {\n              display: \"none\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 31\n            }\n          })), /*#__PURE__*/React.createElement(TD, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 29\n            }\n          }, item.description || (item === null || item === void 0 ? void 0 : (_item$offer12 = item.offer) === null || _item$offer12 === void 0 ? void 0 : _item$offer12.reason) || allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer13 = item.offer) === null || _item$offer13 === void 0 ? void 0 : _item$offer13.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer10 = item.acceptedOffer) === null || _item$acceptedOffer10 === void 0 ? void 0 : _item$acceptedOffer10.status) === \"accepted\") ? /*#__PURE__*/React.createElement(HyperLink, {\n            onClick: () => {\n              var _item$offer14, _item$offer15, _item$acceptedOffer11;\n\n              return setModal({\n                state: true,\n                name: `items[${index}].offer.reason`,\n                index,\n                des: (item === null || item === void 0 ? void 0 : (_item$offer14 = item.offer) === null || _item$offer14 === void 0 ? void 0 : _item$offer14.reason) || item.description || \"\",\n                editable: allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer15 = item.offer) === null || _item$offer15 === void 0 ? void 0 : _item$offer15.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer11 = item.acceptedOffer) === null || _item$acceptedOffer11 === void 0 ? void 0 : _item$acceptedOffer11.status) === \"accepted\")\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 33\n            }\n          }, (item === null || item === void 0 ? void 0 : (_item$offer16 = item.offer) === null || _item$offer16 === void 0 ? void 0 : _item$offer16.reason) || item.description ? \"View\" : \"Add\") : /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 33\n            }\n          }, \"-\")));\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(DescriptionModal, {\n      modal,\n      setModal,\n      handleChange,\n      values,\n      setFieldValue,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 15\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(SmallScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SmallClaimTable, {\n    items,\n    enableCheckBox,\n    selectAll,\n    allowEdit,\n    itemsChecked,\n    disableChekBox,\n    heading,\n    formikRef,\n    isRespondent,\n    caseId,\n    roundNumber,\n    status,\n    errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ClaimTabel;\nconst ClaimTable = styled.table`\n  display: none;\n  max-width: 1084px;\n  border-radius: 7px;\n  background-color: #f9f9f9;\n  & .tool-tip {\n    border: solid 0.5px #007aff;\n    & .name {\n      font-family: ${theme.fonts.primaryFontBold};\n      font-size: 12px;\n      font-weight: bold;\n      line-height: 1.83;\n      color: #007aff;\n    }\n    & .message {\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      font-size: 12px;\n      font-weight: 600;\n      color: #293461;\n    }\n  }\n  .input-white {\n    font-size: 12px;\n    padding: 8px;\n    & input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    & input[type=\"number\"] {\n      -moz-appearance: textfield;\n    }\n  }\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.md_up} {\n    display: block;\n  }\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: -10px;\n  & input {\n    text-align: right !important;\n  }\n`;\nconst TR = styled.tr`\n  .element {\n    opacity: ${props => props.accepted ? \"0.3\" : \"1\"};\n    font-family: ${theme.fonts.primaryFontSemiBold};\n    font-size: 12px;\n    color: #293461;\n  }\n`;\nconst HyperLink = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 12px;\n  color: #00838c;\n  text-decoration: underline;\n  cursor: pointer;\n  display: inline-block;\n`;\nconst Seperator = styled.div`\n  height: 18px;\n  width: 1px;\n  background-color: ${COLORS.INPUT_BORDER};\n`;\nconst TH = styled.th`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 10px;\n  color: #949ab0;\n  text-align: left;\n  padding: 13px 21px;\n  text-transform: capitalize;\n  & span {\n    padding: 0px;\n  }\n`;\nconst TD = styled.td`\n  padding: 10px 21px;\n  & span {\n    padding: 0px;\n  }\n  & .waring-msg {\n    color: ${COLORS.WARNING_COLOR};\n    font-size: 10px;\n    white-space: nowrap;\n    position: absolute;\n  }\n`;\nconst ClaimBoxHeading = styled.div`\n  display: none;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 1.83;\n  color: #293461;\n  text-transform: capitalize;\n  padding-bottom: 16px;\n  &:not(:first-of-type) {\n    padding-top: 20px;\n  }\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.md_up} {\n    display: block;\n  }\n`;\nconst SmallScreen = styled.div`\n  display: block;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints3 = theme.breakpoints) === null || _theme$breakpoints3 === void 0 ? void 0 : _theme$breakpoints3.md_up} {\n    display: none;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/ClaimTable.js"],"names":["React","createRef","useEffect","useRef","useState","theme","Checkbox","Tooltip","makeStyles","useMediaQuery","useTheme","Images","ReactTooltip","styled","Formik","FieldArray","DescriptionModal","CustomInputField","NumberFormat","COLORS","formatNumberToMetrics","getErrorMessage","CaseService","_","AWSService","useLoader","useSnackbar","useAlert","SmallClaimTable","ClaimTabel","items","enableCheckBox","selectAll","allowEdit","itemsChecked","disableChekBox","heading","formikRef","isRespondent","caseId","roundNumber","status","errorText","useTooltipStyles","tooltip","margin","hideAlert","showAlert","classes","modal","setModal","state","fileRef","length","setLength","documents","setDocuments","setLoader","enqueueSnackbar","themes","hasTriggered","setHasTrigger","isBigScreen","breakpoints","up","current","Array","fill","map","i","showwarning","value","Number","offer","claimValue","previousOffer","getCaseDocuments","result","getcaseDocuments","data","filter","doc","meta","round","error","renderUploadBox","item","index","document","find","claimItemId","id","role","acceptedOffer","isEmpty","click","marginTop","width","window","open","url","description_document_url","addOrUpdateDoc","file","update","errorMessage","type","message","name","payload","key","s3Response","getS3URL","uploadToS3","uploadType","docId","response","caseUpdateDocument","newDocs","caseAddDocument","uploadedDocument","s","variant","values","handleChange","setFieldValue","errors","initialValues","every","el","opacity","checkBox","ev","checked","target","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","descriptionTextStyle","textAlign","isOpen","onDialogClose","checkBoxSelected","title","e","numberText","split","join","toFixed","display","suggestedClaimValue","unit","parseFloat","toString","files","description","reason","des","editable","readOnly","ClaimTable","table","fonts","primaryFontBold","primaryFontSemiBold","md_up","Row","div","InputContainer","TR","tr","props","accepted","HyperLink","Seperator","INPUT_BORDER","TH","th","TD","td","WARNING_COLOR","ClaimBoxHeading","SmallScreen"],"mappings":"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","sourcesContent":["import React, { createRef, useEffect, useRef, useState } from \"react\";\nimport theme from \"../../../../assets/theme\";\nimport {\n  Checkbox,\n  Tooltip,\n  makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport { Images } from \"../../../../assets/images\";\nimport ReactTooltip from \"react-tooltip\";\nimport styled from \"styled-components\";\nimport { Formik, FieldArray } from \"formik\";\nimport DescriptionModal from \"../../../internal/CreateCase3/components/DescriptionModal\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport {\n  formatNumberToMetrics,\n  getErrorMessage,\n} from \"../../../../helpers/functions\";\nimport CaseService from \"../../../../services/CaseService\";\nimport _ from \"lodash\";\nimport AWSService from \"../../../../services/AWSService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport SmallClaimTable from \"./SmallClaimTable\";\n\nconst ClaimTabel = ({\n  items,\n  enableCheckBox,\n  selectAll,\n  allowEdit,\n  itemsChecked,\n  disableChekBox,\n  heading,\n  formikRef,\n  isRespondent,\n  caseId,\n  roundNumber,\n  status,\n  errorText,\n}) => {\n  const useTooltipStyles = makeStyles(() => ({\n    tooltip: {\n      margin: 0,\n    },\n  }));\n  const { hideAlert, showAlert } = useAlert();\n\n  const classes = useTooltipStyles();\n  const [modal, setModal] = useState({\n    state: false,\n  });\n  const fileRef = useRef([]);\n  const [length, setLength] = useState(1);\n  const [documents, setDocuments] = useState([]);\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const themes = useTheme();\n  const [hasTriggered, setHasTrigger] = useState(true);\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(769));\n\n  useEffect(() => {\n    if (items?.length > 0) {\n      setLength(items?.length);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items?.length]);\n\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length)\n        .fill()\n        .map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const showwarning = (value) => {\n    return Number(value?.offer?.claimValue) === Number(value?.previousOffer);\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  async function getCaseDocuments() {\n    try {\n      const result = await CaseService.getcaseDocuments(\n        caseId,\n        \"?page=1&perPage=10000\"\n      );\n      if (result?.data)\n        setDocuments(\n          result.data.filter((doc) => doc?.meta?.round === roundNumber)\n        );\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    if (items?.length && hasTriggered) {\n      getCaseDocuments();\n      setHasTrigger(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items, hasTriggered]);\n\n  function renderUploadBox({ item, index }) {\n    const document = documents.find(\n      (doc) =>\n        doc?.meta?.claimItemId === item?.id &&\n        (isRespondent\n          ? doc?.meta?.role === \"respondent\"\n          : doc?.meta?.role === \"claimant\") &&\n        doc?.meta?.round === roundNumber\n    );\n    if (\n      allowEdit &&\n      !(\n        item?.offer?.status === \"accepted\" ||\n        item?.acceptedOffer?.status === \"accepted\"\n      )\n    ) {\n      if (_.isEmpty(document)) {\n        return (\n          <HyperLink onClick={() => fileRef?.current[index]?.current?.click()}>\n            Add\n          </HyperLink>\n        );\n      } else {\n        return (\n          <Row style={{ marginTop: 0, width: 123 }}>\n            <HyperLink onClick={() => window.open(document?.url?.url)}>\n              View\n            </HyperLink>\n            <Seperator />\n            <HyperLink\n              onClick={() => fileRef?.current[index]?.current?.click()}\n            >\n              Update\n            </HyperLink>\n          </Row>\n        );\n      }\n    } else {\n      return !_.isEmpty(document) || item.description_document_url?.url ? (\n        <HyperLink\n          onClick={() =>\n            window.open(\n              !_.isEmpty(document)\n                ? document.url?.url\n                : item.description_document_url?.url\n            )\n          }\n        >\n          {\"Download\"}\n        </HyperLink>\n      ) : (\n        <div>-</div>\n      );\n    }\n  }\n\n  async function addOrUpdateDoc({ file, claimItemId }) {\n    try {\n      // const update = documents.find(\n      //   (doc) => doc?.meta?.claimItemId == claimItemId\n      // );\n      const update = documents.find(\n        (doc) =>\n          doc?.meta?.claimItemId === claimItemId &&\n          (isRespondent\n            ? doc?.meta?.role === \"respondent\"\n            : doc?.meta?.role === \"claimant\") &&\n          doc?.meta?.round === roundNumber\n      );\n      const errorMessage = \"Invalid File Type\";\n      if (file?.type !== \"application/pdf\") throw errorMessage;\n      setLoader({ state: true, message: `Uploading file ${file.name} ...` });\n      const payload = {\n        key: file.name,\n      };\n      const s3Response = await AWSService.getS3URL(payload);\n      if (s3Response.url) {\n        const url = await AWSService.uploadToS3(s3Response.url, file);\n        let payload = {\n          url: {\n            url: url,\n            uploadType: \"\",\n          },\n        };\n        if (!_.isEmpty(update)) {\n          const docId = update.id;\n          const response = await CaseService.caseUpdateDocument(\n            payload,\n            caseId,\n            docId\n          );\n          if (response) {\n            const newDocs = documents.map((doc) => ({\n              ...doc,\n              url: doc?.id === docId ? url : doc?.url,\n            }));\n            setDocuments(newDocs);\n          }\n        } else {\n          payload.meta = {\n            round: roundNumber,\n            claimItemId,\n            role: isRespondent ? \"respondent\" : \"claimant\",\n          };\n          const response = await CaseService.caseAddDocument(payload, caseId);\n          if (response?.uploadedDocument) {\n            setDocuments((s) => [...s, response.uploadedDocument]);\n          }\n        }\n        enqueueSnackbar(\"Successfully Uploaded\", { variant: \"success\" });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, { variant: \"error\" });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  return (\n    <>\n      {isBigScreen ? (\n        <Formik\n          innerRef={formikRef}\n          initialValues={{\n            items: items,\n          }}\n          enableReinitialize\n          validateOnBlur\n          validateOnChange\n          validateOnMount\n        >\n          {({ values, handleChange, setFieldValue, errors, initialValues }) => (\n            <>\n              <ClaimBoxHeading>{heading}</ClaimBoxHeading>\n              <ClaimTable>\n                <tbody>\n                  <TR>\n                    {enableCheckBox && (\n                      <Tooltip\n                        title={\n                          disableChekBox ||\n                          values?.items?.every((el) =>\n                            el?.offer\n                              ? el?.offer?.status === \"accepted\"\n                              : el?.acceptedOffer?.status === \"accepted\"\n                          )\n                            ? \"\"\n                            : \"Accept All\"\n                        }\n                        placement=\"top\"\n                        classes={classes}\n                      >\n                        <TH width=\"5%\">\n                          <Checkbox\n                            icon={\n                              <img\n                                alt=\"checked\"\n                                style={\n                                  disableChekBox\n                                    ? {\n                                        filter: \"grayscale(100%) !important\",\n                                        opacity: 0.5,\n                                      }\n                                    : {}\n                                }\n                                src={Images.checkBox}\n                              />\n                            }\n                            checked={values?.items?.every((el) =>\n                              el?.offer\n                                ? el?.offer?.status === \"accepted\"\n                                : el?.acceptedOffer?.status === \"accepted\"\n                            )}\n                            onChange={(ev) => {\n                              const checked = ev.target.checked;\n                              showAlert({\n                                heading: \"Please confirm!\",\n                                desc: `You are about to accept the offer made by the other party. Would you like us to go ahead and accept the offer for you?`,\n                                //desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                                primaryBtnText: \"Yes\",\n                                secondaryBtnText: \"No\",\n                                clickSecondarybtn: () => hideAlert(),\n                                clickPrimaryBtn: () => {\n                                  selectAll(\n                                    checked,\n                                    setFieldValue,\n                                    initialValues\n                                  );\n                                  hideAlert();\n                                },\n                                descriptionTextStyle: {\n                                  textAlign: \"left\",\n                                },\n                                isOpen: true,\n                                onDialogClose: () => hideAlert(),\n                              });\n                            }}\n                            disabled={\n                              disableChekBox ||\n                              values?.items?.every((el) =>\n                                el?.offer\n                                  ? el?.offer?.status === \"accepted\"\n                                  : el?.acceptedOffer?.status === \"accepted\"\n                              )\n                            }\n                            checkedIcon={\n                              <img\n                                alt=\"checked\"\n                                style={\n                                  disableChekBox\n                                    ? {\n                                        filter: \"grayscale(100%) !important\",\n                                        opacity: 0.5,\n                                      }\n                                    : {}\n                                }\n                                src={Images.checkBoxSelected}\n                              />\n                            }\n                          />\n                        </TH>\n                      </Tooltip>\n                    )}\n                    <TH width=\"16%\">\n                      {isRespondent\n                        ? \"Respondent Claim Item\"\n                        : \"Claimant Claim Item\"}\n                    </TH>\n                    <TH width=\"16%\" style={{ textAlign: \"right\" }}>\n                      {isRespondent\n                        ? \"Respondent Claim Value\"\n                        : \"Claimant Claim Value\"}\n                    </TH>\n                    <TH width=\"13%\">Unit</TH>\n                    <TH width=\"25%\">Supporting Document</TH>\n                    <TH width=\"25%\">Claim Description</TH>\n                  </TR>\n                  {values?.items && (\n                    <FieldArray\n                      name=\"items\"\n                      render={() =>\n                        values?.items?.map((item, index) => (\n                          <TR\n                            isEven={index % 2 === 0}\n                            key={index}\n                            accepted={\n                              item?.offer\n                                ? item?.offer?.status === \"accepted\"\n                                : item?.acceptedOffer?.status === \"accepted\"\n                            }\n                          >\n                            {enableCheckBox && (\n                              <Tooltip\n                                title={\n                                  disableChekBox ||\n                                  item?.acceptedOffer?.status === \"accepted\" ||\n                                  item?.offer?.status === \"accepted\"\n                                    ? \"\"\n                                    : \"Accept claim line item\"\n                                }\n                                placement=\"top\"\n                                classes={classes}\n                              >\n                                <TD>\n                                  <Checkbox\n                                    icon={\n                                      <img\n                                        alt=\"checked\"\n                                        style={\n                                          disableChekBox ||\n                                          item?.acceptedOffer?.status ===\n                                            \"accepted\"\n                                            ? {\n                                                filter:\n                                                  \"grayscale(100%) !important\",\n                                                opacity: 0.5,\n                                              }\n                                            : {}\n                                        }\n                                        src={Images.checkBox}\n                                      />\n                                    }\n                                    checked={\n                                      item?.offer\n                                        ? item?.offer?.status === \"accepted\"\n                                        : item?.acceptedOffer?.status ===\n                                          \"accepted\"\n                                    }\n                                    onChange={(ev) => {\n                                      const checked = ev.target.checked;\n                                      showAlert({\n                                        heading: \"Please confirm!\",\n                                        desc: `You are about to accept the offer made by the other party. Would you like us to go ahead and accept the offer for you?`,\n                                        //desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                                        primaryBtnText: \"Yes\",\n                                        secondaryBtnText: \"No\",\n                                        clickSecondarybtn: () => hideAlert(),\n                                        clickPrimaryBtn: () => {\n                                          itemsChecked(\n                                            checked,\n                                            item,\n                                            setFieldValue,\n                                            `items[${index}].offer`,\n                                            initialValues?.items[index].offer\n                                              .claimValue\n                                          );\n                                          hideAlert();\n                                        },\n                                        descriptionTextStyle: {\n                                          textAlign: \"left\",\n                                        },\n                                        isOpen: true,\n                                        onDialogClose: () => hideAlert(),\n                                      });\n                                    }}\n                                    disabled={\n                                      disableChekBox ||\n                                      item?.acceptedOffer?.status ===\n                                        \"accepted\" ||\n                                      item?.offer?.status === \"accepted\"\n                                    }\n                                    checkedIcon={\n                                      <img\n                                        alt=\"checked\"\n                                        style={\n                                          disableChekBox ||\n                                          item?.acceptedOffer?.status ===\n                                            \"accepted\"\n                                            ? {\n                                                filter:\n                                                  \"grayscale(100%) !important\",\n                                                opacity: 0.5,\n                                              }\n                                            : {}\n                                        }\n                                        src={Images.checkBoxSelected}\n                                      />\n                                    }\n                                  />\n                                </TD>\n                              </Tooltip>\n                            )}\n                            <TD>\n                              <div className=\"element\">{item.title}</div>\n                            </TD>\n                            <TD className=\"claim-table\">\n                              {allowEdit &&\n                              (item?.offer\n                                ? item?.offer?.status !== \"accepted\"\n                                : item?.acceptedOffer?.status !==\n                                  \"accepted\") ? (\n                                <>\n                                  <InputContainer>\n                                    <NumberFormat\n                                      thousandSeparator\n                                      thousandsGroupStyle=\"lakh\"\n                                      isNumericString={true}\n                                      decimalScale={2}\n                                      allowNegative={false}\n                                      data-tip\n                                      data-for={`input_${index}`}\n                                      error={\n                                        errors?.items &&\n                                        errors?.items[index]?.offer?.claimValue\n                                          ? true\n                                          : false\n                                      }\n                                      className={\"input-white\"}\n                                      value={item.offer?.claimValue}\n                                      // fixedDecimalScale\n                                      type={\"text\"}\n                                      customInput={CustomInputField}\n                                      name={`items[${index}].offer.claimValue`}\n                                      onChange={(e) => {\n                                        if (e.target.value) {\n                                          const numberText = e.target.value\n                                            ?.split(\",\")\n                                            .join(\"\");\n                                          setFieldValue(\n                                            `items[${index}].offer.claimValue`,\n                                            Number(numberText)\n                                          );\n                                        }\n                                      }}\n                                      onBlur={(e) => {\n                                        if (e.target.value) {\n                                          const numberText = e.target.value\n                                            ?.split(\",\")\n                                            .join(\"\");\n                                          setFieldValue(\n                                            `items[${index}].offer.claimValue`,\n                                            Number(numberText).toFixed(2)\n                                          );\n                                        }\n                                      }}\n                                      style={{ width: 120 }}\n                                      variant=\"outlined\"\n                                      min={0}\n                                    />\n                                    <NumberFormat\n                                      isNumericString={true}\n                                      decimalScale={2}\n                                      allowNegative={false}\n                                      value={item.offer?.claimValue}\n                                      type={\"text\"}\n                                      name={`items[${index}].offer.claimValue`}\n                                      onChange={handleChange}\n                                      style={{ width: 110, display: \"none\" }}\n                                      min={0}\n                                    />\n                                  </InputContainer>\n                                  {!!item?.offer?.suggestedClaimValue &&\n                                    item.unit === \"INR\" && (\n                                      <ReactTooltip\n                                        className=\"tool-tip\"\n                                        place=\"bottom\"\n                                        backgroundColor=\"#e1edf9\"\n                                        id={`input_${index}`}\n                                        arrowColor=\"#007aff\"\n                                        borderColor=\"#007aff\"\n                                        type=\"warning\"\n                                        effect=\"solid\"\n                                      >\n                                        {/* <div className=\"name\">JA Suggested</div> */}\n                                        <div className=\"message\">\n                                          {item.unit}{\" \"}\n                                          {formatNumberToMetrics(\n                                            parseFloat(\n                                              item?.offer?.suggestedClaimValue\n                                            )\n                                              .toFixed(2)\n                                              .toString(),\n                                            item.unit\n                                          )}{\" \"}\n                                          ( JustAct SmartSuggest )\n                                        </div>\n                                      </ReactTooltip>\n                                    )}\n\n                                  {showwarning(\n                                    values?.items[index],\n                                    initialValues?.items[index].previousOffer\n                                  ) && (\n                                    <div className=\"waring-msg\">\n                                      You've entered the same claim value\n                                    </div>\n                                  )}\n                                </>\n                              ) : (\n                                <div className=\"element right\">\n                                  {item?.offer\n                                    ? formatNumberToMetrics(\n                                        parseFloat(item?.offer?.claimValue)\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )\n                                    : item?.acceptedOffer\n                                    ? formatNumberToMetrics(\n                                        parseFloat(\n                                          item?.acceptedOffer?.claimValue\n                                        )\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )\n                                    : formatNumberToMetrics(\n                                        parseFloat(item.claimValue)\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )}\n                                </div>\n                              )}\n                            </TD>\n                            <TD>\n                              <div className=\"element\">{item.unit}</div>\n                            </TD>\n                            <TD>\n                              {renderUploadBox({ item, index })}\n                              <input\n                                ref={fileRef?.current[index]}\n                                onChange={(e) =>\n                                  addOrUpdateDoc({\n                                    file: e?.target?.files[0],\n                                    round: roundNumber,\n                                    claimItemId: item?.id,\n                                  })\n                                }\n                                type=\"file\"\n                                accept=\".pdf\"\n                                style={{ display: \"none\" }}\n                              />\n                            </TD>\n                            <TD>\n                              {item.description ||\n                              item?.offer?.reason ||\n                              (allowEdit &&\n                                !(\n                                  item?.offer?.status === \"accepted\" ||\n                                  item?.acceptedOffer?.status === \"accepted\"\n                                )) ? (\n                                <HyperLink\n                                  onClick={() =>\n                                    setModal({\n                                      state: true,\n                                      name: `items[${index}].offer.reason`,\n                                      index,\n                                      des:\n                                        item?.offer?.reason ||\n                                        item.description ||\n                                        \"\",\n                                      editable:\n                                        allowEdit &&\n                                        !(\n                                          item?.offer?.status === \"accepted\" ||\n                                          item?.acceptedOffer?.status ===\n                                            \"accepted\"\n                                        ),\n                                    })\n                                  }\n                                >\n                                  {item?.offer?.reason || item.description\n                                    ? \"View\"\n                                    : \"Add\"}\n                                </HyperLink>\n                              ) : (\n                                <div>-</div>\n                              )}\n                            </TD>\n                          </TR>\n                        ))\n                      }\n                    />\n                  )}\n                </tbody>\n              </ClaimTable>\n              <DescriptionModal\n                {...{\n                  modal,\n                  setModal,\n                  handleChange,\n                  values,\n                  setFieldValue,\n                  readOnly: true,\n                }}\n              />\n            </>\n          )}\n        </Formik>\n      ) : (\n        <SmallScreen>\n          <SmallClaimTable\n            {...{\n              items,\n              enableCheckBox,\n              selectAll,\n              allowEdit,\n              itemsChecked,\n              disableChekBox,\n              heading,\n              formikRef,\n              isRespondent,\n              caseId,\n              roundNumber,\n              status,\n              errorText,\n            }}\n          />\n        </SmallScreen>\n      )}\n    </>\n  );\n};\n\nexport default ClaimTabel;\n\nconst ClaimTable = styled.table`\n  display: none;\n  max-width: 1084px;\n  border-radius: 7px;\n  background-color: #f9f9f9;\n  & .tool-tip {\n    border: solid 0.5px #007aff;\n    & .name {\n      font-family: ${theme.fonts.primaryFontBold};\n      font-size: 12px;\n      font-weight: bold;\n      line-height: 1.83;\n      color: #007aff;\n    }\n    & .message {\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      font-size: 12px;\n      font-weight: 600;\n      color: #293461;\n    }\n  }\n  .input-white {\n    font-size: 12px;\n    padding: 8px;\n    & input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    & input[type=\"number\"] {\n      -moz-appearance: textfield;\n    }\n  }\n  @media ${theme?.breakpoints?.md_up} {\n    display: block;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-right: -10px;\n  & input {\n    text-align: right !important;\n  }\n`;\n\nconst TR = styled.tr`\n  .element {\n    opacity: ${(props) => (props.accepted ? \"0.3\" : \"1\")};\n    font-family: ${theme.fonts.primaryFontSemiBold};\n    font-size: 12px;\n    color: #293461;\n  }\n`;\n\nconst HyperLink = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 12px;\n  color: #00838c;\n  text-decoration: underline;\n  cursor: pointer;\n  display: inline-block;\n`;\n\nconst Seperator = styled.div`\n  height: 18px;\n  width: 1px;\n  background-color: ${COLORS.INPUT_BORDER};\n`;\n\nconst TH = styled.th`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 10px;\n  color: #949ab0;\n  text-align: left;\n  padding: 13px 21px;\n  text-transform: capitalize;\n  & span {\n    padding: 0px;\n  }\n`;\n\nconst TD = styled.td`\n  padding: 10px 21px;\n  & span {\n    padding: 0px;\n  }\n  & .waring-msg {\n    color: ${COLORS.WARNING_COLOR};\n    font-size: 10px;\n    white-space: nowrap;\n    position: absolute;\n  }\n`;\n\nconst ClaimBoxHeading = styled.div`\n  display: none;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 1.83;\n  color: #293461;\n  text-transform: capitalize;\n  padding-bottom: 16px;\n  &:not(:first-of-type) {\n    padding-top: 20px;\n  }\n  @media ${theme?.breakpoints?.md_up} {\n    display: block;\n  }\n`;\nconst SmallScreen = styled.div`\n  display: block;\n  @media ${theme?.breakpoints?.md_up} {\n    display: none;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}