{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateParty/common/AddressFormFields.js\";\nimport React, { Fragment } from \"react\";\nimport { FormControl, Block, HalfWidth, Margin } from \"../styles\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { states } from \"../../../../helpers/constants\";\nimport labels from \"../../../../helpers/labels.json\";\nexport default function AddressFormFields({\n  type = \"comm\",\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  setFieldValue\n}) {\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `${type}_house_no`,\n      label: labels[\"user.house_label\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target, _e$target2;\n\n        setFieldValue(`${type}_house_no`, e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n        setFieldValue(`${type}_billing_house_no`, e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target3;\n\n        setFieldValue(`${type}_house_no`, e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Block, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `${type}_locality`,\n      label: labels[\"user.locality\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target4, _e$target5;\n\n        setFieldValue(`${type}_locality`, e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.value);\n        setFieldValue(`${type}_billing_locality`, e === null || e === void 0 ? void 0 : (_e$target5 = e.target) === null || _e$target5 === void 0 ? void 0 : _e$target5.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target6;\n\n        setFieldValue(`${type}_locality`, e === null || e === void 0 ? void 0 : (_e$target6 = e.target) === null || _e$target6 === void 0 ? void 0 : _e$target6.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `${type}_city`,\n      label: labels[\"user.city\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target7, _e$target8;\n\n        setFieldValue(`${type}_city`, e === null || e === void 0 ? void 0 : (_e$target7 = e.target) === null || _e$target7 === void 0 ? void 0 : _e$target7.value);\n        setFieldValue(`${type}_billing_city`, e === null || e === void 0 ? void 0 : (_e$target8 = e.target) === null || _e$target8 === void 0 ? void 0 : _e$target8.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target9;\n\n        setFieldValue(`${type}_city`, e === null || e === void 0 ? void 0 : (_e$target9 = e.target) === null || _e$target9 === void 0 ? void 0 : _e$target9.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Block, {\n    style: {\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    menuItems: states,\n    input: {\n      type: \"select\",\n      name: `${type}_state`,\n      label: labels[\"user.state\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target10, _e$target11;\n\n        setFieldValue(`${type}_state`, e === null || e === void 0 ? void 0 : (_e$target10 = e.target) === null || _e$target10 === void 0 ? void 0 : _e$target10.value);\n        setFieldValue(`${type}_billing_state`, e === null || e === void 0 ? void 0 : (_e$target11 = e.target) === null || _e$target11 === void 0 ? void 0 : _e$target11.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target12;\n\n        setFieldValue(`${type}_state`, e === null || e === void 0 ? void 0 : (_e$target12 = e.target) === null || _e$target12 === void 0 ? void 0 : _e$target12.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(HalfWidth, {\n    className: \"disabledArrows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Margin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"number\",\n      name: `${type}_pin`,\n      label: labels[\"user.pin\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target13, _e$target14;\n\n        setFieldValue(`${type}_pin`, e === null || e === void 0 ? void 0 : (_e$target13 = e.target) === null || _e$target13 === void 0 ? void 0 : _e$target13.value);\n        setFieldValue(`${type}_billing_pin`, e === null || e === void 0 ? void 0 : (_e$target14 = e.target) === null || _e$target14 === void 0 ? void 0 : _e$target14.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target15;\n\n        setFieldValue(`${type}_pin`, e === null || e === void 0 ? void 0 : (_e$target15 = e.target) === null || _e$target15 === void 0 ? void 0 : _e$target15.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `${type}_landmark`,\n      label: labels[\"user.landmark\"],\n      required: true\n    },\n    handleChange: e => {\n      if (values.billingAddressType === \"same\") {\n        var _e$target16, _e$target17;\n\n        setFieldValue(`${type}_landmark`, e === null || e === void 0 ? void 0 : (_e$target16 = e.target) === null || _e$target16 === void 0 ? void 0 : _e$target16.value);\n        setFieldValue(`${type}_billing_landmark`, e === null || e === void 0 ? void 0 : (_e$target17 = e.target) === null || _e$target17 === void 0 ? void 0 : _e$target17.value);\n      } else if (values.billingAddressType === \"new\") {\n        var _e$target18;\n\n        setFieldValue(`${type}_landmark`, e === null || e === void 0 ? void 0 : (_e$target18 = e.target) === null || _e$target18 === void 0 ? void 0 : _e$target18.value);\n      }\n    },\n    values,\n    errors,\n    touched,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateParty/common/AddressFormFields.js"],"names":["React","Fragment","FormControl","Block","HalfWidth","Margin","FormField","states","labels","AddressFormFields","type","values","errors","touched","handleChange","handleBlur","setFieldValue","name","label","required","e","billingAddressType","target","value","margin"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport { FormControl, Block, HalfWidth, Margin } from \"../styles\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { states } from \"../../../../helpers/constants\";\nimport labels from \"../../../../helpers/labels.json\";\n\nexport default function AddressFormFields({\n  type = \"comm\",\n  values,\n  errors,\n  touched,\n  handleChange,\n  handleBlur,\n  setFieldValue,\n}) {\n  return (\n    <Fragment>\n      <FormControl>\n        <FormField\n          white\n          input={{\n            type: \"text\",\n            name: `${type}_house_no`,\n            label: labels[\"user.house_label\"],\n            required: true,\n          }}\n          handleChange={(e) => {\n            if (values.billingAddressType === \"same\") {\n              setFieldValue(`${type}_house_no`, e?.target?.value);\n              setFieldValue(`${type}_billing_house_no`, e?.target?.value);\n            } else if (values.billingAddressType === \"new\") {\n              setFieldValue(`${type}_house_no`, e?.target?.value);\n            }\n          }}\n          {...{\n            values,\n            errors,\n            touched,\n            handleBlur,\n          }}\n        />\n      </FormControl>\n      <FormControl>\n        <Block style={{ margin: 0 }}>\n          <HalfWidth>\n            <FormField\n              white\n              input={{\n                type: \"text\",\n                name: `${type}_locality`,\n                label: labels[\"user.locality\"],\n                required: true,\n              }}\n              handleChange={(e) => {\n                if (values.billingAddressType === \"same\") {\n                  setFieldValue(`${type}_locality`, e?.target?.value);\n                  setFieldValue(`${type}_billing_locality`, e?.target?.value);\n                } else if (values.billingAddressType === \"new\") {\n                  setFieldValue(`${type}_locality`, e?.target?.value);\n                }\n              }}\n              {...{\n                values,\n                errors,\n                touched,\n                handleBlur,\n              }}\n            />\n          </HalfWidth>\n          <HalfWidth>\n            <FormField\n              white\n              input={{\n                type: \"text\",\n                name: `${type}_city`,\n                label: labels[\"user.city\"],\n                required: true,\n              }}\n              handleChange={(e) => {\n                if (values.billingAddressType === \"same\") {\n                  setFieldValue(`${type}_city`, e?.target?.value);\n                  setFieldValue(`${type}_billing_city`, e?.target?.value);\n                } else if (values.billingAddressType === \"new\") {\n                  setFieldValue(`${type}_city`, e?.target?.value);\n                }\n              }}\n              {...{\n                values,\n                errors,\n                touched,\n                handleBlur,\n              }}\n            />\n          </HalfWidth>\n        </Block>\n      </FormControl>\n      <FormControl>\n        <Block style={{ margin: 0 }}>\n          <HalfWidth>\n            <FormField\n              white\n              menuItems={states}\n              input={{\n                type: \"select\",\n                name: `${type}_state`,\n                label: labels[\"user.state\"],\n                required: true,\n              }}\n              handleChange={(e) => {\n                if (values.billingAddressType === \"same\") {\n                  setFieldValue(`${type}_state`, e?.target?.value);\n                  setFieldValue(`${type}_billing_state`, e?.target?.value);\n                } else if (values.billingAddressType === \"new\") {\n                  setFieldValue(`${type}_state`, e?.target?.value);\n                }\n              }}\n              {...{\n                values,\n                errors,\n                touched,\n                handleBlur,\n              }}\n            />\n          </HalfWidth>\n\n          <HalfWidth className=\"disabledArrows\">\n            <Margin>\n              <FormField\n                white\n                input={{\n                  type: \"number\",\n                  name: `${type}_pin`,\n                  label: labels[\"user.pin\"],\n                  required: true,\n                }}\n                handleChange={(e) => {\n                  if (values.billingAddressType === \"same\") {\n                    setFieldValue(`${type}_pin`, e?.target?.value);\n                    setFieldValue(`${type}_billing_pin`, e?.target?.value);\n                  } else if (values.billingAddressType === \"new\") {\n                    setFieldValue(`${type}_pin`, e?.target?.value);\n                  }\n                }}\n                {...{\n                  values,\n                  errors,\n                  touched,\n                  handleBlur,\n                }}\n              />\n            </Margin>\n          </HalfWidth>\n        </Block>\n      </FormControl>\n      <FormControl>\n        <FormField\n          white\n          input={{\n            type: \"text\",\n            name: `${type}_landmark`,\n            label: labels[\"user.landmark\"],\n            required: true,\n          }}\n          handleChange={(e) => {\n            if (values.billingAddressType === \"same\") {\n              setFieldValue(`${type}_landmark`, e?.target?.value);\n              setFieldValue(`${type}_billing_landmark`, e?.target?.value);\n            } else if (values.billingAddressType === \"new\") {\n              setFieldValue(`${type}_landmark`, e?.target?.value);\n            }\n          }}\n          {...{\n            values,\n            errors,\n            touched,\n            handleBlur,\n          }}\n        />\n      </FormControl>\n    </Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}