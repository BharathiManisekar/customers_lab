{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PartyDetails/modal/index.js\",\n    _theme$breakpoints;\n\nimport React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { BasicDetailsLabel, Row } from \"../styles\";\nimport { StyledLabel } from \"../../../internal/CreateParty/styles\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { Formik } from \"formik\";\nimport { CustomFileUpload, CustomCheckbox } from \"../../../common/FormInputs\";\nimport { PrimaryCTAButton } from \"../../../common/Buttons\";\nimport AWSService from \"../../../../services/AWSService\";\nimport { AddAgentValidationSchema } from \"../../../../helpers/validationSchema\";\nimport PartyService from \"../../../../services/PartyService\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage, getFileName } from \"../../../../helpers/functions\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { CheckBoxLabel, CheckboxContainer } from \"../../CreateParty/styles\";\nimport labels from \"../../../../helpers/labels.json\";\nimport useAlert from \"../../../../hooks/useAlert\";\nconst inputs = [{\n  type: \"email\",\n  name: \"email\",\n  label: labels[\"agent.email\"],\n  required: true\n}, {\n  type: \"text\",\n  name: \"pan\",\n  label: labels[\"agent.pan\"]\n}];\nexport default function Index({\n  state,\n  setState,\n  party = {},\n  setParty\n}) {\n  var _party$agents, _party$agents2;\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    showAlert,\n    hideAlert\n  } = useAlert();\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        setLoader({\n          state: true,\n          message: `Uploading file ${file.name}`\n        });\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Upload was successful\", {\n            variant: \"success\"\n          });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        setFieldError(field, message);\n        enqueueSnackbar(\"Invalid File Type\", {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  async function onFormSubmit(values, {\n    resetForm\n  }) {\n    const {\n      email,\n      pan,\n      uri\n    } = values;\n\n    try {\n      setLoader({\n        state: true,\n        message: \"Creating Agent...\"\n      });\n      const payload = {\n        email,\n        panNumber: pan,\n        authorizationLetterUrl: uri,\n        role: (values === null || values === void 0 ? void 0 : values.role) ? \"primary\" : \"normal\"\n      };\n      const response = await PartyService.agentCreate(party.id, payload);\n\n      if (response) {\n        let newParty = { ...party\n        };\n        newParty.agents = [...party.agents, response.agent];\n        setParty(newParty);\n        enqueueSnackbar(response.message, {\n          variant: \"success\"\n        });\n        resetForm();\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  async function handleDeleteAgent(id) {\n    try {\n      if (id) {\n        setLoader({\n          state: true,\n          message: \"Deleting Agent...\"\n        });\n        const response = await PartyService.agentDelete(id, party.id);\n\n        if (response) {\n          let newParty = { ...party\n          };\n          newParty.agents = party.agents.filter(agent => agent.id !== id);\n          setParty(newParty);\n          enqueueSnackbar(response.message, {\n            variant: \"success\"\n          });\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      hideAlert();\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DrawerContainer, {\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    tooltip: \"An agent is a user on the system who is a Party or acting on behalf of a Party. The agent can be a counsel, advocate, friend or family of the party and will have rights to act on behalf of the respective Party\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, labels[\"actions.add_agents\"])), /*#__PURE__*/React.createElement(CloseModal, {\n    onClick: () => setState(false),\n    src: require(\"../../../../assets/images/closeModal.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  })), (party === null || party === void 0 ? void 0 : (_party$agents = party.agents) === null || _party$agents === void 0 ? void 0 : _party$agents.length) > 0 && /*#__PURE__*/React.createElement(AgentListContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BasicDetailsLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, labels[\"agents.added_agents\"], \" \", party === null || party === void 0 ? void 0 : party.name), party === null || party === void 0 ? void 0 : (_party$agents2 = party.agents) === null || _party$agents2 === void 0 ? void 0 : _party$agents2.map((agent, index) => {\n    var _agent$user, _agent$user$avatarUrl, _agent$user2, _agent$user3;\n\n    return /*#__PURE__*/React.createElement(JustifySpaceBetween, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AgentImage, {\n      src: (agent === null || agent === void 0 ? void 0 : (_agent$user = agent.user) === null || _agent$user === void 0 ? void 0 : (_agent$user$avatarUrl = _agent$user.avatarUrl) === null || _agent$user$avatarUrl === void 0 ? void 0 : _agent$user$avatarUrl.length) ? agent.user.avatarUrl : require(\"../../../../assets/images/userPlaceholder.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(AgentName, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, ((_agent$user2 = agent.user) === null || _agent$user2 === void 0 ? void 0 : _agent$user2.name) ? (_agent$user3 = agent.user) === null || _agent$user3 === void 0 ? void 0 : _agent$user3.name : agent.email)), /*#__PURE__*/React.createElement(DeleteIcon, {\n      onClick: () => showAlert({\n        heading: \"Remove Agent?\",\n        desc: `Are you sure you want to dis-associate this Agent from the Party? This operation cannot be undone.`,\n        // desc:\n        //   \"Are you sure you want to remove this agent from the party? This operation cannot be undone.\",\n        primaryBtnText: \"Remove\",\n        secondaryBtnText: \"Cancel\",\n        clickSecondarybtn: () => hideAlert(),\n        clickPrimaryBtn: () => handleDeleteAgent(agent.id),\n        isOpen: true,\n        onDialogClose: () => hideAlert()\n      }),\n      src: require(\"../../../../assets/images/removeIcon.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(AgentFormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BasicDetailsLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, labels[\"agents.new_agent\"], \" \", party === null || party === void 0 ? void 0 : party.name), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: \"\",\n      pan: \"\",\n      uri: \"\",\n      role: false\n    },\n    enableReinitialize: true,\n    validateOnBlur: true,\n    validationSchema: AddAgentValidationSchema,\n    validateOnChange: true,\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    setFieldValue,\n    setFieldError,\n    handleBlur\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, inputs.map((input, index) => /*#__PURE__*/React.createElement(FormField, {\n    key: index,\n    input,\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    setFieldValue,\n    setFieldError,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(BasicDetailsLabel, {\n    style: {\n      padding: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, labels.authorisation_letter, \" \"), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    key: values.uri,\n    error: touched.uri && errors.uri,\n    file: {\n      name: getFileName(values.uri)\n    },\n    setFile: file => s3Upload(file, \"uri\", setFieldValue, setFieldError),\n    accept: \".pdf, image/*\",\n    style: {\n      backgroundColor: COLORS.INPUT_BACKGROUND,\n      marginTop: 6,\n      marginBottom: 13\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CheckboxContainer, {\n    style: {\n      marginBottom: 20,\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckbox, {\n    name: \"role\",\n    checked: values.role,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(CheckBoxLabel, {\n    onClick: () => setFieldValue(\"role\", !values.role),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, labels[\"agent.primary_agent\"])), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, labels[\"buttons.add_agent\"]))))));\n}\nconst DrawerContainer = styled.div`\n  width: 100%;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n    width: 555px;\n  }\n`;\nconst HeadingContainer = styled.div`\n  padding-top: 35px;\n  padding-bottom: 20px;\n  padding-left: 30px;\n  padding-right: 54px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst JustifySpaceBetween = styled(Row)`\n  justify-content: space-between;\n  margin-top: 24px;\n`;\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n`;\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: ${COLORS.COLOR_DARK};\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\nconst AgentListContainer = styled.div`\n  padding-left: 30px;\n  padding-right: 54px;\n  padding-top: 47px;\n  padding-bottom: 22px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n`;\nconst DeleteIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n`;\nconst AgentImage = styled.img`\n  width: 26px;\n  height: 26px;\n  border-radius: 50%;\n  margin-right: 12px;\n`;\nconst AgentName = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 14px;\n  color: ${COLORS.COLOR_DARK};\n`;\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 28px;\n  padding-right: 94px;\n  padding-bottom: 26px;\n  & form {\n    padding-top: 10px;\n  }\n`;\nconst SampleText = styled.div`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 12px;\n  color: ${COLORS.COLOR_DARK};\n  margin: 8px 0 12px;\n  & span {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PartyDetails/modal/index.js"],"names":["React","Drawer","styled","COLORS","theme","BasicDetailsLabel","Row","StyledLabel","FormField","Formik","CustomFileUpload","CustomCheckbox","PrimaryCTAButton","AWSService","AddAgentValidationSchema","PartyService","useSnackbar","getErrorMessage","getFileName","useLoader","CheckBoxLabel","CheckboxContainer","labels","useAlert","inputs","type","name","label","required","Index","state","setState","party","setParty","enqueueSnackbar","setLoader","showAlert","hideAlert","s3Upload","file","field","setFieldValue","setFieldError","message","payload","key","s3Response","getS3URL","url","res","uploadToS3","variant","error","onFormSubmit","values","resetForm","email","pan","uri","panNumber","authorizationLetterUrl","role","response","agentCreate","id","newParty","agents","agent","handleDeleteAgent","agentDelete","filter","require","length","map","index","user","avatarUrl","heading","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","isOpen","onDialogClose","handleChange","errors","handleSubmit","touched","handleBlur","input","padding","authorisation_letter","backgroundColor","INPUT_BACKGROUND","marginTop","marginBottom","DrawerContainer","div","breakpoints","sm_up","HeadingContainer","INPUT_BORDER","JustifySpaceBetween","CloseModal","img","Heading","h3","COLOR_DARK","fonts","primaryFontExtraBold","AgentListContainer","DeleteIcon","AgentImage","AgentName","primaryFontSemiBold","AgentFormContainer","SampleText","primaryFontRegular"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { BasicDetailsLabel, Row } from \"../styles\";\nimport { StyledLabel } from \"../../../internal/CreateParty/styles\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { Formik } from \"formik\";\nimport { CustomFileUpload, CustomCheckbox } from \"../../../common/FormInputs\";\nimport { PrimaryCTAButton } from \"../../../common/Buttons\";\nimport AWSService from \"../../../../services/AWSService\";\nimport { AddAgentValidationSchema } from \"../../../../helpers/validationSchema\";\nimport PartyService from \"../../../../services/PartyService\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage, getFileName } from \"../../../../helpers/functions\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { CheckBoxLabel, CheckboxContainer } from \"../../CreateParty/styles\";\nimport labels from \"../../../../helpers/labels.json\";\nimport useAlert from \"../../../../hooks/useAlert\";\n\nconst inputs = [\n  {\n    type: \"email\",\n    name: \"email\",\n    label: labels[\"agent.email\"],\n    required: true,\n  },\n  {\n    type: \"text\",\n    name: \"pan\",\n    label: labels[\"agent.pan\"],\n  },\n];\n\nexport default function Index({ state, setState, party = {}, setParty }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const { setLoader } = useLoader();\n  const { showAlert, hideAlert } = useAlert();\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        setLoader({ state: true, message: `Uploading file ${file.name}` });\n        const payload = {\n          key: file.name,\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Upload was successful\", { variant: \"success\" });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        setFieldError(field, message);\n        enqueueSnackbar(\"Invalid File Type\", { variant: \"error\" });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  async function onFormSubmit(values, { resetForm }) {\n    const { email, pan, uri } = values;\n    try {\n      setLoader({ state: true, message: \"Creating Agent...\" });\n      const payload = {\n        email,\n        panNumber: pan,\n        authorizationLetterUrl: uri,\n        role: values?.role ? \"primary\" : \"normal\",\n      };\n      const response = await PartyService.agentCreate(party.id, payload);\n      if (response) {\n        let newParty = { ...party };\n        newParty.agents = [...party.agents, response.agent];\n        setParty(newParty);\n        enqueueSnackbar(response.message, {\n          variant: \"success\",\n        });\n        resetForm();\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n  async function handleDeleteAgent(id) {\n    try {\n      if (id) {\n        setLoader({ state: true, message: \"Deleting Agent...\" });\n        const response = await PartyService.agentDelete(id, party.id);\n        if (response) {\n          let newParty = { ...party };\n          newParty.agents = party.agents.filter((agent) => agent.id !== id);\n          setParty(newParty);\n          enqueueSnackbar(response.message, {\n            variant: \"success\",\n          });\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n      hideAlert();\n    }\n  }\n  return (\n    <Drawer anchor={\"right\"} open={state}>\n      <DrawerContainer role=\"presentation\">\n        <HeadingContainer>\n          <StyledLabel tooltip=\"An agent is a user on the system who is a Party or acting on behalf of a Party. The agent can be a counsel, advocate, friend or family of the party and will have rights to act on behalf of the respective Party\">\n            <Heading>{labels[\"actions.add_agents\"]}</Heading>\n          </StyledLabel>\n          <CloseModal\n            onClick={() => setState(false)}\n            src={require(\"../../../../assets/images/closeModal.svg\")}\n          />\n        </HeadingContainer>\n        {party?.agents?.length > 0 && (\n          <AgentListContainer>\n            <BasicDetailsLabel>\n              {labels[\"agents.added_agents\"]} {party?.name}\n            </BasicDetailsLabel>\n            {party?.agents?.map((agent, index) => (\n              <JustifySpaceBetween key={index}>\n                <Row>\n                  <AgentImage\n                    src={\n                      agent?.user?.avatarUrl?.length\n                        ? agent.user.avatarUrl\n                        : require(\"../../../../assets/images/userPlaceholder.svg\")\n                    }\n                  />\n                  <AgentName>\n                    {agent.user?.name ? agent.user?.name : agent.email}\n                  </AgentName>\n                </Row>\n                <DeleteIcon\n                  onClick={() =>\n                    showAlert({\n                      heading: \"Remove Agent?\",\n                      desc: `Are you sure you want to dis-associate this Agent from the Party? This operation cannot be undone.`,\n                      // desc:\n                      //   \"Are you sure you want to remove this agent from the party? This operation cannot be undone.\",\n                      primaryBtnText: \"Remove\",\n                      secondaryBtnText: \"Cancel\",\n                      clickSecondarybtn: () => hideAlert(),\n                      clickPrimaryBtn: () => handleDeleteAgent(agent.id),\n                      isOpen: true,\n                      onDialogClose: () => hideAlert(),\n                    })\n                  }\n                  src={require(\"../../../../assets/images/removeIcon.svg\")}\n                />\n              </JustifySpaceBetween>\n            ))}\n          </AgentListContainer>\n        )}\n        <AgentFormContainer>\n          <BasicDetailsLabel>\n            {labels[\"agents.new_agent\"]} {party?.name}\n          </BasicDetailsLabel>\n          <Formik\n            initialValues={{ email: \"\", pan: \"\", uri: \"\", role: false }}\n            enableReinitialize\n            validateOnBlur\n            validationSchema={AddAgentValidationSchema}\n            validateOnChange\n            onSubmit={onFormSubmit}\n          >\n            {({\n              values,\n              handleChange,\n              errors,\n              handleSubmit,\n              touched,\n              setFieldValue,\n              setFieldError,\n              handleBlur,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                {inputs.map((input, index) => (\n                  <FormField\n                    key={index}\n                    {...{\n                      input,\n                      values,\n                      handleChange,\n                      errors,\n                      handleSubmit,\n                      touched,\n                      setFieldValue,\n                      setFieldError,\n                      handleBlur,\n                    }}\n                  />\n                ))}\n                {/* commented for this card (https://app.clickup.com/t/1z8ejx)\n                <SampleText>\n                  {labels[\"agents.sample\"]}{\" \"}\n                  <span\n                    onClick={() =>\n                      window.open(\n                        \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/1/1592213359658-054283fa-cd07-4e37-973b-eb494e2d905c-1590046534251-e0653346-fb8b-4ae5-8914-bcd88b35144d-dummy%20%282%29.pdf\"\n                      )\n                    }\n                  >\n                    here\n                  </span>\n                </SampleText> */}\n                <BasicDetailsLabel style={{ padding: \"5px\" }}>\n                  {labels.authorisation_letter}{\" \"}\n                  {/* {<span className=\"required-star\"> *</span>} */}\n                </BasicDetailsLabel>\n                <CustomFileUpload\n                  key={values.uri}\n                  error={touched.uri && errors.uri}\n                  file={{ name: getFileName(values.uri) }}\n                  setFile={(file) =>\n                    s3Upload(file, \"uri\", setFieldValue, setFieldError)\n                  }\n                  accept=\".pdf, image/*\"\n                  style={{\n                    backgroundColor: COLORS.INPUT_BACKGROUND,\n                    marginTop: 6,\n                    marginBottom: 13,\n                  }}\n                />\n                <CheckboxContainer style={{ marginBottom: 20, marginTop: 10 }}>\n                  <CustomCheckbox\n                    name=\"role\"\n                    checked={values.role}\n                    onChange={handleChange}\n                  />\n                  <CheckBoxLabel\n                    onClick={() => setFieldValue(\"role\", !values.role)}\n                  >\n                    {labels[\"agent.primary_agent\"]}\n                  </CheckBoxLabel>\n                </CheckboxContainer>\n                <PrimaryCTAButton onClick={handleSubmit}>\n                  {labels[\"buttons.add_agent\"]}\n                </PrimaryCTAButton>\n              </form>\n            )}\n          </Formik>\n        </AgentFormContainer>\n      </DrawerContainer>\n    </Drawer>\n  );\n}\n\nconst DrawerContainer = styled.div`\n  width: 100%;\n  @media ${theme?.breakpoints?.sm_up} {\n    width: 555px;\n  }\n`;\n\nconst HeadingContainer = styled.div`\n  padding-top: 35px;\n  padding-bottom: 20px;\n  padding-left: 30px;\n  padding-right: 54px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst JustifySpaceBetween = styled(Row)`\n  justify-content: space-between;\n  margin-top: 24px;\n`;\n\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: ${COLORS.COLOR_DARK};\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\n\nconst AgentListContainer = styled.div`\n  padding-left: 30px;\n  padding-right: 54px;\n  padding-top: 47px;\n  padding-bottom: 22px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n`;\n\nconst DeleteIcon = styled.img`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  cursor: pointer;\n`;\n\nconst AgentImage = styled.img`\n  width: 26px;\n  height: 26px;\n  border-radius: 50%;\n  margin-right: 12px;\n`;\n\nconst AgentName = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 14px;\n  color: ${COLORS.COLOR_DARK};\n`;\n\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 28px;\n  padding-right: 94px;\n  padding-bottom: 26px;\n  & form {\n    padding-top: 10px;\n  }\n`;\n\nconst SampleText = styled.div`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 12px;\n  color: ${COLORS.COLOR_DARK};\n  margin: 8px 0 12px;\n  & span {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}