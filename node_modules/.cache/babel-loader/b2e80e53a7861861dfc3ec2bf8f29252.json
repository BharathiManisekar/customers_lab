{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Login/Login.js\";\nimport React, { useEffect } from \"react\";\nimport { Header3, HeadingContainer, CardWrapper, ContentContainer, AnchorText, BackArrow, Center } from \"../../../styles/component/style\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport { Formik } from \"formik\";\nimport { LoginEmailValidationSchema, LoginMobileValidationSchema } from \"../../../helpers/validationSchema\";\nimport FormField from \"../../common/FormField/FormField\";\nimport _ from \"lodash\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { navigate } from \"@reach/router\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport styled, { css } from \"styled-components\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport GLogin from \"../../common/GoogleLogin\";\nimport { Helmet } from \"react-helmet\";\n\nconst Login = ({\n  heading = \"Login\",\n  inputs = [],\n  submitLabel = \"Login\",\n  currentTab,\n  setCurrentTab,\n  disableSubmit = false,\n  location\n}) => {\n  var _state$payload2, _state$payload3, _state$payload4, _state$payload5;\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setToken\n  } = useUser();\n  const {\n    state\n  } = location;\n  const {\n    setLoader\n  } = useLoader();\n  useEffect(() => {\n    var _state$payload;\n\n    if (state === null || state === void 0 ? void 0 : (_state$payload = state.payload) === null || _state$payload === void 0 ? void 0 : _state$payload.mobile) {\n      setCurrentTab(\"mobile\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state === null || state === void 0 ? void 0 : (_state$payload2 = state.payload) === null || _state$payload2 === void 0 ? void 0 : _state$payload2.mobile]);\n\n  async function onFormSubmit(values) {\n    try {\n      setLoader({\n        state: true\n      });\n      const payloadType = currentTab;\n\n      let payload = _.pick(values, [currentTab, \"password\"]);\n\n      if (payloadType === \"mobile\") {\n        delete payload.password;\n      }\n\n      const response = await AuthService.login(payload);\n\n      if (response.token && (payloadType === \"email\" || payloadType === \"mobile\")) {\n        setToken(response.token);\n        enqueueSnackbar(\"Login successful\", {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard\");\n      } else {\n        enqueueSnackbar(\"OTP sent successfully\", {\n          variant: \"success\"\n        });\n        navigate(\"/login/otp\", {\n          state: {\n            payload,\n            values\n          }\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n  /**\n   * @description Function to login with google\n   * @param {*} res\n   */\n\n\n  async function loginWithGoogle(res) {\n    var _res$tokenObj;\n\n    if (res === null || res === void 0 ? void 0 : (_res$tokenObj = res.tokenObj) === null || _res$tokenObj === void 0 ? void 0 : _res$tokenObj.id_token) {\n      try {\n        var _res$tokenObj2;\n\n        setLoader({\n          state: true\n        });\n        const payload = {\n          idToken: res === null || res === void 0 ? void 0 : (_res$tokenObj2 = res.tokenObj) === null || _res$tokenObj2 === void 0 ? void 0 : _res$tokenObj2.id_token\n        };\n        const response = await AuthService.loginWithgoogle(payload);\n\n        if (response.token) {\n          setToken(response.token);\n          enqueueSnackbar(\"Login successful\", {\n            variant: \"success\"\n          });\n          navigate(\"/dashboard\");\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    \"http-equiv\": \"Content-Type\",\n    content: \"text/html; charset=utf-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Log In - JustAct\"), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"description\",\n    content: \"JustAct Log In - Enter the mail id and password to login to your JustAct Account.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"keywords\",\n    content: \"Log In, JustAct, Resolve Disputes Online, Online Dispute Resolution, ODR Services, Alternative Dispute Resolution, ADR Services, Online Dispute Resolution in India\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: (state === null || state === void 0 ? void 0 : (_state$payload3 = state.payload) === null || _state$payload3 === void 0 ? void 0 : _state$payload3.email) || \"\",\n      mobile: (state === null || state === void 0 ? void 0 : (_state$payload4 = state.payload) === null || _state$payload4 === void 0 ? void 0 : _state$payload4.mobile) || \"\",\n      password: (state === null || state === void 0 ? void 0 : (_state$payload5 = state.payload) === null || _state$payload5 === void 0 ? void 0 : _state$payload5.password) || \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: onFormSubmit,\n    validationSchema: inputs[0].type === \"email\" ? LoginEmailValidationSchema : LoginMobileValidationSchema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(CardWrapper, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    onClick: () => navigate(\"/\"),\n    src: require(\"../../../assets/images/backArrow.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 15\n    }\n  }, heading)), /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    selected: currentTab === \"email\",\n    onClick: () => setCurrentTab(\"email\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"With Email\"), /*#__PURE__*/React.createElement(Tab, {\n    selected: currentTab === \"mobile\",\n    onClick: () => setCurrentTab(\"mobile\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 15\n    }\n  }, \"With Phone Number\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, currentTab === \"mobile\" ? /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, \"Enter your Registered Mobile Number\") : \"\", inputs.filter(input => currentTab === \"mobile\" ? input.name === currentTab : true).map((input, index) => {\n    return /*#__PURE__*/React.createElement(FormField, {\n      key: index,\n      touched,\n      errors,\n      input,\n      values,\n      handleChange,\n      handleBlur,\n      setFieldValue,\n      currentTab,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt20 pb10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: disableSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, submitLabel)), currentTab === \"mobile\" ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(AnchorText, {\n    onClick: () => {\n      if (!touched.email) {\n        enqueueSnackbar(\"Enter Your Email\", {\n          variant: \"error\"\n        });\n      }\n\n      if (!errors.email && touched.email) {\n        navigate(\"/forgot-password\", {\n          state: {\n            email: values.email\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Forgot Password\")), /*#__PURE__*/React.createElement(Center, {\n    className: \"openSans-SemiBold pt10 pb10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pb20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(GLogin, {\n    label: \"Login with Google\",\n    className: \"p8\",\n    onSuccess: loginWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default Login;\nconst Tabs = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  border-radius: 10px;\n  background-color: #f4f5f9;\n  width: 75%;\n  margin: 0 auto;\n  padding: 8px;\n  margin-top: 20px;\n  @media (max-width: 600px) {\n    width: 95%;\n  }\n  @media (max-width: 400px) {\n    width: 95%;\n    flex-direction: column;\n  }\n`;\nconst Tab = styled.div`\n  flex: 1;\n  border-radius: 7px;\n  color: ${COLORS.INPUT_LABEL};\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  font-size: 12px;\n  font-family: ${theme.fonts.primaryFontBold};\n  ${({\n  selected\n}) => selected && css`\n      background-color: #293461;\n      color: white;\n    `}\n  @media (max-width: 400px) {\n    width: 95%;\n  }\n`;\nconst Heading = styled.div`\n  font-size: 14px;\n  font-family: ${theme.fonts.primaryFontRegular};\n  line-height: 1.29;\n  letter-spacing: normal;\n  text-align: center;\n  color: ${COLORS.COLOR_DARK};\n  margin-top: 19px;\n  margin-bottom: 37px;\n  @media (max-width: 500px) {\n    margin-top: 10px;\n    margin-bottom: 15px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Login/Login.js"],"names":["React","useEffect","Header3","HeadingContainer","CardWrapper","ContentContainer","AnchorText","BackArrow","Center","PrimaryCTAButton","Formik","LoginEmailValidationSchema","LoginMobileValidationSchema","FormField","_","AuthService","useSnackbar","navigate","getErrorMessage","styled","css","theme","COLORS","useUser","useLoader","GLogin","Helmet","Login","heading","inputs","submitLabel","currentTab","setCurrentTab","disableSubmit","location","enqueueSnackbar","setToken","state","setLoader","payload","mobile","onFormSubmit","values","payloadType","pick","password","response","login","token","variant","error","message","loginWithGoogle","res","tokenObj","id_token","idToken","loginWithgoogle","email","type","handleChange","errors","handleSubmit","touched","handleBlur","setFieldValue","require","filter","input","name","map","index","Tabs","div","Tab","INPUT_LABEL","fonts","primaryFontBold","selected","Heading","primaryFontRegular","COLOR_DARK"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  Header3,\n  HeadingContainer,\n  CardWrapper,\n  ContentContainer,\n  AnchorText,\n  BackArrow,\n  Center\n} from \"../../../styles/component/style\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport { Formik } from \"formik\";\nimport {\n  LoginEmailValidationSchema,\n  LoginMobileValidationSchema\n} from \"../../../helpers/validationSchema\";\nimport FormField from \"../../common/FormField/FormField\";\nimport _ from \"lodash\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { navigate } from \"@reach/router\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport styled, { css } from \"styled-components\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport GLogin from \"../../common/GoogleLogin\";\nimport { Helmet } from \"react-helmet\";\n\nconst Login = ({\n  heading = \"Login\",\n  inputs = [],\n  submitLabel = \"Login\",\n  currentTab,\n  setCurrentTab,\n  disableSubmit = false,\n  location\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { setToken } = useUser();\n  const { state } = location;\n  const { setLoader } = useLoader();\n\n  useEffect(() => {\n    if (state?.payload?.mobile) {\n      setCurrentTab(\"mobile\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state?.payload?.mobile]);\n\n  async function onFormSubmit(values) {\n    try {\n      setLoader({ state: true });\n      const payloadType = currentTab;\n      let payload = _.pick(values, [currentTab, \"password\"]);\n      if (payloadType === \"mobile\") {\n        delete payload.password;\n      }\n      const response = await AuthService.login(payload);\n      if (\n        response.token &&\n        (payloadType === \"email\" || payloadType === \"mobile\")\n      ) {\n        setToken(response.token);\n        enqueueSnackbar(\"Login successful\", {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard\");\n      } else {\n        enqueueSnackbar(\"OTP sent successfully\", {\n          variant: \"success\"\n        });\n        navigate(\"/login/otp\", {\n          state: {\n            payload,\n            values\n          }\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  /**\n   * @description Function to login with google\n   * @param {*} res\n   */\n  async function loginWithGoogle(res) {\n    if (res?.tokenObj?.id_token) {\n      try {\n        setLoader({ state: true });\n        const payload = {\n          idToken: res?.tokenObj?.id_token\n        };\n        const response = await AuthService.loginWithgoogle(payload);\n        if (response.token) {\n          setToken(response.token);\n          enqueueSnackbar(\"Login successful\", {\n            variant: \"success\"\n          });\n          navigate(\"/dashboard\");\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  return (\n    <>\n      <Helmet>\n        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n        <title>Log In - JustAct</title>\n        <meta\n          name=\"description\"\n          content=\"JustAct Log In - Enter the mail id and password to login to your JustAct Account.\"\n        />\n        <meta\n          name=\"keywords\"\n          content=\"Log In, JustAct, Resolve Disputes Online, Online Dispute Resolution, ODR Services, Alternative Dispute Resolution, ADR Services, Online Dispute Resolution in India\"\n        />\n      </Helmet>\n      <Formik\n        initialValues={{\n          email: state?.payload?.email || \"\",\n          mobile: state?.payload?.mobile || \"\",\n          password: state?.payload?.password || \"\"\n        }}\n        enableReinitialize\n        onSubmit={onFormSubmit}\n        validationSchema={\n          inputs[0].type === \"email\"\n            ? LoginEmailValidationSchema\n            : LoginMobileValidationSchema\n        }\n        validateOnBlur\n        validateOnChange\n      >\n        {({\n          values,\n          handleChange,\n          errors,\n          handleSubmit,\n          touched,\n          handleBlur,\n          setFieldValue\n        }) => (\n          <CardWrapper onSubmit={handleSubmit}>\n            <HeadingContainer>\n              <BackArrow\n                onClick={() => navigate(\"/\")}\n                src={require(\"../../../assets/images/backArrow.svg\")}\n              />\n              <Header3>{heading}</Header3>\n            </HeadingContainer>\n            <Tabs>\n              <Tab\n                selected={currentTab === \"email\"}\n                onClick={() => setCurrentTab(\"email\")}\n              >\n                With Email\n              </Tab>\n              <Tab\n                selected={currentTab === \"mobile\"}\n                onClick={() => setCurrentTab(\"mobile\")}\n              >\n                With Phone Number\n              </Tab>\n            </Tabs>\n            <ContentContainer>\n              {currentTab === \"mobile\" ? (\n                <Heading>Enter your Registered Mobile Number</Heading>\n              ) : (\n                \"\"\n              )}\n              {inputs\n                .filter(input =>\n                  currentTab === \"mobile\" ? input.name === currentTab : true\n                )\n                .map((input, index) => {\n                  return (\n                    <FormField\n                      key={index}\n                      {...{\n                        touched,\n                        errors,\n                        input,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        currentTab\n                      }}\n                    />\n                  );\n                })}\n            </ContentContainer>\n\n            <div className=\"pt20 pb10\">\n              <PrimaryCTAButton\n                type=\"submit\"\n                onClick={handleSubmit}\n                disabled={disableSubmit}\n              >\n                {submitLabel}\n              </PrimaryCTAButton>\n            </div>\n            {currentTab === \"mobile\" ? null : (\n              <div className=\"center\">\n                <AnchorText\n                  onClick={() => {\n                    if (!touched.email) {\n                      enqueueSnackbar(\"Enter Your Email\", {\n                        variant: \"error\"\n                      });\n                    }\n                    if (!errors.email && touched.email) {\n                      navigate(\"/forgot-password\", {\n                        state: { email: values.email }\n                      });\n                    }\n                  }}\n                >\n                  Forgot Password\n                </AnchorText>\n              </div>\n            )}\n            <Center className=\"openSans-SemiBold pt10 pb10\">Or</Center>\n            <div className=\"pb20\">\n              <GLogin\n                label=\"Login with Google\"\n                className=\"p8\"\n                onSuccess={loginWithGoogle}\n              />\n            </div>\n          </CardWrapper>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default Login;\n\nconst Tabs = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n  border-radius: 10px;\n  background-color: #f4f5f9;\n  width: 75%;\n  margin: 0 auto;\n  padding: 8px;\n  margin-top: 20px;\n  @media (max-width: 600px) {\n    width: 95%;\n  }\n  @media (max-width: 400px) {\n    width: 95%;\n    flex-direction: column;\n  }\n`;\nconst Tab = styled.div`\n  flex: 1;\n  border-radius: 7px;\n  color: ${COLORS.INPUT_LABEL};\n  cursor: pointer;\n  user-select: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding-top: 6px;\n  padding-bottom: 6px;\n  font-size: 12px;\n  font-family: ${theme.fonts.primaryFontBold};\n  ${({ selected }) =>\n    selected &&\n    css`\n      background-color: #293461;\n      color: white;\n    `}\n  @media (max-width: 400px) {\n    width: 95%;\n  }\n`;\n\nconst Heading = styled.div`\n  font-size: 14px;\n  font-family: ${theme.fonts.primaryFontRegular};\n  line-height: 1.29;\n  letter-spacing: normal;\n  text-align: center;\n  color: ${COLORS.COLOR_DARK};\n  margin-top: 19px;\n  margin-bottom: 37px;\n  @media (max-width: 500px) {\n    margin-top: 10px;\n    margin-bottom: 15px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}