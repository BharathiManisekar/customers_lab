{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ChangePassword/index.js\";\nimport React, { useState } from \"react\";\nimport { Center, Header3, HeadingContainer, CardWrapper, ContentContainer, BackArrow } from \"../../../styles/component/style\";\nimport { SignupContainer } from \"./styles\";\nimport { Header } from \"../../internal/Header/Header\";\nimport { Formik } from \"formik\";\nimport { ChangePasswordSchema } from \"../../../helpers/validationSchema\";\nimport { navigate } from \"@reach/router\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AuthService from \"../../../services/AuthService\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\n\nconst Index = () => {\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [inputs] = useState([{\n    name: \"oldPassword\",\n    label: \"Current Password\",\n    type: \"password\",\n    required: true\n  }, {\n    name: \"newPassword\",\n    label: \"New Password\",\n    type: \"password\",\n    required: true\n  }, {\n    name: \"confirmPassword\",\n    label: \"Confirm New Password\",\n    type: \"password\",\n    required: true\n  }]);\n\n  async function onFormSubmit({\n    oldPassword,\n    newPassword\n  }) {\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting...\"\n      });\n      const payload = {\n        oldPassword,\n        newPassword\n      };\n      const response = await AuthService.changePassword(payload);\n\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard/profile\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Header, {\n    hideIcon: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignupContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      oldPassword: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: onFormSubmit,\n    validationSchema: ChangePasswordSchema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue,\n    isValid\n  }) => /*#__PURE__*/React.createElement(CardWrapper, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    onClick: () => navigate(\"/\"),\n    src: require(\"../../../assets/images/backArrow.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 19\n    }\n  }, \"CHANGE PASSWORD\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    style: {\n      marginTop: 34\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, inputs.map((input, index) => {\n    return /*#__PURE__*/React.createElement(FormField, {\n      key: index,\n      touched,\n      errors,\n      input,\n      values,\n      handleChange,\n      handleBlur,\n      setFieldValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt20 pb10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 19\n    }\n  }, \"Change Password\")))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ChangePassword/index.js"],"names":["React","useState","Center","Header3","HeadingContainer","CardWrapper","ContentContainer","BackArrow","SignupContainer","Header","Formik","ChangePasswordSchema","navigate","FormField","PrimaryCTAButton","useLoader","AuthService","getErrorMessage","useSnackbar","Index","setLoader","enqueueSnackbar","inputs","name","label","type","required","onFormSubmit","oldPassword","newPassword","state","message","payload","response","changePassword","variant","error","confirmPassword","values","handleChange","errors","handleSubmit","touched","handleBlur","setFieldValue","isValid","require","marginTop","map","input","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Center,\n  Header3,\n  HeadingContainer,\n  CardWrapper,\n  ContentContainer,\n  BackArrow,\n} from \"../../../styles/component/style\";\n\nimport { SignupContainer } from \"./styles\";\nimport { Header } from \"../../internal/Header/Header\";\nimport { Formik } from \"formik\";\nimport { ChangePasswordSchema } from \"../../../helpers/validationSchema\";\nimport { navigate } from \"@reach/router\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AuthService from \"../../../services/AuthService\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\n\n\nconst Index = () => {\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [inputs] = useState([\n    {\n      name: \"oldPassword\",\n      label: \"Current Password\",\n      type: \"password\",\n      required: true,\n    },\n    {\n      name: \"newPassword\",\n      label: \"New Password\",\n      type: \"password\",\n      required: true,\n    },\n    {\n      name: \"confirmPassword\",\n      label: \"Confirm New Password\",\n      type: \"password\",\n      required: true,\n    },\n  ]);\n\n  async function onFormSubmit({ oldPassword, newPassword }) {\n    try {\n      setLoader({ state: true, message: \"Submitting...\" });\n      const payload = {\n        oldPassword,\n        newPassword,\n      };\n      const response = await AuthService.changePassword(payload);\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\",\n        });\n        navigate(\"/dashboard/profile\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  return (\n    <Header hideIcon={true}>\n      <Center>\n        <SignupContainer>\n          <Formik\n            initialValues={{\n              oldPassword: \"\",\n              newPassword: \"\",\n              confirmPassword: \"\",\n            }}\n            enableReinitialize\n            onSubmit={onFormSubmit}\n            validationSchema={ChangePasswordSchema}\n            validateOnBlur\n            validateOnChange\n          >\n            {({\n              values,\n              handleChange,\n              errors,\n              handleSubmit,\n              touched,\n              handleBlur,\n              setFieldValue,\n              isValid,\n            }) => (\n              <CardWrapper onSubmit={handleSubmit}>\n                <HeadingContainer>\n                  <BackArrow\n                    onClick={() => navigate(\"/\")}\n                    src={require(\"../../../assets/images/backArrow.svg\")}\n                  />\n                  <Header3>CHANGE PASSWORD</Header3>\n                </HeadingContainer>\n                <ContentContainer style={{ marginTop: 34 }}>\n                  {inputs.map((input, index) => {\n                    return (\n                      <FormField\n                        key={index}\n                        {...{\n                          touched,\n                          errors,\n                          input,\n                          values,\n                          handleChange,\n                          handleBlur,\n                          setFieldValue,\n                        }}\n                      />\n                    );\n                  })}\n                </ContentContainer>\n\n                <div className=\"pt20 pb10\">\n                  <PrimaryCTAButton\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={!isValid}\n                  >\n                    Change Password\n                  </PrimaryCTAButton>\n                </div>\n              </CardWrapper>\n            )}\n          </Formik>\n        </SignupContainer>\n      </Center>\n    </Header>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}