{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase2/index.js\",\n    _theme$breakpoints;\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { Container, Heading, Subheading, FormContainer, FormControl, StyledLabel, CheckBoxLabel, CheckboxContainer, CheckboxFormControl, Row, BackArrow, HyperLink, OuterContainer } from \"./Styles\";\nimport { CustomRadioGroup, CustomCheckbox } from \"../../common/FormInputs\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { navigate } from \"@reach/router\";\nimport _ from \"lodash\";\nimport { FieldArray, Formik } from \"formik\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryOutlinedCTAButton, PrimaryCTAButton, SecondaryCTAButton } from \"../../common/Buttons\";\nimport CaseService from \"../../../services/CaseService\";\nimport styled from \"styled-components\";\nimport { CreateCaseStep2Schema } from \"../../../helpers/validationSchema\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport theme from \"../../../assets/theme\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport useSettings from \"../../../hooks/useSettings\";\nimport AlertDialog from \"../../common/Alert\";\nimport COLORS from \"../../../assets/Colors\";\nconst inputs = [{\n  name: \"respondentName\",\n  type: \"text\",\n  label: \"Name of the Respondent\",\n  required: true\n}, {\n  name: \"respondentEmail\",\n  type: \"email\",\n  label: \"Email of the Respondent\",\n  required: true\n}, {\n  name: \"respondentMobile\",\n  type: \"text\",\n  label: \"Phone Number of the Respondent\"\n}, {\n  name: \"respondentAddress\",\n  type: \"text\",\n  label: \"Address of the Respondent\"\n}];\n\nconst Index = ({\n  caseId\n}) => {\n  const [caseObj, setCaseObj] = useState({});\n  const breadcrumbs = [\"My Cases\", \"Create New Case\"];\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    hideAlert,\n    showAlert\n  } = useAlert();\n  const {\n    setTriggerCount\n  } = useCartCount();\n  const {\n    setting\n  } = useSettings();\n  const [dialogData, setDialogData] = useState(false);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    async function getCase(caseId) {\n      try {\n        setLoader({\n          state: true\n        });\n        const response = await CaseService.getCase(caseId);\n\n        if (response) {\n          setCaseObj(response);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n\n    if (caseId) {\n      getCase(caseId);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [caseId]);\n\n  const onBreadcrumbClick = selected => {\n    switch (_.snakeCase(selected)) {\n      case \"my_cases\":\n        navigate(\"/dashboard/cases\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  async function validatePayment(payload) {\n    if (payload === null || payload === void 0 ? void 0 : payload.paymentCode) {\n      const paymentCodeValidate = await CaseService.validatePaymentCode(caseId, payload === null || payload === void 0 ? void 0 : payload.paymentCode);\n      return paymentCodeValidate['paymentCodeValidation'];\n    } else return false;\n  }\n\n  async function addToCart(payload) {\n    setLoader({\n      state: true,\n      message: \"Submitting form...\"\n    });\n\n    try {\n      const paymentCodeValidate = await validatePayment(payload);\n      console.log(paymentCodeValidate);\n\n      if (paymentCodeValidate) {\n        const response = await CaseService.submitCase(payload, caseId, caseObj.claimantParty.id);\n\n        if (response) {\n          enqueueSnackbar(response.message, {\n            variant: \"success\"\n          });\n          navigate('/dashboard/cases');\n        }\n      } else if (!paymentCodeValidate) {\n        var _await$CaseService$ge;\n\n        let negotiationSuccessFee;\n        const registrationFee = ((_await$CaseService$ge = await CaseService.getCase(caseId, \"?estimateFeeKind=registrationFee\")) === null || _await$CaseService$ge === void 0 ? void 0 : _await$CaseService$ge.fee) || {};\n\n        if ((caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) !== \"adhoc\") {\n          var _await$CaseService$ge2;\n\n          negotiationSuccessFee = ((_await$CaseService$ge2 = await CaseService.getCase(caseId, \"?estimateFeeKind=successFee\")) === null || _await$CaseService$ge2 === void 0 ? void 0 : _await$CaseService$ge2.fee) || {};\n        }\n\n        showAlert({\n          heading: \"Payment Information\",\n          desc: /*#__PURE__*/React.createElement(PaymentAlert, {\n            registrationFee,\n            negotiationSuccessFee,\n            caseObj,\n            payload,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 11\n            }\n          }),\n          primaryBtnText: \"Add to Cart\",\n          secondaryBtnText: \"Cancel\",\n          clickSecondarybtn: () => {\n            hideAlert();\n          },\n          clickPrimaryBtn: () => submitMediationCase(payload),\n          isOpen: true,\n          onDialogClose: () => {\n            hideAlert();\n          },\n          descriptionTextStyle: {\n            textAlign: \"left\"\n          }\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  async function submitMediationCase(payload) {\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting form...\"\n      });\n      const response = await CaseService.submitCase(payload, caseId, caseObj.claimantParty.id);\n\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n      hideAlert();\n    } finally {\n      setTriggerCount(true);\n      setLoader({\n        state: false\n      });\n      hideAlert();\n    }\n  }\n\n  async function saveAsDraftOrSubmit(values, isDraft) {\n    const postData = JSON.parse(JSON.stringify(values));\n\n    try {\n      var _caseObj$claimantPart, _response$case;\n\n      setLoader({\n        state: true,\n        message: \"Submitting form...\"\n      });\n      const response = await CaseService.updateDraft(postData, caseId, (_caseObj$claimantPart = caseObj.claimantParty) === null || _caseObj$claimantPart === void 0 ? void 0 : _caseObj$claimantPart.id);\n\n      if (response === null || response === void 0 ? void 0 : (_response$case = response.case) === null || _response$case === void 0 ? void 0 : _response$case.id) {\n        if (isDraft) {\n          var _response$case2;\n\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\"\n          });\n          navigate(`/dashboard/cases?caseType=${response === null || response === void 0 ? void 0 : (_response$case2 = response.case) === null || _response$case2 === void 0 ? void 0 : _response$case2.resolutionKind}`);\n        } else {\n          var _response$case3;\n\n          navigate(`/dashboard/cases/create/${response.case.id}/step-3?caseType=${response === null || response === void 0 ? void 0 : (_response$case3 = response.case) === null || _response$case3 === void 0 ? void 0 : _response$case3.resolutionKind}`);\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  function onFormSubmit(values, props, isDraft = false) {\n    try {\n      var _postData$respondentP, _postData$respondentP2, _postData$respondentP3, _postData$respondentP4;\n\n      const postData = JSON.parse(JSON.stringify(values));\n      postData.respondentParties = postData === null || postData === void 0 ? void 0 : (_postData$respondentP = postData.respondentParties) === null || _postData$respondentP === void 0 ? void 0 : _postData$respondentP.map(el => {\n        return {\n          respondentKind: el === null || el === void 0 ? void 0 : el.respondentKind,\n          name: el === null || el === void 0 ? void 0 : el.respondentName,\n          email: el === null || el === void 0 ? void 0 : el.respondentEmail.toString().toLowerCase(),\n          mobile: el === null || el === void 0 ? void 0 : el.respondentMobile,\n          address: el === null || el === void 0 ? void 0 : el.respondentAddress\n        };\n      });\n      const hasDuplication = (postData === null || postData === void 0 ? void 0 : (_postData$respondentP2 = postData.respondentParties) === null || _postData$respondentP2 === void 0 ? void 0 : _postData$respondentP2.length) && (postData === null || postData === void 0 ? void 0 : (_postData$respondentP3 = postData.respondentParties) === null || _postData$respondentP3 === void 0 ? void 0 : (_postData$respondentP4 = _postData$respondentP3.filter((mediator, index) => {\n        var _postData$respondentP5;\n\n        return (postData === null || postData === void 0 ? void 0 : (_postData$respondentP5 = postData.respondentParties) === null || _postData$respondentP5 === void 0 ? void 0 : _postData$respondentP5.findIndex(el => (el === null || el === void 0 ? void 0 : el.email) === (mediator === null || mediator === void 0 ? void 0 : mediator.email))) !== index;\n      })) === null || _postData$respondentP4 === void 0 ? void 0 : _postData$respondentP4.length);\n\n      if (hasDuplication) {\n        // eslint-disable-next-line no-throw-literal\n        throw \"Duplicate email IDs found in respondent parties\";\n      }\n\n      if ((caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"negotiation\" && !isDraft) {\n        addToCart(postData);\n      } else {\n        saveAsDraftOrSubmit(postData, isDraft);\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    }\n  }\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n\n\n  const deleteDraft = async id => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Deleting Cases...\"\n      });\n      const res = await CaseService.deleteDraftCase(id);\n\n      if (res === null || res === void 0 ? void 0 : res.message) {\n        enqueueSnackbar(res === null || res === void 0 ? void 0 : res.message, {\n          variant: \"success\"\n        });\n\n        if ((caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"negotiation\") {\n          navigate(`/dashboard/cases?caseType=${caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind}`);\n        } else {\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      setOpen(false);\n    }\n  };\n  /**\n   * @description Function to show the delete warning\n   * @param {*} id\n   */\n\n\n  const deleteWaring = id => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () => deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  function setInitialValues(caseObj) {\n    var _caseObj$respondentPa;\n\n    if ((caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentParties) && (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$respondentPa = caseObj.respondentParties[0]) === null || _caseObj$respondentPa === void 0 ? void 0 : _caseObj$respondentPa.respondentKind)) {\n      var _caseObj$respondentPa2;\n\n      return caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$respondentPa2 = caseObj.respondentParties) === null || _caseObj$respondentPa2 === void 0 ? void 0 : _caseObj$respondentPa2.map(el => {\n        return {\n          respondentKind: el.respondentKind,\n          respondentName: el === null || el === void 0 ? void 0 : el.name,\n          respondentEmail: el === null || el === void 0 ? void 0 : el.email,\n          respondentMobile: (el === null || el === void 0 ? void 0 : el.mobile) || \"\",\n          respondentAddress: (el === null || el === void 0 ? void 0 : el.address) || \"\"\n        };\n      });\n    } else {\n      return [{\n        respondentKind: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentKind) || \"individual\",\n        respondentName: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentName) || \"\",\n        respondentEmail: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentEmail) || \"\",\n        respondentMobile: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentMobile) || \"\",\n        respondentAddress: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentAddress) || \"\"\n      }];\n    }\n  }\n\n  const dummyParty = {\n    respondentKind: \"individual\",\n    respondentName: \"\",\n    respondentEmail: \"\",\n    respondentMobile: \"\",\n    respondentAddress: \"\"\n  };\n  return /*#__PURE__*/React.createElement(OuterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs,\n    onBreadcrumbClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"CreateCase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    onClick: () => navigate(`/dashboard/cases/create/${caseId}?caseType=${caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind}`),\n    src: require(\"../../../assets/images/backArrow.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 13\n    }\n  }), \"Create New Case (2/\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"negotiation\" ? 2 : 3, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delete\",\n    onClick: () => deleteWaring(caseId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../assets/images/delete.svg\"),\n    alt: \"delete Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Subheading, {\n    style: {\n      marginBottom: \"unset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, \"Enter Respondent Details\")), /*#__PURE__*/React.createElement(Formik, {\n    onSubmit: onFormSubmit,\n    initialValues: {\n      respondentParties: setInitialValues(caseObj),\n      agreement: false\n    },\n    enableReinitialize: true,\n    validationSchema: CreateCaseStep2Schema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"respondentParties\",\n    render: ({\n      push,\n      remove\n    }) => {\n      var _values$respondentPar;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, values === null || values === void 0 ? void 0 : (_values$respondentPar = values.respondentParties) === null || _values$respondentPar === void 0 ? void 0 : _values$respondentPar.map((party, index) => {\n        var _values$respondentPar2;\n\n        return /*#__PURE__*/React.createElement(Fragment, {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 23\n          }\n        }, (values === null || values === void 0 ? void 0 : (_values$respondentPar2 = values.respondentParties) === null || _values$respondentPar2 === void 0 ? void 0 : _values$respondentPar2.length) > 1 ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"header-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Subheading, {\n          style: {\n            marginBottom: 15,\n            display: \"flex\",\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }\n        }, \"Respondent \", index + 1), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"removeIcon\",\n          onClick: () => remove(index),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: require(\"../../../assets/images/removeIcon.svg\"),\n          alt: \"delete Icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 31\n          }\n        }))) : null, /*#__PURE__*/React.createElement(RespondentInputs, {\n          values: party,\n          errors: errors && (errors === null || errors === void 0 ? void 0 : errors.respondentParties) ? errors === null || errors === void 0 ? void 0 : errors.respondentParties[index] : {},\n          touched: touched && (touched === null || touched === void 0 ? void 0 : touched.respondentParties) ? touched === null || touched === void 0 ? void 0 : touched.respondentParties[index] : {},\n          index,\n          party,\n          handleBlur,\n          setFieldValue,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }\n        }));\n      }), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"negotiation\" ? /*#__PURE__*/React.createElement(SecondaryCTAButton, {\n        onClick: () => {\n          push({ ...dummyParty\n          });\n        },\n        style: {\n          marginTop: \"24px\",\n          margin: \"unset\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 23\n        }\n      }, \"+ Add Another Respondent\") : null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 15\n    }\n  }), caseObj.resolutionKind !== \"negotiation\" ? /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      marginTop: \"8px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      name: \"paymentCode\",\n      label: /*#__PURE__*/React.createElement(TextColor, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 30\n        }\n      }, \"Payment Code (If any)\"),\n      type: \"text\",\n      required: false\n    },\n    errors,\n    touched,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  })) : null, (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) !== \"adhoc\" ? /*#__PURE__*/React.createElement(CheckboxFormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CustomCheckbox, {\n    name: \"agreement\",\n    checked: values.agreement,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CheckBoxLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 21\n    }\n  }, \"I Agree to JustAct being my ADR provider and agree to JustAct\", \" \", /*#__PURE__*/React.createElement(HyperLink, {\n    onClick: () => {\n      window.open((setting === null || setting === void 0 ? void 0 : setting.rulesDocumentUrl) || \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/13/1620883614227-f4dbb5a2-4d9c-4a80-8645-b3500816dead/JustAct_Rules.pdf\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 23\n    }\n  }, \"rules\"), \" \", \"of Negotiation, Mediation, Arbitration, as applicable.\"))) : null, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryOutlinedCTAButton, {\n    type: \"button\",\n    onClick: () => onFormSubmit(values, null, true),\n    style: {\n      width: \"47%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 19\n    }\n  }, \"Save as Draft\"), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    disabled: !values.agreement && (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) !== \"adhoc\",\n    onClick: handleSubmit,\n    style: {\n      width: \"47%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 19\n    }\n  }, (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"negotiation\" ? \"Submit\" : \"Proceed\")))))), /*#__PURE__*/React.createElement(AlertDialog, Object.assign({\n    isOpen: open\n  }, dialogData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Index;\n\nconst RespondentInputs = ({\n  index,\n  values,\n  errors,\n  touched,\n  handleBlur,\n  setFieldValue\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    style: {\n      marginBottom: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 9\n    }\n  }, \"Respondent Is\"), /*#__PURE__*/React.createElement(CustomRadioGroup, {\n    radioInputs: [{\n      label: \"Individual\",\n      value: \"individual\"\n    }, {\n      label: \"Organization\",\n      value: \"organization\"\n    }],\n    name: `respondentKind`,\n    values: values,\n    handleChange: e => {\n      var _e$target;\n\n      return setFieldValue(`respondentParties[${index}].respondentKind`, e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 9\n    }\n  })), inputs.map((input, key) => /*#__PURE__*/React.createElement(FormControl, {\n    key: key,\n    className: input.type === \"number\" ? \"disabledArrows\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    errors: errors || {},\n    touched: touched || {},\n    input,\n    values,\n    handleBlur,\n    handleChange: e => {\n      var _e$target4;\n\n      if (input.name === \"respondentMobile\") {\n        var _e$target2, _e$target2$value;\n\n        if (e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : (_e$target2$value = _e$target2.value) === null || _e$target2$value === void 0 ? void 0 : _e$target2$value.match(/^[0-9]*$/)) {\n          var _e$target3;\n\n          setFieldValue(`respondentParties[${index}].${input === null || input === void 0 ? void 0 : input.name}`, e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value);\n        }\n      } else setFieldValue(`respondentParties[${index}].${input === null || input === void 0 ? void 0 : input.name}`, e === null || e === void 0 ? void 0 : (_e$target4 = e.target) === null || _e$target4 === void 0 ? void 0 : _e$target4.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst PaymentAlert = ({\n  registrationFee,\n  negotiationSuccessFee,\n  caseObj,\n  payload\n}) => {\n  var _payload$respondentPa;\n\n  return /*#__PURE__*/React.createElement(UnorderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 9\n    }\n  }, \"Respondent(s)\"), payload === null || payload === void 0 ? void 0 : (_payload$respondentPa = payload.respondentParties) === null || _payload$respondentPa === void 0 ? void 0 : _payload$respondentPa.map((el, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 632,\n      columnNumber: 17\n    }\n  }, el === null || el === void 0 ? void 0 : el.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 17\n    }\n  }, el === null || el === void 0 ? void 0 : el.email)))))), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) === \"adhoc\" ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 11\n    }\n  }, \"You will be charged a non-refundable license fee of INR\", \" \", parseFloat(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total).toFixed(2) || 0.0, \" for using JustAct. The license validity is \", registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.roomValidity, \" \", \"months.\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 11\n    }\n  }, (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"arbitration\" ? \"Arbitration\" : \"Registration\", \" \", \"Fee -\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      fontFamily: `${theme.fonts.primaryFontExtraBold}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, \"INR \", parseFloat(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total).toFixed(2) || 0.0)), /*#__PURE__*/React.createElement(TextAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 11\n    }\n  }, \"(The\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"arbitration\" ? \"Arbitration\" : \"Registration\", \" \", \"Fee will be added to the cart)\"), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"arbitration\" && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 13\n    }\n  }, \"Success Fee -\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      fontFamily: `${theme.fonts.primaryFontExtraBold}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 15\n    }\n  }, \"INR \", parseFloat(negotiationSuccessFee === null || negotiationSuccessFee === void 0 ? void 0 : negotiationSuccessFee.total).toFixed(2))), /*#__PURE__*/React.createElement(TextAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 11\n    }\n  }, (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"arbitration\" && /*#__PURE__*/React.createElement(React.Fragment, null, \"(If the case is\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"negotiation\" ? \"negotiated\" : (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\" ? \"mediated\" : \"arbitrated\", \" \", \"successfully you need to pay the Success Fee for getting the settlement agreement)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 17\n    }\n  })), \"(Claim amount, once submitted, may be changed only if feasible. Any difference in fee will need to be paid in such a case)\")), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) === \"adhoc\" ? /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 706,\n      columnNumber: 11\n    }\n  }, \"You will also need to pay the\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\" ? \"mediator\" : \"arbitrator\", \" \", \"as per the terms agreed between the parties and the\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\" ? \"mediator\" : \"arbitrator\", \". JustAct will not be responsible for any non-payment in this regard.\")) : \"\", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.subscriptionKind) === \"adhoc\" ? /*#__PURE__*/React.createElement(TextAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 9\n    }\n  }, \"(Claim amount, once submitted, may be changed only if feasible. Any difference in fee will need to be paid in such a case)\") : \"\");\n};\n\nconst TextAlign = styled.text`\n  text-align: left;\n`;\nconst TextColor = styled.text`\n  font-family: ${theme.fonts.primaryFontBold};\n  color: ${COLORS.COLOR_DARK};\n`;\nconst UnorderList = styled.ul`\n  padding: 0px 10px;\n  & .data-row {\n    display: flex;\n    & .data-field {\n      padding: 10px 0px;\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      & .label {\n        color: ${COLORS.INPUT_LABEL};\n        font-size: 8px;\n      }\n      & .value {\n        font-size: 10px;\n      }\n      &:nth-child(2) {\n        margin-left: 20px;\n      }\n    }\n    @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n      & .data-field {\n        & .label {\n          color: ${COLORS.INPUT_LABEL};\n          font-size: 10px;\n        }\n        & .value {\n          font-size: 14px;\n        }\n        &:nth-child(2) {\n          margin-left: 30px;\n        }\n      }\n    }\n  }\n  & li {\n    padding: 5px;\n  }\n\n  & .adhoc-pricing {\n    text-align: center;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase2/index.js"],"names":["React","Fragment","useState","useEffect","Container","Heading","Subheading","FormContainer","FormControl","StyledLabel","CheckBoxLabel","CheckboxContainer","CheckboxFormControl","Row","BackArrow","HyperLink","OuterContainer","CustomRadioGroup","CustomCheckbox","ActionBar","navigate","_","FieldArray","Formik","FormField","PrimaryOutlinedCTAButton","PrimaryCTAButton","SecondaryCTAButton","CaseService","styled","CreateCaseStep2Schema","useLoader","useSnackbar","getErrorMessage","useAlert","theme","useCartCount","useSettings","AlertDialog","COLORS","inputs","name","type","label","required","Index","caseId","caseObj","setCaseObj","breadcrumbs","setLoader","enqueueSnackbar","hideAlert","showAlert","setTriggerCount","setting","dialogData","setDialogData","open","setOpen","getCase","state","response","error","message","variant","onBreadcrumbClick","selected","snakeCase","validatePayment","payload","paymentCode","paymentCodeValidate","validatePaymentCode","addToCart","console","log","submitCase","claimantParty","id","negotiationSuccessFee","registrationFee","fee","subscriptionKind","heading","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","submitMediationCase","isOpen","onDialogClose","descriptionTextStyle","textAlign","saveAsDraftOrSubmit","values","isDraft","postData","JSON","parse","stringify","updateDraft","case","resolutionKind","onFormSubmit","props","respondentParties","map","el","respondentKind","respondentName","email","respondentEmail","toString","toLowerCase","mobile","respondentMobile","address","respondentAddress","hasDuplication","length","filter","mediator","index","findIndex","deleteDraft","res","deleteDraftCase","deleteWaring","setInitialValues","dummyParty","display","flex","require","marginBottom","agreement","handleChange","errors","handleSubmit","touched","handleBlur","setFieldValue","push","remove","party","marginTop","margin","window","rulesDocumentUrl","width","RespondentInputs","value","e","target","input","key","match","PaymentAlert","parseFloat","total","toFixed","roomValidity","fontFamily","fonts","primaryFontExtraBold","TextAlign","text","TextColor","primaryFontBold","COLOR_DARK","UnorderList","ul","primaryFontSemiBold","INPUT_LABEL","breakpoints","sm_up"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport {\n  Container,\n  Heading,\n  Subheading,\n  FormContainer,\n  FormControl,\n  StyledLabel,\n  CheckBoxLabel,\n  CheckboxContainer,\n  CheckboxFormControl,\n  Row,\n  BackArrow,\n  HyperLink,\n  OuterContainer,\n} from \"./Styles\";\nimport { CustomRadioGroup, CustomCheckbox } from \"../../common/FormInputs\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { navigate } from \"@reach/router\";\nimport _ from \"lodash\";\nimport { FieldArray, Formik } from \"formik\";\nimport FormField from \"../../common/FormField/FormField\";\nimport {\n  PrimaryOutlinedCTAButton,\n  PrimaryCTAButton,\n  SecondaryCTAButton,\n} from \"../../common/Buttons\";\nimport CaseService from \"../../../services/CaseService\";\nimport styled from \"styled-components\";\nimport { CreateCaseStep2Schema } from \"../../../helpers/validationSchema\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport theme from \"../../../assets/theme\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport useSettings from \"../../../hooks/useSettings\";\nimport AlertDialog from \"../../common/Alert\";\nimport COLORS from \"../../../assets/Colors\";\n\nconst inputs = [\n  {\n    name: \"respondentName\",\n    type: \"text\",\n    label: \"Name of the Respondent\",\n    required: true,\n  },\n  {\n    name: \"respondentEmail\",\n    type: \"email\",\n    label: \"Email of the Respondent\",\n    required: true,\n  },\n  {\n    name: \"respondentMobile\",\n    type: \"text\",\n    label: \"Phone Number of the Respondent\",\n  },\n  {\n    name: \"respondentAddress\",\n    type: \"text\",\n    label: \"Address of the Respondent\",\n  },\n];\n\nconst Index = ({ caseId }) => {\n  const [caseObj, setCaseObj] = useState({});\n  const breadcrumbs = [\"My Cases\", \"Create New Case\"];\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const { hideAlert, showAlert } = useAlert();\n  const { setTriggerCount } = useCartCount();\n  const { setting } = useSettings();\n  const [dialogData, setDialogData] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => {\n    async function getCase(caseId) {\n      try {\n        setLoader({ state: true });\n        const response = await CaseService.getCase(caseId);\n        if (response) {\n          setCaseObj(response);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n    if (caseId) {\n      getCase(caseId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [caseId]);\n\n  const onBreadcrumbClick = (selected) => {\n    switch (_.snakeCase(selected)) {\n      case \"my_cases\":\n        navigate(\"/dashboard/cases\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  async function validatePayment(payload){\n    if(payload?.paymentCode){\n      const paymentCodeValidate = await CaseService.validatePaymentCode(\n        caseId,\n        payload?.paymentCode\n      );\n      return paymentCodeValidate['paymentCodeValidation']\n      }\n      else return false\n  }\n\n  async function addToCart(payload) {\n    setLoader({ state: true, message: \"Submitting form...\" });\n    try{\n      const paymentCodeValidate=await validatePayment(payload)    \n      console.log(paymentCodeValidate)\n      if(paymentCodeValidate){\n        const response = await CaseService.submitCase(\n          payload,\n          caseId,\n          caseObj.claimantParty.id\n        );\n        if (response) {\n          enqueueSnackbar(response.message, {\n            variant: \"success\",\n          });\n          navigate('/dashboard/cases')\n        }        \n      }\n      else if(!paymentCodeValidate) { \n      let negotiationSuccessFee;\n      const registrationFee =\n        (await CaseService.getCase(caseId, \"?estimateFeeKind=registrationFee\"))\n          ?.fee || {};\n      if (caseObj?.subscriptionKind !== \"adhoc\") {\n        negotiationSuccessFee =\n          (await CaseService.getCase(caseId, \"?estimateFeeKind=successFee\"))\n            ?.fee || {};\n      }\n      showAlert({\n        heading: \"Payment Information\",\n        desc: (\n          <PaymentAlert\n            {...{ registrationFee, negotiationSuccessFee, caseObj, payload }}\n          />\n        ),\n\n        primaryBtnText: \"Add to Cart\",\n        secondaryBtnText: \"Cancel\",\n        clickSecondarybtn: () => {\n          hideAlert();\n        },\n        clickPrimaryBtn: () => submitMediationCase(payload),\n        isOpen: true,\n        onDialogClose: () => {\n          hideAlert();\n        },\n        descriptionTextStyle: {\n          textAlign: \"left\",\n        },\n      });}\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  async function submitMediationCase(payload) {\n    try {\n      setLoader({ state: true, message: \"Submitting form...\" });\n      const response = await CaseService.submitCase(\n        payload,\n        caseId,\n        caseObj.claimantParty.id\n      );\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\",\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n      hideAlert();\n    } finally {\n      setTriggerCount(true);\n      setLoader({ state: false });\n      hideAlert();\n    }\n  }\n\n  async function saveAsDraftOrSubmit(values, isDraft) {\n    const postData = JSON.parse(JSON.stringify(values));\n    try {\n      setLoader({ state: true, message: \"Submitting form...\" });\n      const response = await CaseService.updateDraft(\n        postData,\n        caseId,\n        caseObj.claimantParty?.id\n      );\n      if (response?.case?.id) {\n        if (isDraft) {\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\",\n          });\n          navigate(\n            `/dashboard/cases?caseType=${response?.case?.resolutionKind}`\n          );\n        } else {\n          navigate(\n            `/dashboard/cases/create/${response.case.id}/step-3?caseType=${response?.case?.resolutionKind}`\n          );\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  function onFormSubmit(values, props, isDraft = false) {\n    try {\n      const postData = JSON.parse(JSON.stringify(values));\n      postData.respondentParties = postData?.respondentParties?.map((el) => {\n        return {\n          respondentKind: el?.respondentKind,\n          name: el?.respondentName,\n          email: el?.respondentEmail.toString().toLowerCase(),\n          mobile: el?.respondentMobile,\n          address: el?.respondentAddress,\n        };\n      });\n      const hasDuplication =\n        postData?.respondentParties?.length &&\n        postData?.respondentParties?.filter(\n          (mediator, index) =>\n            postData?.respondentParties?.findIndex(\n              (el) => el?.email === mediator?.email\n            ) !== index\n        )?.length;\n      if (hasDuplication) {\n        // eslint-disable-next-line no-throw-literal\n        throw \"Duplicate email IDs found in respondent parties\";\n      }\n      if (caseObj?.resolutionKind !== \"negotiation\" && !isDraft) {\n        addToCart(postData);\n      } else {\n        saveAsDraftOrSubmit(postData, isDraft);\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    }\n  }\n\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n  const deleteDraft = async (id) => {\n    try {\n      setLoader({ state: true, message: \"Deleting Cases...\" });\n      const res = await CaseService.deleteDraftCase(id);\n      if (res?.message) {\n        enqueueSnackbar(res?.message, {\n          variant: \"success\",\n        });\n        if (caseObj?.resolutionKind !== \"negotiation\") {\n          navigate(`/dashboard/cases?caseType=${caseObj?.resolutionKind}`);\n        } else {\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n      setOpen(false);\n    }\n  };\n\n  /**\n   * @description Function to show the delete warning\n   * @param {*} id\n   */\n  const deleteWaring = (id) => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () => deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\",\n      },\n    });\n  };\n\n  function setInitialValues(caseObj) {\n    if (\n      caseObj?.respondentParties &&\n      caseObj?.respondentParties[0]?.respondentKind\n    ) {\n      return caseObj?.respondentParties?.map((el) => {\n        return {\n          respondentKind: el.respondentKind,\n          respondentName: el?.name,\n          respondentEmail: el?.email,\n          respondentMobile: el?.mobile || \"\",\n          respondentAddress: el?.address || \"\",\n        };\n      });\n    } else {\n      return [\n        {\n          respondentKind: caseObj?.respondentKind || \"individual\",\n          respondentName: caseObj?.respondentName || \"\",\n          respondentEmail: caseObj?.respondentEmail || \"\",\n          respondentMobile: caseObj?.respondentMobile || \"\",\n          respondentAddress: caseObj?.respondentAddress || \"\",\n        },\n      ];\n    }\n  }\n\n  const dummyParty = {\n    respondentKind: \"individual\",\n    respondentName: \"\",\n    respondentEmail: \"\",\n    respondentMobile: \"\",\n    respondentAddress: \"\",\n  };\n\n  return (\n    <OuterContainer>\n      <ActionBar {...{ breadcrumbs, onBreadcrumbClick }} />\n      <Container className=\"CreateCase\">\n        <Heading>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <BackArrow\n              onClick={() =>\n                navigate(\n                  `/dashboard/cases/create/${caseId}?caseType=${caseObj?.resolutionKind}`\n                )\n              }\n              src={require(\"../../../assets/images/backArrow.svg\")}\n            />\n            Create New Case (2/{\" \"}\n            {caseObj?.resolutionKind !== \"negotiation\" ? 2 : 3})\n          </div>\n          <div className=\"delete\" onClick={() => deleteWaring(caseId)}>\n            <img\n              src={require(\"../../../assets/images/delete.svg\")}\n              alt=\"delete Icon\"\n            />\n          </div>\n        </Heading>\n        <div>\n          <Subheading style={{ marginBottom: \"unset\" }}>\n            Enter Respondent Details\n          </Subheading>\n        </div>\n        <Formik\n          onSubmit={onFormSubmit}\n          initialValues={{\n            respondentParties: setInitialValues(caseObj),\n            agreement: false,\n          }}\n          enableReinitialize\n          validationSchema={CreateCaseStep2Schema}\n          validateOnBlur\n          validateOnChange\n        >\n          {({\n            values,\n            handleChange,\n            errors,\n            handleSubmit,\n            touched,\n            handleBlur,\n            setFieldValue,\n          }) => (\n            <FormContainer onSubmit={handleSubmit}>\n              <FieldArray\n                name=\"respondentParties\"\n                render={({ push, remove }) => (\n                  <>\n                    {values?.respondentParties?.map((party, index) => (\n                      <Fragment key={index}>\n                        {values?.respondentParties?.length > 1 ? (\n                          <div className=\"header-container\">\n                            <Subheading\n                              style={{\n                                marginBottom: 15,\n                                display: \"flex\",\n                                flex: 1,\n                              }}\n                            >\n                              Respondent {index + 1}\n                            </Subheading>\n                            <div\n                              className=\"removeIcon\"\n                              onClick={() => remove(index)}\n                            >\n                              <img\n                                src={require(\"../../../assets/images/removeIcon.svg\")}\n                                alt=\"delete Icon\"\n                              />\n                            </div>\n                          </div>\n                        ) : null}\n                        <RespondentInputs\n                          values={party}\n                          errors={\n                            errors && errors?.respondentParties\n                              ? errors?.respondentParties[index]\n                              : {}\n                          }\n                          touched={\n                            touched && touched?.respondentParties\n                              ? touched?.respondentParties[index]\n                              : {}\n                          }\n                          {...{\n                            index,\n                            party,\n                            handleBlur,\n                            setFieldValue,\n                          }}\n                        />\n                      </Fragment>\n                    ))}\n                    {caseObj?.resolutionKind !== \"negotiation\" ? (\n                      <SecondaryCTAButton\n                        onClick={() => {\n                          push({ ...dummyParty });\n                        }}\n                        style={{\n                          marginTop: \"24px\",\n                          margin: \"unset\",\n                        }}\n                      >\n                        + Add Another Respondent\n                      </SecondaryCTAButton>\n                    ) : null}\n                  </>\n                )}\n              />\n              {caseObj.resolutionKind !== \"negotiation\" ? (\n                <FormControl style={{ marginTop: \"8px\" }}>\n                  <FormField\n                    white\n                    input={{\n                      name: \"paymentCode\",\n                      label: <TextColor>Payment Code (If any)</TextColor>,\n                      type: \"text\",\n                      required: false,\n                    }}\n                    {...{\n                      errors,\n                      touched,\n                      values,\n                      handleChange,\n                      handleBlur,\n                    }}\n                  />\n                </FormControl>\n              ) : null}\n              {caseObj?.subscriptionKind !== \"adhoc\" ? (\n                <CheckboxFormControl>\n                  <CheckboxContainer>\n                    <CustomCheckbox\n                      name=\"agreement\"\n                      checked={values.agreement}\n                      onChange={handleChange}\n                    />\n                    <CheckBoxLabel>\n                      I Agree to JustAct being my ADR provider and agree to\n                      JustAct{\" \"}\n                      <HyperLink\n                        onClick={() => {\n                          window.open(\n                            setting?.rulesDocumentUrl ||\n                              \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/13/1620883614227-f4dbb5a2-4d9c-4a80-8645-b3500816dead/JustAct_Rules.pdf\"\n                          );\n                        }}\n                      >\n                        rules\n                      </HyperLink>{\" \"}\n                      of Negotiation, Mediation, Arbitration, as applicable.\n                    </CheckBoxLabel>\n                  </CheckboxContainer>\n                </CheckboxFormControl>\n              ) : null}\n              <FormControl>\n                <Row>\n                  <PrimaryOutlinedCTAButton\n                    type=\"button\"\n                    onClick={() => onFormSubmit(values, null, true)}\n                    style={{ width: \"47%\" }}\n                  >\n                    Save as Draft\n                  </PrimaryOutlinedCTAButton>\n                  <PrimaryCTAButton\n                    disabled={\n                      !values.agreement && caseObj?.subscriptionKind !== \"adhoc\"\n                    }\n                    onClick={handleSubmit}\n                    style={{ width: \"47%\" }}\n                  >\n                    {caseObj?.resolutionKind !== \"negotiation\"\n                      ? \"Submit\"\n                      : \"Proceed\"}\n                  </PrimaryCTAButton>\n                </Row>\n              </FormControl>\n            </FormContainer>\n          )}\n        </Formik>\n      </Container>\n      <AlertDialog isOpen={open} {...{ ...dialogData }} />\n    </OuterContainer>\n  );\n};\n\nexport default Index;\n\nconst RespondentInputs = ({\n  index,\n  values,\n  errors,\n  touched,\n  handleBlur,\n  setFieldValue,\n}) => {\n  return (\n    <div key={index}>\n      <FormControl style={{ marginBottom: 32 }}>\n        <StyledLabel>Respondent Is</StyledLabel>\n        <CustomRadioGroup\n          radioInputs={[\n            { label: \"Individual\", value: \"individual\" },\n            { label: \"Organization\", value: \"organization\" },\n          ]}\n          name={`respondentKind`}\n          values={values}\n          handleChange={(e) =>\n            setFieldValue(\n              `respondentParties[${index}].respondentKind`,\n              e?.target?.value\n            )\n          }\n        />\n      </FormControl>\n      {inputs.map((input, key) => (\n        <FormControl\n          key={key}\n          className={input.type === \"number\" ? \"disabledArrows\" : null}\n        >\n          <FormField\n            white\n            errors={errors || {}}\n            touched={touched || {}}\n            {...{\n              input,\n              values,\n              handleBlur,\n            }}\n            handleChange={(e) => {\n              if (input.name === \"respondentMobile\") {\n                if (e?.target?.value?.match(/^[0-9]*$/)) {\n                  setFieldValue(\n                    `respondentParties[${index}].${input?.name}`,\n                    e?.target?.value\n                  );\n                }\n              } else\n                setFieldValue(\n                  `respondentParties[${index}].${input?.name}`,\n                  e?.target?.value\n                );\n            }}\n          />\n        </FormControl>\n      ))}\n    </div>\n  );\n};\n\nconst PaymentAlert = ({\n  registrationFee,\n  negotiationSuccessFee,\n  caseObj,\n  payload,\n}) => {\n  return (\n    <UnorderList>\n      <li>\n        <div>Respondent(s)</div>\n        {payload?.respondentParties?.map((el, index) => (\n          <div key={index}>\n            <div className=\"data-row\">\n              <div className=\"data-field\">\n                <div className=\"label\">Name</div>\n                <div className=\"value\">{el?.name}</div>\n              </div>\n              <div className=\"data-field\">\n                <div className=\"label\">Email</div>\n                <div className=\"value\">{el?.email}</div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </li>\n      {caseObj?.subscriptionKind === \"adhoc\" ? (\n        <li>\n          <b>\n            You will be charged a non-refundable license fee of INR{\" \"}\n            {parseFloat(registrationFee?.total).toFixed(2) || 0.0} for using\n            JustAct. The license validity is {registrationFee?.roomValidity}{\" \"}\n            months.\n          </b>\n        </li>\n      ) : (\n        <>\n          <li>\n            {caseObj?.resolutionKind === \"arbitration\"\n              ? \"Arbitration\"\n              : \"Registration\"}{\" \"}\n            Fee -{\" \"}\n            <b\n              style={{\n                fontFamily: `${theme.fonts.primaryFontExtraBold}`,\n              }}\n            >\n              INR {parseFloat(registrationFee?.total).toFixed(2) || 0.0}\n            </b>\n          </li>\n          <TextAlign>\n            (The{\" \"}\n            {caseObj?.resolutionKind === \"arbitration\"\n              ? \"Arbitration\"\n              : \"Registration\"}{\" \"}\n            Fee will be added to the cart)\n          </TextAlign>\n          {caseObj?.resolutionKind !== \"arbitration\" && (\n            <li>\n              Success Fee -{\" \"}\n              <b\n                style={{\n                  fontFamily: `${theme.fonts.primaryFontExtraBold}`,\n                }}\n              >\n                INR {parseFloat(negotiationSuccessFee?.total).toFixed(2)}\n              </b>\n            </li>\n          )}\n          <TextAlign>\n            {caseObj?.resolutionKind !== \"arbitration\" && (\n              <>\n                (If the case is{\" \"}\n                {caseObj?.resolutionKind === \"negotiation\"\n                  ? \"negotiated\"\n                  : caseObj?.resolutionKind === \"mediation\"\n                  ? \"mediated\"\n                  : \"arbitrated\"}{\" \"}\n                successfully you need to pay the Success Fee for getting the\n                settlement agreement)\n                <br />\n              </>\n            )}\n            (Claim amount, once submitted, may be changed only if feasible. Any\n            difference in fee will need to be paid in such a case)\n          </TextAlign>\n        </>\n      )}\n      {caseObj?.subscriptionKind === \"adhoc\" ? (\n        <li>\n          <b>\n            You will also need to pay the{\" \"}\n            {caseObj?.resolutionKind === \"mediation\"\n              ? \"mediator\"\n              : \"arbitrator\"}{\" \"}\n            as per the terms agreed between the parties and the{\" \"}\n            {caseObj?.resolutionKind === \"mediation\"\n              ? \"mediator\"\n              : \"arbitrator\"}\n            . JustAct will not be responsible for any non-payment in this\n            regard.\n          </b>\n        </li>\n      ) : (\n        \"\"\n      )}\n      {caseObj?.subscriptionKind === \"adhoc\" ? (\n        <TextAlign>\n          (Claim amount, once submitted, may be changed only if feasible. Any\n          difference in fee will need to be paid in such a case)\n        </TextAlign>\n      ) : (\n        \"\"\n      )}\n    </UnorderList>\n  );\n};\n\nconst TextAlign = styled.text`\n  text-align: left;\n`;\n\nconst TextColor = styled.text`\n  font-family: ${theme.fonts.primaryFontBold};\n  color: ${COLORS.COLOR_DARK};\n`;\n\nconst UnorderList = styled.ul`\n  padding: 0px 10px;\n  & .data-row {\n    display: flex;\n    & .data-field {\n      padding: 10px 0px;\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      & .label {\n        color: ${COLORS.INPUT_LABEL};\n        font-size: 8px;\n      }\n      & .value {\n        font-size: 10px;\n      }\n      &:nth-child(2) {\n        margin-left: 20px;\n      }\n    }\n    @media ${theme?.breakpoints?.sm_up} {\n      & .data-field {\n        & .label {\n          color: ${COLORS.INPUT_LABEL};\n          font-size: 10px;\n        }\n        & .value {\n          font-size: 14px;\n        }\n        &:nth-child(2) {\n          margin-left: 30px;\n        }\n      }\n    }\n  }\n  & li {\n    padding: 5px;\n  }\n\n  & .adhoc-pricing {\n    text-align: center;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}