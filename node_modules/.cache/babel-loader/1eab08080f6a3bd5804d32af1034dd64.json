{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Notification/index.js\";\nimport { CircularProgress, Menu, MenuItem, withStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport theme from \"../../../assets/theme\";\nimport CaseService from \"../../../services/CaseService\";\nimport DashboardSerivces from \"../../../services/DashboardSerivces\";\nimport { Count, Row } from \"../Header/Styles\";\nimport Items from \"./items\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport { NOTIFICATION_ACTIVITY, NOTIFICATION_INTERVAL, PAYMENT_PENDING } from \"../../../helpers/constants\";\nimport labels from \"../../../helpers/labels.json\";\nimport useNotification from \"../../../hooks/useNotification\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { IconHolder } from \"./styles\";\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n    width: 400,\n    padding: \"10px 0px\"\n  }\n})(props => /*#__PURE__*/React.createElement(Menu, Object.assign({\n  elevation: 0,\n  getContentAnchorEl: null,\n  anchorOrigin: {\n    vertical: \"bottom\",\n    horizontal: \"center\"\n  },\n  transformOrigin: {\n    vertical: \"top\",\n    horizontal: \"center\"\n  }\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n})));\nconst StyledMenuItem = withStyles(() => ({\n  root: {\n    fontFamily: theme.fonts.primaryFontSemiBold,\n    padding: \"10px 20px\"\n  }\n}))(MenuItem);\n\nconst Notification = ({\n  count,\n  setCount\n}) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // This state is used for indicating the current page\n\n  const [loading, setLoading] = useState(true); // This State for showing the loader for pending action\n\n  const [activities, setActivities] = useState([]); //This state for Pending Action\n\n  const [endPage, setEndPage] = useState();\n  const location = useLocation();\n  const [triggerCount, setTriggerCount] = useState(true);\n  const {\n    setTriggerNotify\n  } = useNotification(); // hooks to refresh the page\n\n  const handleClick = event => {\n    setActivities([]);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setCurrentPage(0);\n    setEndPage(0);\n    setActivities([]);\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const getPendingAction = () => {\n      let params = {\n        page: currentPage + 1,\n        perPage: 25\n      };\n      let stringParams = \"\";\n\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n\n      DashboardSerivces.getPendingAction(stringParams).then(res => {\n        if (res === null || res === void 0 ? void 0 : res.activities) {\n          setActivities([...activities, ...res.activities.data]);\n          setEndPage(res.activities.lastPage);\n        }\n\n        setLoading(false);\n      }, err => {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    if (anchorEl) {\n      setLoading(true);\n      getPendingAction();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [currentPage, anchorEl]);\n  /**\n   * This use Effect for triggering the interval\n   */\n\n  useEffect(() => {\n    const countInterval = setInterval(() => {\n      setTriggerCount(true);\n    }, NOTIFICATION_INTERVAL);\n    return () => {\n      clearInterval(countInterval);\n    };\n  }, []);\n  useEffect(() => {\n    async function getCount() {\n      try {\n        const res = await CaseService.getNotificationCount();\n\n        if (res) {\n          setCount(res === null || res === void 0 ? void 0 : res.notificationCount);\n        }\n      } catch (error) {\n        console.log(\"failed\");\n      }\n    }\n\n    if (triggerCount) {\n      getCount();\n      setTriggerCount(false);\n    }\n  }, [setCount, triggerCount]);\n  useEffect(() => {\n    async function clearNotification() {\n      try {\n        const res = await CaseService.clearNotification();\n\n        if (res === null || res === void 0 ? void 0 : res.success) {\n          setCount(0);\n        }\n      } catch (error) {}\n    }\n\n    if (anchorEl && count) {\n      clearNotification();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [anchorEl]);\n\n  function loadMoreItems(event) {\n    if (event.target.scrollTop + event.target.clientHeight >= event.target.scrollHeight) {\n      if (endPage && currentPage < endPage - 1) {\n        //user is at the end of the list so load more items\n        setCurrentPage(currentPage + 1);\n      }\n    }\n  }\n\n  const navigateToAction = ({\n    kind,\n    entityId,\n    meta\n  }) => {\n    setAnchorEl(null);\n\n    if (kind && PAYMENT_PENDING.includes(kind)) {\n      navigate(\"/dashboard/cart\");\n    } else {\n      navigate(`/dashboard/cases/${entityId}?caseType=${(meta === null || meta === void 0 ? void 0 : meta.resolutionKind) ? meta === null || meta === void 0 ? void 0 : meta.resolutionKind : \"negotiation\"}`);\n\n      if (location.pathname.includes(\"dashboard/cases\")) {\n        setTimeout(() => {\n          setTriggerNotify(true);\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  })), count ? /*#__PURE__*/React.createElement(Count, {\n    style: {\n      color: \"#ff3c3c\",\n      backgroundColor: \"rgba(255, 60, 60, 0.2)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, count) : null), /*#__PURE__*/React.createElement(StyledMenu, {\n    onScroll: loadMoreItems,\n    id: \"customized-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, (activities === null || activities === void 0 ? void 0 : activities.length) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, activities.map((el, index) => {\n    var _NOTIFICATION_ACTIVIT;\n\n    return /*#__PURE__*/React.createElement(StyledMenuItem, {\n      key: index,\n      onClick: () => navigateToAction(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Items, {\n      type: (_NOTIFICATION_ACTIVIT = NOTIFICATION_ACTIVITY[el === null || el === void 0 ? void 0 : el.kind]) === null || _NOTIFICATION_ACTIVIT === void 0 ? void 0 : _NOTIFICATION_ACTIVIT.type,\n      message: `${el.message} ${PAYMENT_PENDING.includes(el.kind) ? labels.pay_here : labels.view_here}`,\n      time: el === null || el === void 0 ? void 0 : el.created_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, loading ? /*#__PURE__*/React.createElement(StyledMenuItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }))) : null))));\n};\n\nexport default Notification;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Notification/index.js"],"names":["CircularProgress","Menu","MenuItem","withStyles","React","useEffect","useState","theme","CaseService","DashboardSerivces","Count","Row","Items","_","queryString","navigate","useLocation","NOTIFICATION_ACTIVITY","NOTIFICATION_INTERVAL","PAYMENT_PENDING","labels","useNotification","NotificationsIcon","IconHolder","StyledMenu","paper","border","width","padding","props","vertical","horizontal","StyledMenuItem","root","fontFamily","fonts","primaryFontSemiBold","Notification","count","setCount","anchorEl","setAnchorEl","currentPage","setCurrentPage","loading","setLoading","activities","setActivities","endPage","setEndPage","location","triggerCount","setTriggerCount","setTriggerNotify","handleClick","event","currentTarget","handleClose","getPendingAction","params","page","perPage","stringParams","isEmpty","stringify","then","res","data","lastPage","err","console","log","countInterval","setInterval","clearInterval","getCount","getNotificationCount","notificationCount","error","clearNotification","success","loadMoreItems","target","scrollTop","clientHeight","scrollHeight","navigateToAction","kind","entityId","meta","includes","resolutionKind","pathname","setTimeout","cursor","color","backgroundColor","Boolean","length","map","el","index","type","message","pay_here","view_here","created_at","display","justifyContent","flex"],"mappings":"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","sourcesContent":["import {\n  CircularProgress,\n  Menu,\n  MenuItem,\n  withStyles,\n} from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport theme from \"../../../assets/theme\";\nimport CaseService from \"../../../services/CaseService\";\nimport DashboardSerivces from \"../../../services/DashboardSerivces\";\nimport { Count, Row } from \"../Header/Styles\";\nimport Items from \"./items\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport {\n  NOTIFICATION_ACTIVITY,\n  NOTIFICATION_INTERVAL,\n  PAYMENT_PENDING,\n} from \"../../../helpers/constants\";\nimport labels from \"../../../helpers/labels.json\";\nimport useNotification from \"../../../hooks/useNotification\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { IconHolder } from \"./styles\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #d3d4d5\",\n    width: 400,\n    padding: \"10px 0px\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles(() => ({\n  root: {\n    fontFamily: theme.fonts.primaryFontSemiBold,\n    padding: \"10px 20px\",\n  },\n}))(MenuItem);\n\nconst Notification = ({ count, setCount }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [currentPage, setCurrentPage] = useState(0); // This state is used for indicating the current page\n  const [loading, setLoading] = useState(true); // This State for showing the loader for pending action\n  const [activities, setActivities] = useState([]); //This state for Pending Action\n  const [endPage, setEndPage] = useState();\n  const location = useLocation();\n  const [triggerCount, setTriggerCount] = useState(true);\n  const { setTriggerNotify } = useNotification(); // hooks to refresh the page\n\n  const handleClick = (event) => {\n    setActivities([]);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setCurrentPage(0);\n    setEndPage(0);\n    setActivities([]);\n    setAnchorEl(null);\n  };\n\n  useEffect(() => {\n    const getPendingAction = () => {\n      let params = {\n        page: currentPage + 1,\n        perPage: 25,\n      };\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      DashboardSerivces.getPendingAction(stringParams).then(\n        (res) => {\n          if (res?.activities) {\n            setActivities([...activities, ...res.activities.data]);\n            setEndPage(res.activities.lastPage);\n          }\n          setLoading(false);\n        },\n        (err) => {\n          console.log(err);\n          setLoading(false);\n        }\n      );\n    };\n    if (anchorEl) {\n      setLoading(true);\n      getPendingAction();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage, anchorEl]);\n\n  /**\n   * This use Effect for triggering the interval\n   */\n  useEffect(() => {\n    const countInterval = setInterval(() => {\n      setTriggerCount(true);\n    }, NOTIFICATION_INTERVAL);\n    return () => {\n      clearInterval(countInterval);\n    };\n  }, []);\n\n  useEffect(() => {\n    async function getCount() {\n      try {\n        const res = await CaseService.getNotificationCount();\n        if (res) {\n          setCount(res?.notificationCount);\n        }\n      } catch (error) {\n        console.log(\"failed\");\n      }\n    }\n\n    if (triggerCount) {\n      getCount();\n      setTriggerCount(false);\n    }\n  }, [setCount, triggerCount]);\n\n  useEffect(() => {\n    async function clearNotification() {\n      try {\n        const res = await CaseService.clearNotification();\n        if (res?.success) {\n          setCount(0);\n        }\n      } catch (error) {}\n    }\n    if (anchorEl && count) {\n      clearNotification();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [anchorEl]);\n\n  function loadMoreItems(event) {\n    if (\n      event.target.scrollTop + event.target.clientHeight >=\n      event.target.scrollHeight\n    ) {\n      if (endPage && currentPage < endPage - 1) {\n        //user is at the end of the list so load more items\n        setCurrentPage(currentPage + 1);\n      }\n    }\n  }\n\n  const navigateToAction = ({ kind, entityId, meta }) => {\n    setAnchorEl(null);\n    if (kind && PAYMENT_PENDING.includes(kind)) {\n      navigate(\"/dashboard/cart\");\n    } else {\n      navigate(\n        `/dashboard/cases/${entityId}?caseType=${\n          meta?.resolutionKind ? meta?.resolutionKind : \"negotiation\"\n        }`\n      );\n      if (location.pathname.includes(\"dashboard/cases\")) {\n        setTimeout(() => {\n          setTriggerNotify(true);\n        });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <Row onClick={handleClick}>\n        <IconHolder>\n          <NotificationsIcon style={{ cursor: \"pointer\" }} className=\"icon\" />\n        </IconHolder>\n        {count ? (\n          <Count\n            style={{\n              color: \"#ff3c3c\",\n              backgroundColor: \"rgba(255, 60, 60, 0.2)\",\n            }}\n          >\n            {count}\n          </Count>\n        ) : null}\n      </Row>\n      <StyledMenu\n        onScroll={loadMoreItems}\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <div>\n          {activities?.length ? (\n            <div>\n              {activities.map((el, index) => (\n                <StyledMenuItem\n                  key={index}\n                  onClick={() => navigateToAction(el)}\n                >\n                  <Items\n                    type={NOTIFICATION_ACTIVITY[el?.kind]?.type}\n                    message={`${el.message} ${\n                      PAYMENT_PENDING.includes(el.kind)\n                        ? labels.pay_here\n                        : labels.view_here\n                    }`}\n                    time={el?.created_at}\n                  />\n                </StyledMenuItem>\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n          <div>\n            {loading ? (\n              <StyledMenuItem>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    flex: 1,\n                  }}\n                >\n                  <CircularProgress size={20} />\n                </div>\n              </StyledMenuItem>\n            ) : null}\n          </div>\n        </div>\n      </StyledMenu>\n    </div>\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}