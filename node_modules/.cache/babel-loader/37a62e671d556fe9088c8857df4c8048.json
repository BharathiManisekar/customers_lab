{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase/components/TotalClaimValue.js\";\nimport { FormLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport { StyledFormElementsWrapper } from \"../Styles\";\n\nfunction TotalClaimValue({\n  ressolutionKind,\n  values,\n  handleChange,\n  errors,\n  onBlur\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, (ressolutionKind === \"mediation\" || ressolutionKind === \"arbitration\") && /*#__PURE__*/React.createElement(StyledFormElementsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    error: errors === null || errors === void 0 ? void 0 : errors.totalClaimValue,\n    style: {\n      fontFamily: theme.fonts.primaryFontSemiBold,\n      fontSize: 12,\n      color: COLORS.INPUT_LABEL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, \"Total Claim Value\", \" (\", \"INR\", \")\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }\n  }, \" *\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"waring-msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \" \", \"(Leave claim value as zero if your claim is non-monetary)\")), /*#__PURE__*/React.createElement(NumberFormat, {\n    thousandSeparator: true,\n    thousandsGroupStyle: \"lakh\",\n    isNumericString: true,\n    decimalScale: 2,\n    fixedDecimalScale: true,\n    allowNegative: false,\n    className: \"input-white\",\n    displayType: \"input\",\n    value: values,\n    type: \"text\",\n    customInput: CustomInputField,\n    name: `totalClaimValue`,\n    onChange: handleChange,\n    variant: \"outlined\",\n    helperText: errors === null || errors === void 0 ? void 0 : errors.totalClaimValue,\n    error: errors === null || errors === void 0 ? void 0 : errors.totalClaimValue,\n    onBlur: onBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default TotalClaimValue;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase/components/TotalClaimValue.js"],"names":["FormLabel","React","NumberFormat","COLORS","theme","CustomInputField","StyledFormElementsWrapper","TotalClaimValue","ressolutionKind","values","handleChange","errors","onBlur","totalClaimValue","fontFamily","fonts","primaryFontSemiBold","fontSize","color","INPUT_LABEL"],"mappings":";AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,SAASC,yBAAT,QAA0C,WAA1C;;AAEA,SAASC,eAAT,CAAyB;AACvBC,EAAAA,eADuB;AAEvBC,EAAAA,MAFuB;AAGvBC,EAAAA,YAHuB;AAIvBC,EAAAA,MAJuB;AAKvBC,EAAAA;AALuB,CAAzB,EAMG;AACD,sBACE,0CACG,CAACJ,eAAe,KAAK,WAApB,IACAA,eAAe,KAAK,aADrB,kBAEC,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEG,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEE,eADjB;AAEE,IAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEV,KAAK,CAACW,KAAN,CAAYC,mBADnB;AAELC,MAAAA,QAAQ,EAAE,EAFL;AAGLC,MAAAA,KAAK,EAAEf,MAAM,CAACgB;AAHT,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQG,mBARH,QAQ0B,KAR1B,oBASG;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UATH,eAUE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,8DAVF,CADF,eAgBE,oBAAC,YAAD;AACE,IAAA,iBAAiB,MADnB;AAEE,IAAA,mBAAmB,EAAC,MAFtB;AAGE,IAAA,eAAe,EAAE,IAHnB;AAIE,IAAA,YAAY,EAAE,CAJhB;AAKE,IAAA,iBAAiB,MALnB;AAME,IAAA,aAAa,EAAE,KANjB;AAOE,IAAA,SAAS,EAAE,aAPb;AAQE,IAAA,WAAW,EAAE,OARf;AASE,IAAA,KAAK,EAAEV,MATT;AAUE,IAAA,IAAI,EAAE,MAVR;AAWE,IAAA,WAAW,EAAEJ,gBAXf;AAYE,IAAA,IAAI,EAAG,iBAZT;AAaE,IAAA,QAAQ,EAAEK,YAbZ;AAcE,IAAA,OAAO,EAAC,UAdV;AAeE,IAAA,UAAU,EAAEC,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEE,eAftB;AAgBE,IAAA,KAAK,EAAEF,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEE,eAhBjB;AAiBE,IAAA,MAAM,EAAED,MAjBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAHJ,CADF;AA2CD;;AAED,eAAeL,eAAf","sourcesContent":["import { FormLabel } from \"@material-ui/core\";\nimport React from \"react\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport { StyledFormElementsWrapper } from \"../Styles\";\n\nfunction TotalClaimValue({\n  ressolutionKind,\n  values,\n  handleChange,\n  errors,\n  onBlur,\n}) {\n  return (\n    <>\n      {(ressolutionKind === \"mediation\" ||\n        ressolutionKind === \"arbitration\") && (\n        <StyledFormElementsWrapper>\n          <FormLabel\n            error={errors?.totalClaimValue}\n            style={{\n              fontFamily: theme.fonts.primaryFontSemiBold,\n              fontSize: 12,\n              color: COLORS.INPUT_LABEL,\n            }}\n          >\n            {\"Total Claim Value\"} ({\"INR\"})\n            {<span className=\"required-star\"> *</span>}\n            <span className=\"waring-msg\">\n              {\" \"}\n              (Leave claim value as zero if your claim is non-monetary)\n            </span>\n          </FormLabel>\n          <NumberFormat\n            thousandSeparator\n            thousandsGroupStyle=\"lakh\"\n            isNumericString={true}\n            decimalScale={2}\n            fixedDecimalScale\n            allowNegative={false}\n            className={\"input-white\"}\n            displayType={\"input\"}\n            value={values}\n            type={\"text\"}\n            customInput={CustomInputField}\n            name={`totalClaimValue`}\n            onChange={handleChange}\n            variant=\"outlined\"\n            helperText={errors?.totalClaimValue}\n            error={errors?.totalClaimValue}\n            onBlur={onBlur}\n          />\n        </StyledFormElementsWrapper>\n      )}\n    </>\n  );\n}\n\nexport default TotalClaimValue;\n"]},"metadata":{},"sourceType":"module"}