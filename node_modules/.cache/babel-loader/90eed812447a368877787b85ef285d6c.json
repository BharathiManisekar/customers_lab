{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Notification/MobileNotification.js\";\nimport React, { useEffect, useState } from \"react\";\nimport labels from \"../../../helpers/labels.json\";\nimport styled from \"styled-components\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport DashboardSerivces from \"../../../services/DashboardSerivces\";\nimport Items from \"./items\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport { NOTIFICATION_ACTIVITY, PAYMENT_PENDING } from \"../../../helpers/constants\";\nimport useNotification from \"../../../hooks/useNotification\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nconst Notification = () => {\n  const [currentPage, setCurrentPage] = useState(0); // This state is used for indicating the current page\n\n  const [loading, setLoading] = useState(true); // This State for showing the loader for pending action\n\n  const [activities, setActivities] = useState([]); //This state for Pending Action\n\n  const [endPage, setEndPage] = useState();\n  const location = useLocation();\n  const {\n    setTriggerNotify\n  } = useNotification(); // hooks to refresh the page\n\n  useEffect(() => {\n    const getPendingAction = () => {\n      let params = {\n        page: currentPage + 1,\n        perPage: 25\n      };\n      let stringParams = \"\";\n\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n\n      DashboardSerivces.getPendingAction(stringParams).then(res => {\n        if (res === null || res === void 0 ? void 0 : res.activities) {\n          setActivities([...activities, ...res.activities.data]);\n          setEndPage(res.activities.lastPage);\n        }\n\n        setLoading(false);\n      }, err => {\n        console.log(err);\n        setLoading(false);\n      });\n    };\n\n    setLoading(true);\n    getPendingAction(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  const loadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const navigateToAction = ({\n    kind,\n    entityId,\n    meta\n  }) => {\n    if (kind && PAYMENT_PENDING.includes(kind)) {\n      navigate(\"/dashboard/cart\");\n    } else {\n      navigate(`/dashboard/cases/${entityId}?caseType=${(meta === null || meta === void 0 ? void 0 : meta.resolutionKind) ? meta === null || meta === void 0 ? void 0 : meta.resolutionKind : \"negotiation\"}`);\n\n      if (location.pathname.includes(\"dashboard/cases\")) {\n        setTimeout(() => {\n          setTriggerNotify(true);\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, labels[\"appbar.notification\"]), /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: loadMore,\n    initialLoad: false,\n    hasMore: endPage && currentPage < endPage - 1 ? true : false,\n    threshold: 50,\n    loader: /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flex: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Notifications, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, (activities === null || activities === void 0 ? void 0 : activities.length) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, activities.map((el, index) => {\n    var _NOTIFICATION_ACTIVIT;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      onClick: () => navigateToAction(el),\n      style: {\n        marginBottom: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Items, {\n      type: (_NOTIFICATION_ACTIVIT = NOTIFICATION_ACTIVITY[el === null || el === void 0 ? void 0 : el.kind]) === null || _NOTIFICATION_ACTIVIT === void 0 ? void 0 : _NOTIFICATION_ACTIVIT.type,\n      message: `${el.message} ${PAYMENT_PENDING.includes(el.kind) ? labels.pay_here : labels.view_here}`,\n      time: el === null || el === void 0 ? void 0 : el.created_at,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }));\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"60vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, {\n    size: 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  })) : null)))));\n};\n\nexport default Notification;\nexport const Container = styled.div`\n  padding: 50px 15px;\n  display: flex;\n  flex-direction: column;\n`;\nexport const Heading = styled.div`\n  font-size: 18px;\n  font-family: ${theme.fonts.primaryFontExtraBold};\n  color: ${COLORS.COLOR_DARK};\n  margin-bottom: 30px;\n`;\nexport const Notifications = styled.div``;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/Notification/MobileNotification.js"],"names":["React","useEffect","useState","labels","styled","theme","COLORS","CircularProgress","DashboardSerivces","Items","_","queryString","navigate","useLocation","NOTIFICATION_ACTIVITY","PAYMENT_PENDING","useNotification","InfiniteScroll","Notification","currentPage","setCurrentPage","loading","setLoading","activities","setActivities","endPage","setEndPage","location","setTriggerNotify","getPendingAction","params","page","perPage","stringParams","isEmpty","stringify","then","res","data","lastPage","err","console","log","loadMore","navigateToAction","kind","entityId","meta","includes","resolutionKind","pathname","setTimeout","display","justifyContent","flex","length","map","el","index","marginBottom","type","message","pay_here","view_here","created_at","alignItems","height","Container","div","Heading","fonts","primaryFontExtraBold","COLOR_DARK","Notifications"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport labels from \"../../../helpers/labels.json\";\nimport styled from \"styled-components\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport DashboardSerivces from \"../../../services/DashboardSerivces\";\nimport Items from \"./items\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport {\n  NOTIFICATION_ACTIVITY,\n  PAYMENT_PENDING,\n} from \"../../../helpers/constants\";\nimport useNotification from \"../../../hooks/useNotification\";\nimport InfiniteScroll from \"react-infinite-scroller\";\n\nconst Notification = () => {\n  const [currentPage, setCurrentPage] = useState(0); // This state is used for indicating the current page\n  const [loading, setLoading] = useState(true); // This State for showing the loader for pending action\n  const [activities, setActivities] = useState([]); //This state for Pending Action\n  const [endPage, setEndPage] = useState();\n  const location = useLocation();\n  const { setTriggerNotify } = useNotification(); // hooks to refresh the page\n\n  useEffect(() => {\n    const getPendingAction = () => {\n      let params = {\n        page: currentPage + 1,\n        perPage: 25,\n      };\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      DashboardSerivces.getPendingAction(stringParams).then(\n        (res) => {\n          if (res?.activities) {\n            setActivities([...activities, ...res.activities.data]);\n            setEndPage(res.activities.lastPage);\n          }\n          setLoading(false);\n        },\n        (err) => {\n          console.log(err);\n          setLoading(false);\n        }\n      );\n    };\n\n    setLoading(true);\n    getPendingAction();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentPage]);\n\n  const loadMore = () => {\n    setCurrentPage(currentPage + 1);\n  };\n\n  const navigateToAction = ({ kind, entityId, meta }) => {\n    if (kind && PAYMENT_PENDING.includes(kind)) {\n      navigate(\"/dashboard/cart\");\n    } else {\n      navigate(\n        `/dashboard/cases/${entityId}?caseType=${\n          meta?.resolutionKind ? meta?.resolutionKind : \"negotiation\"\n        }`\n      );\n      if (location.pathname.includes(\"dashboard/cases\")) {\n        setTimeout(() => {\n          setTriggerNotify(true);\n        });\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Heading>{labels[\"appbar.notification\"]}</Heading>\n      <InfiniteScroll\n        pageStart={0}\n        loadMore={loadMore}\n        initialLoad={false}\n        hasMore={endPage && currentPage < endPage - 1 ? true : false}\n        threshold={50}\n        loader={\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              flex: 1,\n            }}\n          >\n            <CircularProgress size={20} />\n          </div>\n        }\n      >\n        <Notifications>\n          <div>\n            {activities?.length ? (\n              <div>\n                {activities.map((el, index) => (\n                  <div\n                    key={index}\n                    onClick={() => navigateToAction(el)}\n                    style={{ marginBottom: 15 }}\n                  >\n                    <Items\n                      type={NOTIFICATION_ACTIVITY[el?.kind]?.type}\n                      message={`${el.message} ${\n                        PAYMENT_PENDING.includes(el.kind)\n                          ? labels.pay_here\n                          : labels.view_here\n                      }`}\n                      time={el?.created_at}\n                    />\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <div></div>\n            )}\n            <div>\n              {loading ? (\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    height: \"60vh\",\n                  }}\n                >\n                  <CircularProgress size={40} />\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </Notifications>\n      </InfiniteScroll>\n    </Container>\n  );\n};\n\nexport default Notification;\n\nexport const Container = styled.div`\n  padding: 50px 15px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Heading = styled.div`\n  font-size: 18px;\n  font-family: ${theme.fonts.primaryFontExtraBold};\n  color: ${COLORS.COLOR_DARK};\n  margin-bottom: 30px;\n`;\n\nexport const Notifications = styled.div``;\n"]},"metadata":{},"sourceType":"module"}