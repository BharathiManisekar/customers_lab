{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/AccoutVerificationPage/index.js\";\nimport React from \"react\";\nimport { AccVerifyContainer } from \"./Styles\";\nimport { Center } from \"../../../styles/component/style\";\nimport { AccountVerification } from \"../../internal/AccountVerification/AccountVerification\";\nimport { Header } from \"../../internal/Header/Header\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\n\nconst Index = ({\n  location,\n  email_token\n}) => {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    userObject\n  } = useUser();\n  const {\n    setLoader\n  } = useLoader();\n\n  async function resendEmail() {\n    try {\n      setLoader({\n        state: true,\n        message: \"Resending verfication mail...\"\n      });\n      const payload = {\n        email: userObject.email\n      };\n      const response = await AuthService.resendEmail(payload);\n\n      if (response) {\n        enqueueSnackbar(\"Verification mail sent successfully. Please check your Junk Folder/ Promotions Folder incase you don't receive the email\", {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AccVerifyContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AccountVerification, {\n    heading: labels[\"onboarding.step4\"],\n    message: `Hey ${userObject.name} as the final step of becoming part of JustAct we want you to verify your email.\n  Please login to your email - ${userObject.email} and click on the verification Link we sent in order to verify`,\n    timer: 60,\n    isTimmerEnabel: true,\n    triggerResent: resendEmail,\n    location: location,\n    email_token: email_token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/AccoutVerificationPage/index.js"],"names":["React","AccVerifyContainer","Center","AccountVerification","Header","AuthService","useSnackbar","useUser","useLoader","getErrorMessage","labels","Index","location","email_token","enqueueSnackbar","userObject","setLoader","resendEmail","state","message","payload","email","response","variant","error","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,SAASC,mBAAT,QAAoC,wDAApC;AACA,SAASC,MAAT,QAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAsBR,WAAW,EAAvC;AACA,QAAM;AAAES,IAAAA;AAAF,MAAiBR,OAAO,EAA9B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAgBR,SAAS,EAA/B;;AAEA,iBAAeS,WAAf,GAA6B;AAC3B,QAAI;AACFD,MAAAA,SAAS,CAAC;AAAEE,QAAAA,KAAK,EAAE,IAAT;AAAeC,QAAAA,OAAO,EAAE;AAAxB,OAAD,CAAT;AACA,YAAMC,OAAO,GAAG;AAAEC,QAAAA,KAAK,EAAEN,UAAU,CAACM;AAApB,OAAhB;AACA,YAAMC,QAAQ,GAAG,MAAMjB,WAAW,CAACY,WAAZ,CAAwBG,OAAxB,CAAvB;;AACA,UAAIE,QAAJ,EAAc;AACZR,QAAAA,eAAe,CACb,0HADa,EAEb;AACES,UAAAA,OAAO,EAAE;AADX,SAFa,CAAf;AAMD;AACF,KAZD,CAYE,OAAOC,KAAP,EAAc;AACd,YAAML,OAAO,GAAGV,eAAe,CAACe,KAAD,CAA/B;AACAV,MAAAA,eAAe,CAACK,OAAD,EAAU;AACvBI,QAAAA,OAAO,EAAE;AADc,OAAV,CAAf;AAGD,KAjBD,SAiBU;AACRP,MAAAA,SAAS,CAAC;AAAEE,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAT;AACD;AACF;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AACE,IAAA,OAAO,EAAER,MAAM,CAAC,kBAAD,CADjB;AAEE,IAAA,OAAO,EAAG,OAAMK,UAAU,CAACU,IAAK;AAC5C,iCAAiCV,UAAU,CAACM,KAAM,gEAHxC;AAIE,IAAA,KAAK,EAAE,EAJT;AAKE,IAAA,cAAc,EAAE,IALlB;AAME,IAAA,aAAa,EAAEJ,WANjB;AAOE,IAAA,QAAQ,EAAEL,QAPZ;AAQE,IAAA,WAAW,EAAEC,WARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAkBD,CA9CD;;AAgDA,eAAeF,KAAf","sourcesContent":["import React from \"react\";\nimport { AccVerifyContainer } from \"./Styles\";\nimport { Center } from \"../../../styles/component/style\";\nimport { AccountVerification } from \"../../internal/AccountVerification/AccountVerification\";\nimport { Header } from \"../../internal/Header/Header\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\n\nconst Index = ({ location, email_token }) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { userObject } = useUser();\n  const { setLoader } = useLoader();\n\n  async function resendEmail() {\n    try {\n      setLoader({ state: true, message: \"Resending verfication mail...\" });\n      const payload = { email: userObject.email };\n      const response = await AuthService.resendEmail(payload);\n      if (response) {\n        enqueueSnackbar(\n          \"Verification mail sent successfully. Please check your Junk Folder/ Promotions Folder incase you don't receive the email\",\n          {\n            variant: \"success\",\n          }\n        );\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  return (\n    <Header>\n      <Center>\n        <AccVerifyContainer>\n          <AccountVerification\n            heading={labels[\"onboarding.step4\"]}\n            message={`Hey ${userObject.name} as the final step of becoming part of JustAct we want you to verify your email.\n  Please login to your email - ${userObject.email} and click on the verification Link we sent in order to verify`}\n            timer={60}\n            isTimmerEnabel={true}\n            triggerResent={resendEmail}\n            location={location}\n            email_token={email_token}\n          />\n        </AccVerifyContainer>\n      </Center>\n    </Header>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}