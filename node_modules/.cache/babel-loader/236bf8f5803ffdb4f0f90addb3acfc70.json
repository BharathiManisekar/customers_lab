{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ResetPassword/index.js\";\nimport React, { useState } from \"react\";\nimport { Center, Header3, HeadingContainer, CardWrapper, ContentContainer, BackArrow } from \"../../../styles/component/style\";\nimport { SignupContainer } from \"./styles\";\nimport { Header } from \"../../internal/Header/Header\";\nimport { Formik } from \"formik\";\nimport { ResetPasswordSchema } from \"../../../helpers/validationSchema\";\nimport { navigate } from \"@reach/router\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AuthService from \"../../../services/AuthService\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\n\nconst Index = ({\n  resetToken\n}) => {\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [inputs] = useState([{\n    name: \"password\",\n    label: \"New Password\",\n    type: \"password\",\n    required: true\n  }, {\n    name: \"confirmPassword\",\n    label: \"Confirm Password\",\n    type: \"password\",\n    required: true\n  }]);\n\n  async function onFormSubmit(params) {\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting...\"\n      });\n      const payload = {\n        password: params.password,\n        resetToken\n      };\n      const response = await AuthService.resetPassword(payload);\n\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\"\n        });\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Center, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SignupContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      password: \"\",\n      confirmPassword: \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: onFormSubmit,\n    validationSchema: ResetPasswordSchema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue,\n    isValid\n  }) => /*#__PURE__*/React.createElement(CardWrapper, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    onClick: () => navigate(\"/\"),\n    src: require(\"../../../assets/images/backArrow.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"RESET PASSWORD\")), /*#__PURE__*/React.createElement(ContentContainer, {\n    style: {\n      marginTop: 34\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, inputs.map((input, index) => {\n    return /*#__PURE__*/React.createElement(FormField, {\n      key: index,\n      touched,\n      errors,\n      input,\n      values,\n      handleChange,\n      handleBlur,\n      setFieldValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 23\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt20 pb10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    type: \"submit\",\n    onClick: handleSubmit,\n    disabled: !isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, \"Reset\")))))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/ResetPassword/index.js"],"names":["React","useState","Center","Header3","HeadingContainer","CardWrapper","ContentContainer","BackArrow","SignupContainer","Header","Formik","ResetPasswordSchema","navigate","FormField","PrimaryCTAButton","useLoader","AuthService","getErrorMessage","useSnackbar","Index","resetToken","setLoader","enqueueSnackbar","inputs","name","label","type","required","onFormSubmit","params","state","message","payload","password","response","resetPassword","variant","error","confirmPassword","values","handleChange","errors","handleSubmit","touched","handleBlur","setFieldValue","isValid","require","marginTop","map","input","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Center,\n  Header3,\n  HeadingContainer,\n  CardWrapper,\n  ContentContainer,\n  BackArrow,\n} from \"../../../styles/component/style\";\n\nimport { SignupContainer } from \"./styles\";\nimport { Header } from \"../../internal/Header/Header\";\nimport { Formik } from \"formik\";\nimport { ResetPasswordSchema } from \"../../../helpers/validationSchema\";\nimport { navigate } from \"@reach/router\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AuthService from \"../../../services/AuthService\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\n\nconst Index = ({ resetToken }) => {\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const [inputs] = useState([\n    {\n      name: \"password\",\n      label: \"New Password\",\n      type: \"password\",\n      required: true,\n    },\n    {\n      name: \"confirmPassword\",\n      label: \"Confirm Password\",\n      type: \"password\",\n      required: true,\n    },\n  ]);\n\n  async function onFormSubmit(params) {\n    try {\n      setLoader({ state: true, message: \"Submitting...\" });\n      const payload = {\n        password: params.password,\n        resetToken,\n      };\n      const response = await AuthService.resetPassword(payload);\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\",\n        });\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  return (\n    <Header>\n      <Center>\n        <SignupContainer>\n          <Formik\n            initialValues={{\n              password: \"\",\n              confirmPassword: \"\",\n            }}\n            enableReinitialize\n            onSubmit={onFormSubmit}\n            validationSchema={ResetPasswordSchema}\n            validateOnBlur\n            validateOnChange\n          >\n            {({\n              values,\n              handleChange,\n              errors,\n              handleSubmit,\n              touched,\n              handleBlur,\n              setFieldValue,\n              isValid,\n            }) => (\n              <CardWrapper onSubmit={handleSubmit}>\n                <HeadingContainer>\n                  <BackArrow\n                    onClick={() => navigate(\"/\")}\n                    src={require(\"../../../assets/images/backArrow.svg\")}\n                  />\n                  <Header3>RESET PASSWORD</Header3>\n                </HeadingContainer>\n                <ContentContainer style={{ marginTop: 34 }}>\n                  {inputs.map((input, index) => {\n                    return (\n                      <FormField\n                        key={index}\n                        {...{\n                          touched,\n                          errors,\n                          input,\n                          values,\n                          handleChange,\n                          handleBlur,\n                          setFieldValue,\n                        }}\n                      />\n                    );\n                  })}\n                </ContentContainer>\n\n                <div className=\"pt20 pb10\">\n                  <PrimaryCTAButton\n                    type=\"submit\"\n                    onClick={handleSubmit}\n                    disabled={!isValid}\n                  >\n                    Reset\n                  </PrimaryCTAButton>\n                </div>\n              </CardWrapper>\n            )}\n          </Formik>\n        </SignupContainer>\n      </Center>\n    </Header>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}