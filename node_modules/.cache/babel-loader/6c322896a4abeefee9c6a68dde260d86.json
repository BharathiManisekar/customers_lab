{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateProfile/CreateProfile.js\";\nimport React from \"react\";\nimport { CardWrapper, HeadingContainer, Header3 } from \"../../../styles/component/style\";\nimport { MessageContainer, InputContainer } from \"./Styles\";\nimport styled from \"styled-components\";\nimport { Formik } from \"formik\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { states } from \"../../../helpers/constants\";\nimport theme from \"../../../assets/theme\";\nimport { profileCompletionValidationSchema } from \"../../../helpers/validationSchema\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport _ from \"lodash\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { navigate } from \"@reach/router\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useUser from \"../../../hooks/useUser\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\nexport const CreateProfile = ({\n  heading = labels[\"onboarding.step3\"],\n  message = `Avian thanks for verifying your phone number. We need you to fill in a few more details in order to create you profile on JustAct`,\n  inputs = []\n}) => {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    userObject,\n    setUserObject\n  } = useUser();\n\n  async function onFormSubmit(values) {\n    const postData = JSON.parse(JSON.stringify(values));\n\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting form...\"\n      });\n\n      let payload = _.pick(postData, [\"dob\", \"locality\", \"city\", \"state\", \"pin\", \"landmark\"]);\n\n      payload.houseNumber = values.address_line;\n      const response = await AuthService.profileUpdate(payload);\n\n      if (response) {\n        var _response$me;\n\n        setUserObject(response.me);\n\n        if (response === null || response === void 0 ? void 0 : (_response$me = response.me) === null || _response$me === void 0 ? void 0 : _response$me.emailVerified) {\n          navigate(\"/dashboard/welcome\");\n        } else {\n          enqueueSnackbar(\"Verification mail sent successfully. Please check your Junk Folder/ Promotions Folder incase you don't receive the email\", {\n            variant: \"success\"\n          });\n          navigate(\"/verify-email\", {\n            state: {\n              payload\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, heading)), /*#__PURE__*/React.createElement(MessageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, message), /*#__PURE__*/React.createElement(InputContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      dob: (userObject === null || userObject === void 0 ? void 0 : userObject.dob) || null,\n      address_line: (userObject === null || userObject === void 0 ? void 0 : userObject.houseNumber) || \"\",\n      locality: (userObject === null || userObject === void 0 ? void 0 : userObject.locality) || \"\",\n      city: (userObject === null || userObject === void 0 ? void 0 : userObject.city) || \"\",\n      state: (userObject === null || userObject === void 0 ? void 0 : userObject.state) || \" \",\n      pin: (userObject === null || userObject === void 0 ? void 0 : userObject.pin) || \"\",\n      landmark: (userObject === null || userObject === void 0 ? void 0 : userObject.landmark) || \"\"\n    },\n    enableReinitialize: true,\n    onSubmit: onFormSubmit,\n    validationSchema: profileCompletionValidationSchema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue\n  }) => /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"dob\",\n      label: labels[\"user.dob\"],\n      type: \"date\",\n      placeholder: \"Choose DOB\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, labels[\"user.address\"]), /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"address_line\",\n      label: labels[\"user.house_label\"],\n      type: \"text\",\n      placeholder: \"Eg. Flat 2C, PKP Apartment\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"locality\",\n      label: labels[\"user.locality\"],\n      type: \"text\",\n      placeholder: \"Eg. Saket\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"city\",\n      label: labels[\"user.city\"],\n      type: \"text\",\n      placeholder: \"Eg. Delhi\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"state\",\n      label: labels[\"user.state\"],\n      type: \"select\",\n      required: true\n    },\n    menuItems: [...states],\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(HalfWidth, {\n    className: \"disabledArrows\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"pin\",\n      label: labels[\"user.pin\"],\n      type: \"number\",\n      placeholder: \"Eg. 110016\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(HalfWidth, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    input: {\n      name: \"landmark\",\n      label: labels[\"user.landmark\"],\n      type: \"text\",\n      placeholder: \"Eg. Garden of 5 senses\",\n      required: true\n    },\n    touched,\n    errors,\n    values,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ButtonContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, labels[\"onboarding.createProfile\"]))))));\n};\nconst FormContainer = styled.form``;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 600px) {\n    flex-wrap: wrap;\n  }\n`;\nconst HalfWidth = styled.div`\n  width: 48%;\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\nconst FormLabel = styled.div`\n  padding-top: 17px;\n  padding-bottom: 13px;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.83;\n  letter-spacing: normal;\n  color: #293461;\n`;\nconst ButtonContainer = styled.div`\n  width: 413px;\n  margin: 0 auto;\n  margin-top: 19px;\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateProfile/CreateProfile.js"],"names":["React","CardWrapper","HeadingContainer","Header3","MessageContainer","InputContainer","styled","Formik","FormField","states","theme","profileCompletionValidationSchema","PrimaryCTAButton","_","AuthService","useSnackbar","navigate","useLoader","useUser","getErrorMessage","labels","CreateProfile","heading","message","inputs","enqueueSnackbar","setLoader","userObject","setUserObject","onFormSubmit","values","postData","JSON","parse","stringify","state","payload","pick","houseNumber","address_line","response","profileUpdate","me","emailVerified","variant","error","console","log","dob","locality","city","pin","landmark","handleChange","errors","handleSubmit","touched","handleBlur","setFieldValue","name","label","type","placeholder","required","FormContainer","form","Flex","div","HalfWidth","FormLabel","fonts","primaryFontBold","ButtonContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CardWrapper,\n  HeadingContainer,\n  Header3,\n} from \"../../../styles/component/style\";\nimport { MessageContainer, InputContainer } from \"./Styles\";\nimport styled from \"styled-components\";\nimport { Formik } from \"formik\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { states } from \"../../../helpers/constants\";\nimport theme from \"../../../assets/theme\";\nimport { profileCompletionValidationSchema } from \"../../../helpers/validationSchema\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport _ from \"lodash\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { navigate } from \"@reach/router\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport useUser from \"../../../hooks/useUser\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\n\nexport const CreateProfile = ({\n  heading = labels[\"onboarding.step3\"],\n  message = `Avian thanks for verifying your phone number. We need you to fill in a few more details in order to create you profile on JustAct`,\n  inputs = [],\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { setLoader } = useLoader();\n  const { userObject, setUserObject } = useUser();\n\n  async function onFormSubmit(values) {\n    const postData = JSON.parse(JSON.stringify(values));\n    try {\n      setLoader({ state: true, message: \"Submitting form...\" });\n      let payload = _.pick(postData, [\n        \"dob\",\n        \"locality\",\n        \"city\",\n        \"state\",\n        \"pin\",\n        \"landmark\",\n      ]);\n      payload.houseNumber = values.address_line;\n      const response = await AuthService.profileUpdate(payload);\n      if (response) {\n        setUserObject(response.me);\n        if (response?.me?.emailVerified) {\n          navigate(\"/dashboard/welcome\");\n        } else {\n          enqueueSnackbar(\n            \"Verification mail sent successfully. Please check your Junk Folder/ Promotions Folder incase you don't receive the email\",\n            {\n              variant: \"success\",\n            }\n          );\n          navigate(\"/verify-email\", {\n            state: {\n              payload,\n            },\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n  return (\n    <CardWrapper>\n      <HeadingContainer>\n        <Header3>{heading}</Header3>\n      </HeadingContainer>\n      <MessageContainer>{message}</MessageContainer>\n      <InputContainer>\n        <Formik\n          initialValues={{\n            dob: userObject?.dob || null,\n            address_line: userObject?.houseNumber || \"\",\n            locality: userObject?.locality || \"\",\n            city: userObject?.city || \"\",\n            state: userObject?.state || \" \",\n            pin: userObject?.pin || \"\",\n            landmark: userObject?.landmark || \"\",\n          }}\n          enableReinitialize\n          onSubmit={onFormSubmit}\n          validationSchema={profileCompletionValidationSchema}\n          validateOnBlur\n          validateOnChange\n        >\n          {({\n            values,\n            handleChange,\n            errors,\n            handleSubmit,\n            touched,\n            handleBlur,\n            setFieldValue,\n          }) => (\n            <FormContainer onSubmit={handleSubmit}>\n              <Flex>\n                <FormField\n                  input={{\n                    name: \"dob\",\n                    label: labels[\"user.dob\"],\n                    type: \"date\",\n                    placeholder: \"Choose DOB\",\n                    required: true,\n                  }}\n                  {...{\n                    touched,\n                    errors,\n                    values,\n                    handleChange,\n                    handleBlur,\n                    setFieldValue,\n                  }}\n                />\n              </Flex>\n              <FormLabel>{labels[\"user.address\"]}</FormLabel>\n\n              <FormField\n                input={{\n                  name: \"address_line\",\n                  label: labels[\"user.house_label\"],\n                  type: \"text\",\n                  placeholder: \"Eg. Flat 2C, PKP Apartment\",\n                  required: true,\n                }}\n                {...{\n                  touched,\n                  errors,\n                  values,\n                  handleChange,\n                  handleBlur,\n                }}\n              />\n              <Flex>\n                <HalfWidth>\n                  <FormField\n                    input={{\n                      name: \"locality\",\n                      label: labels[\"user.locality\"],\n                      type: \"text\",\n                      placeholder: \"Eg. Saket\",\n                      required: true,\n                    }}\n                    {...{\n                      touched,\n                      errors,\n                      values,\n                      handleChange,\n                      handleBlur,\n                    }}\n                  />\n                </HalfWidth>\n                <HalfWidth>\n                  <FormField\n                    input={{\n                      name: \"city\",\n                      label: labels[\"user.city\"],\n                      type: \"text\",\n                      placeholder: \"Eg. Delhi\",\n                      required: true,\n                    }}\n                    {...{\n                      touched,\n                      errors,\n                      values,\n                      handleChange,\n                      handleBlur,\n                    }}\n                  />\n                </HalfWidth>\n              </Flex>\n              <Flex>\n                <HalfWidth>\n                  <FormField\n                    input={{\n                      name: \"state\",\n                      label: labels[\"user.state\"],\n                      type: \"select\",\n                      required: true,\n                    }}\n                    menuItems={[...states]}\n                    {...{\n                      touched,\n                      errors,\n                      values,\n                      handleChange,\n                      handleBlur,\n                    }}\n                  />\n                </HalfWidth>\n                <HalfWidth className=\"disabledArrows\">\n                  <FormField\n                    input={{\n                      name: \"pin\",\n                      label: labels[\"user.pin\"],\n                      type: \"number\",\n                      placeholder: \"Eg. 110016\",\n                      required: true,\n                    }}\n                    {...{\n                      touched,\n                      errors,\n                      values,\n                      handleChange,\n                      handleBlur,\n                    }}\n                  />\n                </HalfWidth>\n              </Flex>\n              <HalfWidth>\n                <FormField\n                  input={{\n                    name: \"landmark\",\n                    label: labels[\"user.landmark\"],\n                    type: \"text\",\n                    placeholder: \"Eg. Garden of 5 senses\",\n                    required: true,\n                  }}\n                  {...{\n                    touched,\n                    errors,\n                    values,\n                    handleChange,\n                    handleBlur,\n                  }}\n                />\n              </HalfWidth>\n              <ButtonContainer>\n                <PrimaryCTAButton onClick={handleSubmit}>\n                  {labels[\"onboarding.createProfile\"]}\n                </PrimaryCTAButton>\n              </ButtonContainer>\n            </FormContainer>\n          )}\n        </Formik>\n      </InputContainer>\n    </CardWrapper>\n  );\n};\n\nconst FormContainer = styled.form``;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  @media (max-width: 600px) {\n    flex-wrap: wrap;\n  }\n`;\n\nconst HalfWidth = styled.div`\n  width: 48%;\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n\nconst FormLabel = styled.div`\n  padding-top: 17px;\n  padding-bottom: 13px;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: 1.83;\n  letter-spacing: normal;\n  color: #293461;\n`;\n\nconst ButtonContainer = styled.div`\n  width: 413px;\n  margin: 0 auto;\n  margin-top: 19px;\n  @media (max-width: 600px) {\n    width: 100%;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}