{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseRequests/components/AssignPartyModal.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2;\n\nimport React, { Fragment } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { Formik } from \"formik\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport PartyService from \"../../../../services/PartyService\";\nimport _ from \"lodash\";\nimport { PrimaryCTAButton, PrimaryOutlinedCTAButton } from \"../../../common/Buttons\";\nimport { navigate } from \"@reach/router\";\nimport { CaseRequestSchema } from \"../../../../helpers/validationSchema\";\nimport labels from \"../../../../helpers/labels.json\";\nimport CaseService from \"../../../../services/CaseService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../../helpers/functions\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport useCartCount from \"../../../../hooks/useCartCount\";\nimport { CustomCheckbox } from \"../../../common/FormInputs\";\nimport useSettings from \"../../../../hooks/useSettings\";\nexport default function AssignPartyModal({\n  modal = {\n    state: false\n  },\n  setModal,\n  MTRef\n}) {\n  const [state, setState] = useState({\n    perPage: 50,\n    data: [],\n    page: 0,\n    lastPage: 1,\n    loading: true\n  });\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setTriggerCount\n  } = useCartCount();\n  const {\n    showAlert,\n    hideAlert\n  } = useAlert();\n  const {\n    setting\n  } = useSettings();\n  useEffect(() => {\n    async function getParties() {\n      try {\n        const response = await PartyService.getParties(`?perPage=${state.perPage}&page=${state.page + 1}&status=active`);\n        setState(s => ({ ...response,\n          data: _.uniqBy([...s.data, ...response.data.map(({\n            name,\n            id\n          }) => ({\n            label: name,\n            value: id\n          }))], \"value\")\n        }));\n        return response;\n      } catch (error) {\n        throw error;\n      }\n    }\n\n    if (state.page < state.lastPage) getParties();\n  }, [state]);\n\n  const acceptCase = async ({\n    partyId\n  }, registrationFee) => {\n    try {\n      var _modal$case;\n\n      if (partyId && (modal === null || modal === void 0 ? void 0 : (_modal$case = modal.case) === null || _modal$case === void 0 ? void 0 : _modal$case.id)) {\n        setLoader({\n          state: true,\n          message: \"Accepting Case...\"\n        });\n        const response = await CaseService.acceptCase(modal.case.id, partyId);\n\n        if (response) {\n          enqueueSnackbar(\"Case accepted successfully\", {\n            variant: \"success\"\n          });\n\n          if (registrationFee && Number(registrationFee)) {\n            setTriggerCount(true);\n            navigate(\"/dashboard/cart\");\n          } else {\n            var _modal$case2;\n\n            navigate(\"/dashboard/cases/\" + modal.case.id + `?caseType=${modal === null || modal === void 0 ? void 0 : (_modal$case2 = modal.case) === null || _modal$case2 === void 0 ? void 0 : _modal$case2.resolutionKind}`);\n          }\n\n          MTRef.current.onSearchChange(\"\");\n          setModal(false);\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      hideAlert();\n    }\n  };\n\n  const acceptPaymentInformationAlert = (registrationFee, res, values) => {\n    var _modal$case3, _modal$case4, _modal$case5, _modal$case6, _modal$case7, _modal$case8, _res$fee;\n\n    showAlert({\n      heading: \"Accept Case Confirmation\",\n      desc: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, \"Please note\"), \":\", \" \", (registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total) && Number(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total) ? /*#__PURE__*/React.createElement(StyledTextSemi, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"In order to proceed with the case registration, you will need to pay a\", \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case3 = modal.case) === null || _modal$case3 === void 0 ? void 0 : _modal$case3.resolutionKind) === \"arbitration\" ? \"arbitration\" : \"registration\", \" \", \"fee of\", \" \", /*#__PURE__*/React.createElement(StyledText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, \"INR \", parseFloat(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total).toFixed(2), \" (inclusive of GST).\", \" \")) : null, \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case4 = modal.case) === null || _modal$case4 === void 0 ? void 0 : _modal$case4.resolutionKind) !== \"arbitration\" && /*#__PURE__*/React.createElement(React.Fragment, null, \"If the case is successfully resolved\", \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case5 = modal.case) === null || _modal$case5 === void 0 ? void 0 : _modal$case5.resolutionKind) === \"negotiation\" ? \"negotiated\" : (modal === null || modal === void 0 ? void 0 : (_modal$case6 = modal.case) === null || _modal$case6 === void 0 ? void 0 : _modal$case6.resolutionKind) === \"mediation\" ? \"mediated\" : \"arbitrated\", \", you will need to pay a\", \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case7 = modal.case) === null || _modal$case7 === void 0 ? void 0 : _modal$case7.resolutionKind) === \"negotiation\" ? \"negotiation\" : (modal === null || modal === void 0 ? void 0 : (_modal$case8 = modal.case) === null || _modal$case8 === void 0 ? void 0 : _modal$case8.resolutionKind) === \"mediation\" ? \"mediated\" : \"arbitrated\", \" \", \"success fee of\", \" \", /*#__PURE__*/React.createElement(StyledText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 15\n        }\n      }, \"INR \", parseFloat(res === null || res === void 0 ? void 0 : (_res$fee = res.fee) === null || _res$fee === void 0 ? void 0 : _res$fee.total).toFixed(2), \" (inclusive of GST)\"), \" \", \"to collect your Settlement Agreement.\")),\n      primaryBtnText: \"Accept\",\n      secondaryBtnText: \"Cancel\",\n      clickSecondarybtn: () => hideAlert(),\n      clickPrimaryBtn: () => acceptCase(values, registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total),\n      isOpen: true,\n      onDialogClose: () => hideAlert(),\n      descriptionTextStyle: {\n        textAlign: \"left\",\n        fontFamily: theme.fonts.primaryFontSemiBold\n      }\n    });\n  };\n\n  const adhocPaymentInformationAlert = (registrationFee, values) => {\n    var _modal$case9, _modal$case10;\n\n    showAlert({\n      heading: \"Accept Case Confirmation\",\n      desc: /*#__PURE__*/React.createElement(\"div\", {\n        className: \"adhoc-pricing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, \"You will be charged a non-refundable license fee of INR\", \" \", parseFloat(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total).toFixed(2) || 0.0, \" for using JustAct. The license validity is \", registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.roomValidity, \" \", \"months.\")), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }\n      }, \"You will also need to pay the\", \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case9 = modal.case) === null || _modal$case9 === void 0 ? void 0 : _modal$case9.resolutionKind) === \"mediation\" ? \"mediator\" : \"arbitrator\", \" \", \"as per the terms agreed between the parties and the\", \" \", (modal === null || modal === void 0 ? void 0 : (_modal$case10 = modal.case) === null || _modal$case10 === void 0 ? void 0 : _modal$case10.resolutionKind) === \"mediation\" ? \"mediator\" : \"arbitrator\", \". JustAct will not be responsible for any non-payment in this regard.\"))),\n      primaryBtnText: \"Accept\",\n      secondaryBtnText: \"Cancel\",\n      clickSecondarybtn: () => hideAlert(),\n      clickPrimaryBtn: () => acceptCase(values, registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total),\n      isOpen: true,\n      onDialogClose: () => hideAlert(),\n      descriptionTextStyle: {\n        textAlign: \"center\",\n        fontFamily: theme.fonts.primaryFontSemiBold\n      }\n    });\n  };\n\n  async function onFormSubmit(values) {\n    var _modal$case11, _modal$case12;\n\n    if ((modal === null || modal === void 0 ? void 0 : (_modal$case11 = modal.case) === null || _modal$case11 === void 0 ? void 0 : _modal$case11.respondentStatus) === \"accepted\" || (modal === null || modal === void 0 ? void 0 : (_modal$case12 = modal.case) === null || _modal$case12 === void 0 ? void 0 : _modal$case12.paymentCode)) {\n      // already accepted by another respondent or case contains payment code\n      acceptCase(values); // Accept directly when 2 respondent accept the case\n    } else {\n      try {\n        var _await$CaseService$ge, _modal$case13;\n\n        setLoader({\n          state: true,\n          message: \"Fetching details...\"\n        });\n        const registrationFee = ((_await$CaseService$ge = await CaseService.getCase(modal.case.id, `?estimateFeeKind=registrationFee&partyId=${values === null || values === void 0 ? void 0 : values.partyId}`)) === null || _await$CaseService$ge === void 0 ? void 0 : _await$CaseService$ge.fee) || {};\n\n        if ((modal === null || modal === void 0 ? void 0 : (_modal$case13 = modal.case) === null || _modal$case13 === void 0 ? void 0 : _modal$case13.subscriptionKind) === \"adhoc\") {\n          adhocPaymentInformationAlert(registrationFee, values);\n        } else {\n          var _modal$case14, _res$fee2;\n\n          const res = await CaseService.getCase(modal === null || modal === void 0 ? void 0 : (_modal$case14 = modal.case) === null || _modal$case14 === void 0 ? void 0 : _modal$case14.id, `?estimateFeeKind=successFee&estimateRespondentPartyId=${values === null || values === void 0 ? void 0 : values.partyId}`);\n\n          if (res === null || res === void 0 ? void 0 : (_res$fee2 = res.fee) === null || _res$fee2 === void 0 ? void 0 : _res$fee2.total) {\n            acceptPaymentInformationAlert(registrationFee, res, values);\n          }\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    open: modal.state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DrawerContainer, {\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }, labels.select_party), /*#__PURE__*/React.createElement(CloseModal, {\n    onClick: () => setModal({\n      state: false\n    }),\n    src: require(\"../../../../assets/images/closeModal.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 11\n    }\n  })), !state.loading && /*#__PURE__*/React.createElement(AgentFormContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      partyId: \"\",\n      agreement: false\n    },\n    enableReinitialize: true,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validationSchema: CaseRequestSchema,\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    setFieldValue,\n    setFieldError,\n    handleBlur\n  }) => {\n    var _state$data, _modal$case15, _modal$case16;\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) === 0 && /*#__PURE__*/React.createElement(HelperText, {\n      style: {\n        position: \"relative\",\n        bottom: 0,\n        marginTop: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, labels.no_party_found), /*#__PURE__*/React.createElement(Relative, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormField, {\n      input: {\n        name: \"partyId\",\n        label: labels.select_existing,\n        type: \"select\"\n      },\n      showId: true,\n      menuItems: state.data,\n      touched,\n      errors,\n      values,\n      handleChange,\n      handleBlur,\n      setFieldValue,\n      setFieldError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    })), (modal === null || modal === void 0 ? void 0 : (_modal$case15 = modal.case) === null || _modal$case15 === void 0 ? void 0 : _modal$case15.subscriptionKind) !== \"adhoc\" ? /*#__PURE__*/React.createElement(CheckboxFormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CustomCheckbox, {\n      name: \"agreement\",\n      checked: values.agreement,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(CheckBoxLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, \"I Agree to JustAct being my ADR provider and agree to JustAct\", \" \", /*#__PURE__*/React.createElement(HyperLink, {\n      onClick: () => {\n        window.open((setting === null || setting === void 0 ? void 0 : setting.rulesDocumentUrl) || \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/13/1620883614227-f4dbb5a2-4d9c-4a80-8645-b3500816dead/JustAct_Rules.pdf\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 27\n      }\n    }, \"rules\"), \" \", \"of Negotiation, Mediation, Arbitration, as applicable.\"))) : null, /*#__PURE__*/React.createElement(Flex, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(PrimaryOutlinedCTAButton, {\n      type: \"button\",\n      onClick: () => navigate(\"/dashboard/parties/create\"),\n      style: {\n        width: \"47%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }\n    }, labels.create_new_party), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n      type: \"submit\",\n      onClick: handleSubmit,\n      disabled: !values.partyId || !values.agreement && (modal === null || modal === void 0 ? void 0 : (_modal$case16 = modal.case) === null || _modal$case16 === void 0 ? void 0 : _modal$case16.subscriptionKind) !== \"adhoc\",\n      style: {\n        width: \"47%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 21\n      }\n    }, labels.select_party_btn)));\n  }))));\n}\nconst DrawerContainer = styled.div`\n  width: 100vw;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n    width: 555px;\n  }\n`;\nconst HeadingContainer = styled.div`\n  padding-top: 35px;\n  padding-bottom: 20px;\n  padding-left: 30px;\n  padding-right: 54px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n`;\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: ${COLORS.COLOR_DARK};\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\nconst StyledTextSemi = styled.a`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n`;\nconst StyledText = styled.a`\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 38px;\n  padding-right: 38px;\n  padding-bottom: 26px;\n  height: 100%;\n  & form {\n    padding-top: 10px;\n  }\n`;\nconst Relative = styled.div`\n  position: relative;\n`;\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: -15px;\n  position: absolute;\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 25px;\n`;\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n`;\nconst CheckboxFormControl = styled.div`\n  margin-top: 15px;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.sm_up} {\n    width: 436px;\n  }\n`;\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst CheckBoxLabel = styled.span`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 14px;\n  color: ${COLORS.COLOR_DARK};\n  cursor: inherit;\n`; // export const CheckBoxLabel = styled.span`\n//   font-family: ${theme.fonts.primaryFontRegular};\n//   font-size: 14px;\n//   color: ${COLORS.COLOR_DARK};\n//   cursor: inherit;\n// `;\n// export const CheckboxContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n// `;\n// export const CheckboxFormControl = styled.div`\n//   margin-top: 15px;\n//   width: 436px;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseRequests/components/AssignPartyModal.js"],"names":["React","Fragment","Drawer","styled","COLORS","theme","Formik","FormField","useState","useEffect","PartyService","_","PrimaryCTAButton","PrimaryOutlinedCTAButton","navigate","CaseRequestSchema","labels","CaseService","useLoader","useSnackbar","getErrorMessage","useAlert","useCartCount","CustomCheckbox","useSettings","AssignPartyModal","modal","state","setModal","MTRef","setState","perPage","data","page","lastPage","loading","setLoader","enqueueSnackbar","setTriggerCount","showAlert","hideAlert","setting","getParties","response","s","uniqBy","map","name","id","label","value","error","acceptCase","partyId","registrationFee","case","message","variant","Number","resolutionKind","current","onSearchChange","acceptPaymentInformationAlert","res","values","heading","desc","total","parseFloat","toFixed","fee","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","isOpen","onDialogClose","descriptionTextStyle","textAlign","fontFamily","fonts","primaryFontSemiBold","adhocPaymentInformationAlert","roomValidity","onFormSubmit","respondentStatus","paymentCode","getCase","subscriptionKind","select_party","require","agreement","handleChange","errors","handleSubmit","touched","setFieldValue","setFieldError","handleBlur","length","position","bottom","marginTop","no_party_found","select_existing","type","window","open","rulesDocumentUrl","width","create_new_party","select_party_btn","DrawerContainer","div","breakpoints","sm_up","HeadingContainer","INPUT_BORDER","CloseModal","img","Heading","h3","COLOR_DARK","primaryFontExtraBold","StyledTextSemi","a","StyledText","AgentFormContainer","Relative","HelperText","Flex","HyperLink","span","BTN_GREEN","CheckboxFormControl","CheckboxContainer","CheckBoxLabel","primaryFontRegular"],"mappings":"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","sourcesContent":["import React, { Fragment } from \"react\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../../assets/Colors\";\nimport theme from \"../../../../assets/theme\";\nimport { Formik } from \"formik\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport PartyService from \"../../../../services/PartyService\";\nimport _ from \"lodash\";\nimport {\n  PrimaryCTAButton,\n  PrimaryOutlinedCTAButton,\n} from \"../../../common/Buttons\";\nimport { navigate } from \"@reach/router\";\nimport { CaseRequestSchema } from \"../../../../helpers/validationSchema\";\nimport labels from \"../../../../helpers/labels.json\";\nimport CaseService from \"../../../../services/CaseService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../../helpers/functions\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport useCartCount from \"../../../../hooks/useCartCount\";\nimport { CustomCheckbox } from \"../../../common/FormInputs\";\nimport useSettings from \"../../../../hooks/useSettings\";\n\nexport default function AssignPartyModal({\n  modal = { state: false },\n  setModal,\n  MTRef,\n}) {\n  const [state, setState] = useState({\n    perPage: 50,\n    data: [],\n    page: 0,\n    lastPage: 1,\n    loading: true,\n  });\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const { setTriggerCount } = useCartCount();\n  const { showAlert, hideAlert } = useAlert();\n  const { setting } = useSettings();\n\n  useEffect(() => {\n    async function getParties() {\n      try {\n        const response = await PartyService.getParties(\n          `?perPage=${state.perPage}&page=${state.page + 1}&status=active`\n        );\n        setState((s) => ({\n          ...response,\n          data: _.uniqBy(\n            [\n              ...s.data,\n              ...response.data.map(({ name, id }) => ({\n                label: name,\n                value: id,\n              })),\n            ],\n            \"value\"\n          ),\n        }));\n        return response;\n      } catch (error) {\n        throw error;\n      }\n    }\n    if (state.page < state.lastPage) getParties();\n  }, [state]);\n\n  const acceptCase = async ({ partyId }, registrationFee) => {\n    try {\n      if (partyId && modal?.case?.id) {\n        setLoader({ state: true, message: \"Accepting Case...\" });\n        const response = await CaseService.acceptCase(modal.case.id, partyId);\n\n        if (response) {\n          enqueueSnackbar(\"Case accepted successfully\", {\n            variant: \"success\",\n          });\n          if (registrationFee && Number(registrationFee)) {\n            setTriggerCount(true);\n            navigate(\"/dashboard/cart\");\n          } else {\n            navigate(\n              \"/dashboard/cases/\" +\n                modal.case.id +\n                `?caseType=${modal?.case?.resolutionKind}`\n            );\n          }\n          MTRef.current.onSearchChange(\"\");\n          setModal(false);\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n      hideAlert();\n    }\n  };\n\n  const acceptPaymentInformationAlert = (registrationFee, res, values) => {\n    showAlert({\n      heading: \"Accept Case Confirmation\",\n      desc: (\n        <>\n          <StyledText>Please note</StyledText>:{\" \"}\n          {registrationFee?.total && Number(registrationFee?.total) ? (\n            <StyledTextSemi>\n              In order to proceed with the case registration, you will need to\n              pay a{\" \"}\n              {modal?.case?.resolutionKind === \"arbitration\"\n                ? \"arbitration\"\n                : \"registration\"}{\" \"}\n              fee of{\" \"}\n              <StyledText>\n                INR {parseFloat(registrationFee?.total).toFixed(2)} (inclusive\n                of GST).{\" \"}\n              </StyledText>\n            </StyledTextSemi>\n          ) : null}{\" \"}\n          {modal?.case?.resolutionKind !== \"arbitration\" && (\n            <>\n              If the case is successfully resolved{\" \"}\n              {modal?.case?.resolutionKind === \"negotiation\"\n                ? \"negotiated\"\n                : modal?.case?.resolutionKind === \"mediation\"\n                ? \"mediated\"\n                : \"arbitrated\"}\n              , you will need to pay a{\" \"}\n              {modal?.case?.resolutionKind === \"negotiation\"\n                ? \"negotiation\"\n                : modal?.case?.resolutionKind === \"mediation\"\n                ? \"mediated\"\n                : \"arbitrated\"}{\" \"}\n              success fee of{\" \"}\n              <StyledText>\n                INR {parseFloat(res?.fee?.total).toFixed(2)} (inclusive of GST)\n              </StyledText>{\" \"}\n              to collect your Settlement Agreement.\n            </>\n          )}\n        </>\n      ),\n      primaryBtnText: \"Accept\",\n      secondaryBtnText: \"Cancel\",\n      clickSecondarybtn: () => hideAlert(),\n      clickPrimaryBtn: () => acceptCase(values, registrationFee?.total),\n      isOpen: true,\n      onDialogClose: () => hideAlert(),\n      descriptionTextStyle: {\n        textAlign: \"left\",\n        fontFamily: theme.fonts.primaryFontSemiBold,\n      },\n    });\n  };\n\n  const adhocPaymentInformationAlert = (registrationFee, values) => {\n    showAlert({\n      heading: \"Accept Case Confirmation\",\n      desc: (\n        <div className=\"adhoc-pricing\">\n          <li>\n            <b>\n              You will be charged a non-refundable license fee of INR{\" \"}\n              {parseFloat(registrationFee?.total).toFixed(2) || 0.0} for using\n              JustAct. The license validity is {registrationFee?.roomValidity}{\" \"}\n              months.\n            </b>\n          </li>\n          <br />\n          <li>\n            <b>\n              You will also need to pay the{\" \"}\n              {modal?.case?.resolutionKind === \"mediation\"\n                ? \"mediator\"\n                : \"arbitrator\"}{\" \"}\n              as per the terms agreed between the parties and the{\" \"}\n              {modal?.case?.resolutionKind === \"mediation\"\n                ? \"mediator\"\n                : \"arbitrator\"}\n              . JustAct will not be responsible for any non-payment in this\n              regard.\n            </b>\n          </li>\n        </div>\n      ),\n      primaryBtnText: \"Accept\",\n      secondaryBtnText: \"Cancel\",\n      clickSecondarybtn: () => hideAlert(),\n      clickPrimaryBtn: () => acceptCase(values, registrationFee?.total),\n      isOpen: true,\n      onDialogClose: () => hideAlert(),\n      descriptionTextStyle: {\n        textAlign: \"center\",\n        fontFamily: theme.fonts.primaryFontSemiBold,\n      },\n    });\n  };\n\n  async function onFormSubmit(values) {\n    if (modal?.case?.respondentStatus === \"accepted\" || modal?.case?.paymentCode) {\n      // already accepted by another respondent or case contains payment code\n      acceptCase(values); // Accept directly when 2 respondent accept the case\n    } else {\n      try {\n        setLoader({ state: true, message: \"Fetching details...\" });\n        const registrationFee =\n          (\n            await CaseService.getCase(\n              modal.case.id,\n              `?estimateFeeKind=registrationFee&partyId=${values?.partyId}`\n            )\n          )?.fee || {};\n\n        if (modal?.case?.subscriptionKind === \"adhoc\") {\n          adhocPaymentInformationAlert(registrationFee, values);\n        } else {\n          const res = await CaseService.getCase(\n            modal?.case?.id,\n            `?estimateFeeKind=successFee&estimateRespondentPartyId=${values?.partyId}`\n          );\n          if (res?.fee?.total) {\n            acceptPaymentInformationAlert(registrationFee, res, values);\n          }\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  return (\n    <Drawer anchor={\"right\"} open={modal.state}>\n      <DrawerContainer role=\"presentation\">\n        <HeadingContainer>\n          <Heading>{labels.select_party}</Heading>\n          <CloseModal\n            onClick={() => setModal({ state: false })}\n            src={require(\"../../../../assets/images/closeModal.svg\")}\n          />\n        </HeadingContainer>\n        {!state.loading && (\n          <AgentFormContainer>\n            <Formik\n              initialValues={{\n                partyId: \"\",\n                agreement: false,\n              }}\n              enableReinitialize\n              validateOnBlur\n              validateOnChange\n              validationSchema={CaseRequestSchema}\n              onSubmit={onFormSubmit}\n            >\n              {({\n                values,\n                handleChange,\n                errors,\n                handleSubmit,\n                touched,\n                setFieldValue,\n                setFieldError,\n                handleBlur,\n              }) => (\n                <Fragment>\n                  {state?.data?.length === 0 && (\n                    <HelperText\n                      style={{ position: \"relative\", bottom: 0, marginTop: 15 }}\n                    >\n                      {labels.no_party_found}\n                    </HelperText>\n                  )}\n                  <Relative>\n                    <FormField\n                      input={{\n                        name: \"partyId\",\n                        label: labels.select_existing,\n                        type: \"select\",\n                      }}\n                      showId\n                      menuItems={state.data}\n                      {...{\n                        touched,\n                        errors,\n                        values,\n                        handleChange,\n                        handleBlur,\n                        setFieldValue,\n                        setFieldError,\n                      }}\n                    />\n                  </Relative>\n                  {modal?.case?.subscriptionKind !== \"adhoc\" ? (\n                    <CheckboxFormControl>\n                      <CheckboxContainer>\n                        <CustomCheckbox\n                          name=\"agreement\"\n                          checked={values.agreement}\n                          onChange={handleChange}\n                        />\n                        <CheckBoxLabel>\n                          I Agree to JustAct being my ADR provider and agree to\n                          JustAct{\" \"}\n                          <HyperLink\n                            onClick={() => {\n                              window.open(\n                                setting?.rulesDocumentUrl ||\n                                  \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/13/1620883614227-f4dbb5a2-4d9c-4a80-8645-b3500816dead/JustAct_Rules.pdf\"\n                              );\n                            }}\n                          >\n                            rules\n                          </HyperLink>{\" \"}\n                          of Negotiation, Mediation, Arbitration, as applicable.\n                        </CheckBoxLabel>\n                      </CheckboxContainer>\n                    </CheckboxFormControl>\n                  ) : null}\n                  <Flex>\n                    <PrimaryOutlinedCTAButton\n                      type=\"button\"\n                      onClick={() => navigate(\"/dashboard/parties/create\")}\n                      style={{\n                        width: \"47%\",\n                      }}\n                    >\n                      {labels.create_new_party}\n                    </PrimaryOutlinedCTAButton>\n                    <PrimaryCTAButton\n                      type=\"submit\"\n                      onClick={handleSubmit}\n                      disabled={\n                        !values.partyId ||\n                        (!values.agreement &&\n                          modal?.case?.subscriptionKind !== \"adhoc\")\n                      }\n                      style={{\n                        width: \"47%\",\n                      }}\n                    >\n                      {labels.select_party_btn}\n                    </PrimaryCTAButton>\n                  </Flex>\n                </Fragment>\n              )}\n            </Formik>\n          </AgentFormContainer>\n        )}\n      </DrawerContainer>\n    </Drawer>\n  );\n}\n\nconst DrawerContainer = styled.div`\n  width: 100vw;\n  @media ${theme?.breakpoints?.sm_up} {\n    width: 555px;\n  }\n`;\n\nconst HeadingContainer = styled.div`\n  padding-top: 35px;\n  padding-bottom: 20px;\n  padding-left: 30px;\n  padding-right: 54px;\n  border-bottom: 1px solid ${COLORS.INPUT_BORDER};\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst CloseModal = styled.img`\n  width: 14px;\n  height: 14px;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst Heading = styled.h3`\n  margin: 0;\n  padding: 0;\n  font-size: 18px;\n  font-weight: 800;\n  font-stretch: normal;\n  font-style: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  color: ${COLORS.COLOR_DARK};\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\n\nconst StyledTextSemi = styled.a`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n`;\n\nconst StyledText = styled.a`\n  font-family: ${theme.fonts.primaryFontExtraBold};\n`;\n\nconst AgentFormContainer = styled.div`\n  padding-top: 26px;\n  padding-left: 38px;\n  padding-right: 38px;\n  padding-bottom: 26px;\n  height: 100%;\n  & form {\n    padding-top: 10px;\n  }\n`;\n\nconst Relative = styled.div`\n  position: relative;\n`;\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: -15px;\n  position: absolute;\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 25px;\n`;\n\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n`;\n\nconst CheckboxFormControl = styled.div`\n  margin-top: 15px;\n  @media ${theme?.breakpoints?.sm_up} {\n    width: 436px;\n  }\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst CheckBoxLabel = styled.span`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 14px;\n  color: ${COLORS.COLOR_DARK};\n  cursor: inherit;\n`;\n\n// export const CheckBoxLabel = styled.span`\n//   font-family: ${theme.fonts.primaryFontRegular};\n//   font-size: 14px;\n//   color: ${COLORS.COLOR_DARK};\n//   cursor: inherit;\n// `;\n\n// export const CheckboxContainer = styled.div`\n//   display: flex;\n//   align-items: center;\n// `;\n\n// export const CheckboxFormControl = styled.div`\n//   margin-top: 15px;\n//   width: 436px;\n"]},"metadata":{},"sourceType":"module"}