{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentHistory/index.js\";\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { PaymentContainer, TableWrapper, HyperLink, StyledAmount, Center, TopCenter } from \"./Styles\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport { getErrorMessage, getFileName, parseTimeStamp } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getPayments(query = \"\") {\n  try {\n    const response = await CaseService.getOrders(query);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst Index = () => {\n  var _state$data, _state$data2;\n\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const placeholderText = \"Search Payment\";\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.order_id\"],\n    tooltip: \"Payment order identifier\",\n    sorting: true,\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TopCenter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, rowData === null || rowData === void 0 ? void 0 : rowData.id)),\n    cellStyle: {\n      paddingLeft: 32\n    }\n  }, {\n    field: \"id\",\n    title: labels[\"table.invoice_id\"],\n    sorting: true,\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      style: {\n        textDecoration: \"none\",\n        cursor: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, rowData === null || rowData === void 0 ? void 0 : rowData.id)\n  }, {\n    field: \"parties.name\",\n    title: labels[\"table.party_name\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$party;\n\n      return rowData === null || rowData === void 0 ? void 0 : (_rowData$party = rowData.party) === null || _rowData$party === void 0 ? void 0 : _rowData$party.name;\n    }\n  }, {\n    field: \"amount\",\n    title: labels[\"table.amount\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$amount;\n\n      return /*#__PURE__*/React.createElement(StyledAmount, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, \"INR \", rowData === null || rowData === void 0 ? void 0 : (_rowData$amount = rowData.amount) === null || _rowData$amount === void 0 ? void 0 : _rowData$amount.toFixed(2));\n    }\n  }, {\n    field: \"created_at\",\n    title: labels[\"table.date\"],\n    tooltip: \"Date of transaction\",\n    sorting: true,\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, moment(parseTimeStamp(rowData === null || rowData === void 0 ? void 0 : rowData.created_at)).format(\"DD/MM/YYYY\"))\n  }, {\n    field: \"invoiceUrl\",\n    title: labels[\"table.invoice\"],\n    tooltip: \"Invoice of the transaction \",\n    sorting: false,\n    render: rowData => {\n      var _getFileName, _getFileName2;\n\n      return (rowData === null || rowData === void 0 ? void 0 : rowData.invoiceUrl) ? /*#__PURE__*/React.createElement(HyperLink, {\n        style: {\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        },\n        onClick: () => window.open(rowData === null || rowData === void 0 ? void 0 : rowData.invoiceUrl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : rowData.invoiceUrl) ? (_getFileName = getFileName(rowData === null || rowData === void 0 ? void 0 : rowData.invoiceUrl)) === null || _getFileName === void 0 ? void 0 : _getFileName.split(\".pdf\")[0] : \"Download\") : /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : rowData.proformaInvoiceUrl) ? /*#__PURE__*/React.createElement(HyperLink, {\n        style: {\n          textDecoration: \"underline\",\n          cursor: \"pointer\"\n        },\n        onClick: () => window.open(rowData === null || rowData === void 0 ? void 0 : rowData.proformaInvoiceUrl),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : rowData.proformaInvoiceUrl) ? (_getFileName2 = getFileName(rowData === null || rowData === void 0 ? void 0 : rowData.proformaInvoiceUrl)) === null || _getFileName2 === void 0 ? void 0 : _getFileName2.split(\".pdf\")[0] : \"Download\") : /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, \"-\"));\n    }\n  }];\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      filter: \"status\"\n    };\n\n    if (query.search) {\n      params.query = query.search;\n    }\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n    const filterSting = queryString.stringify({\n      filterValues: [\"captured\", \"capturedOffline\"]\n    }, {\n      arrayFormat: \"index\"\n    });\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}&${filterSting}`;\n    }\n\n    getPayments(stringParams).then(async result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaymentContainer, {\n    className: \"CreateCase\",\n    style: {\n      overflow: \"hidden\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    hidePagination: state.lastPage === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    pluralTitle: labels.payments,\n    singularTitle: \"\",\n    columns,\n    data,\n    placeholderText,\n    MTRef,\n    //noToolbar\n    hideFilterBar: true,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentHistory/index.js"],"names":["React","Fragment","useState","useRef","PaymentContainer","TableWrapper","HyperLink","StyledAmount","Center","TopCenter","_","queryString","CustomTable","CaseService","moment","getErrorMessage","getFileName","parseTimeStamp","useSnackbar","labels","getPayments","query","response","getOrders","error","Index","state","setState","MTRef","placeholderText","enqueueSnackbar","columns","field","title","tooltip","sorting","render","rowData","id","cellStyle","paddingLeft","textDecoration","cursor","party","name","amount","toFixed","created_at","format","invoiceUrl","window","open","split","proformaInvoiceUrl","data","Promise","resolve","params","page","perPage","filter","search","orderBy","sort","sortDirection","orderDirection","stringParams","filterSting","stringify","filterValues","arrayFormat","isEmpty","then","result","total","catch","variant","lastPage","overflow","length","payments"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\nimport {\n  PaymentContainer,\n  TableWrapper,\n  HyperLink,\n  StyledAmount,\n  Center,\n  TopCenter,\n} from \"./Styles\";\nimport _ from \"lodash\";\nimport queryString from \"query-string\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport {\n  getErrorMessage,\n  getFileName,\n  parseTimeStamp,\n} from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getPayments(query = \"\") {\n  try {\n    const response = await CaseService.getOrders(query);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst Index = () => {\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const placeholderText = \"Search Payment\";\n  const { enqueueSnackbar } = useSnackbar();\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.order_id\"],\n      tooltip: \"Payment order identifier\",\n      sorting: true,\n      render: (rowData) => (\n        <HyperLink>\n          <TopCenter>{rowData?.id}</TopCenter>\n        </HyperLink>\n      ),\n      cellStyle: {\n        paddingLeft: 32,\n      },\n    },\n    {\n      field: \"id\",\n      title: labels[\"table.invoice_id\"],\n      sorting: true,\n      render: (rowData) => (\n        <HyperLink\n          style={{\n            textDecoration: \"none\",\n            cursor: \"inherit\",\n          }}\n        >\n          {rowData?.id}\n        </HyperLink>\n      ),\n    },\n    {\n      field: \"parties.name\",\n      title: labels[\"table.party_name\"],\n      sorting: false,\n      render: (rowData) => rowData?.party?.name,\n    },\n    {\n      field: \"amount\",\n      title: labels[\"table.amount\"],\n      sorting: false,\n      render: (rowData) => (\n        <StyledAmount>INR {rowData?.amount?.toFixed(2)}</StyledAmount>\n      ),\n    },\n    {\n      field: \"created_at\",\n      title: labels[\"table.date\"],\n      tooltip: \"Date of transaction\",\n      sorting: true,\n      render: (rowData) => (\n        <>{moment(parseTimeStamp(rowData?.created_at)).format(\"DD/MM/YYYY\")}</>\n      ),\n    },\n    {\n      field: \"invoiceUrl\",\n      title: labels[\"table.invoice\"],\n      tooltip: \"Invoice of the transaction \",\n      sorting: false,\n\n      render: (rowData) =>\n        rowData?.invoiceUrl ? (\n          <HyperLink\n            style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\n            onClick={() => window.open(rowData?.invoiceUrl)}\n          >\n            {rowData?.invoiceUrl\n              ? getFileName(rowData?.invoiceUrl)?.split(\".pdf\")[0]\n              : \"Download\"}\n          </HyperLink>\n        ) : (\n          <>\n            {rowData?.proformaInvoiceUrl ? (\n              <HyperLink\n                style={{ textDecoration: \"underline\", cursor: \"pointer\" }}\n                onClick={() => window.open(rowData?.proformaInvoiceUrl)}\n              >\n                {rowData?.proformaInvoiceUrl\n                  ? getFileName(rowData?.proformaInvoiceUrl)?.split(\".pdf\")[0]\n                  : \"Download\"}\n              </HyperLink>\n            ) : (\n              <Center>-</Center>\n            )}\n          </>\n        ),\n    },\n  ];\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        filter: \"status\",\n      };\n      if (query.search) {\n        params.query = query.search;\n      }\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n      const filterSting = queryString.stringify(\n        { filterValues: [\"captured\", \"capturedOffline\"] },\n        { arrayFormat: \"index\" }\n      );\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}&${filterSting}`;\n      }\n      getPayments(stringParams)\n        .then(async (result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  return (\n    <Fragment>\n      <PaymentContainer className=\"CreateCase\" style={{ overflow: \"hidden\" }}>\n        <TableWrapper>\n          <CustomTable\n            hidePagination={state.lastPage === 1}\n            pageSize={state?.data?.length ? state?.data?.length : 10}\n            pluralTitle={labels.payments}\n            singularTitle=\"\"\n            {...{\n              columns,\n              data,\n              placeholderText,\n              MTRef,\n            }}\n            //noToolbar\n            hideFilterBar\n            state={state}\n          />\n        </TableWrapper>\n      </PaymentContainer>\n    </Fragment>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}