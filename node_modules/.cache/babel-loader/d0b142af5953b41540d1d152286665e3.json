{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateParty/CreateCaseParty.js\";\nimport React, { Fragment, useState } from \"react\";\nimport ActionBar from \"../../common/ActionBar\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport { Container, Heading, Subheading, FormContainer, FormControl, StyledLabel, Row, SuperContainer } from \"./styles\";\nimport { Formik } from \"formik\";\nimport { CustomRadioGroup, CustomFileUpload } from \"../../common/FormInputs\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { PrimaryOutlinedCTAButton, PrimaryCTAButton } from \"../../common/Buttons\";\nimport AddressFormFields from \"./common/AddressFormFields\";\nimport BillingAddressFormFields from \"./common/BillingAddressFormFields\";\nimport { createPartyValidationSchema } from \"../../../helpers/validationSchema\";\nimport { getFileName } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect } from \"react\";\nimport { draftParty, createCaseParty, getPartyOrDraft } from \"./API\";\nimport AWSService from \"../../../services/AWSService\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport useUser from \"../../../hooks/useUser\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\nconst typeInputs = [{\n  label: labels[\"party.self\"],\n  value: \"individual\"\n}, {\n  label: labels[\"party.organisation\"],\n  value: \"organization\"\n}, {\n  label: labels[\"party.others\"],\n  value: \"others\"\n}];\nconst documentRadio = [{\n  label: labels[\"party.pan\"],\n  value: \"pan\"\n}, {\n  label: labels[\"party.aadhaar\"],\n  value: \"aadhaar\"\n}, {\n  label: labels[\"party.voter\"],\n  value: \"voter\"\n}, {\n  label: labels[\"party.passport\"],\n  value: \"passport\"\n}, {\n  label: labels[\"party.cin\"],\n  value: \"cin\"\n}];\nconst validFormat = /(?:image|pdf)/;\nexport default function CreateParty({\n  draftId,\n  resolutionKind\n}) {\n  const breadcrumbs = [_.startCase(labels.my_parties), labels.create_party];\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [draft, setDraft] = useState({});\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    userObject\n  } = useUser();\n  const [data, setData] = useState(\"\");\n\n  const filterRadio = (doc, values) => {\n    const isCin = values.kind === \"organization\";\n\n    if (isCin) {\n      if (doc.value === \"pan\" || doc.value === \"cin\") {\n        return true;\n      }\n    } else if (doc.value !== \"cin\") {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    if (draftId) {\n      getPartyOrDraft(draftId, setDraft, enqueueSnackbar, setLoader);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [draftId]);\n\n  const onBreadcrumbClick = selected => {\n    switch (_.snakeCase(selected)) {\n      case labels.my_parties:\n        navigate(\"/dashboard/parties\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        const errorMessage = \"Invalid File Type\";\n        if (!validFormat.test(file === null || file === void 0 ? void 0 : file.type)) throw errorMessage;\n        setLoader({\n          state: true,\n          message: `Uploading file ${file.name} ...`\n        });\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Upload was successful\", {\n            variant: \"success\"\n          });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        setFieldError(field, \"Could not upload this file\");\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  function prefillValues(e, setFieldValue) {\n    setFieldValue(\"kind\", e.target.value);\n    setFieldValue(\"document_kind\", \"pan\");\n\n    if (e.target.value === \"individual\" && !draftId) {\n      setFieldValue(\"name\", userObject.name || \"\");\n      setFieldValue(\"document_house_no\", userObject.houseNumber || \"\");\n      setFieldValue(\"document_landmark\", userObject.landmark || \"\");\n      setFieldValue(\"document_locality\", userObject.locality || \"\");\n      setFieldValue(\"document_state\", userObject.state || \"\");\n      setFieldValue(\"document_city\", userObject.city || \"\");\n      setFieldValue(\"document_pin\", userObject.pin || \"\");\n    } else if (!draftId) {\n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"document_house_no\", \"\");\n      setFieldValue(\"document_landmark\", \"\");\n      setFieldValue(\"document_locality\", \"\");\n      setFieldValue(\"document_state\", \"\");\n      setFieldValue(\"document_city\", \"\");\n      setFieldValue(\"document_pin\", \"\");\n    }\n  }\n\n  function billingprefillValues(e, setFieldValue, values) {\n    setFieldValue(\"billingAddressType\", e.target.value);\n\n    if (e.target.value === \"same\" && !draftId) {\n      setFieldValue(\"document_billing_house_no\", (data === null || data === void 0 ? void 0 : data.document_house_no) || \"\");\n      setFieldValue(\"document_billing_landmark\", (data === null || data === void 0 ? void 0 : data.document_landmark) || \"\");\n      setFieldValue(\"document_billing_locality\", (data === null || data === void 0 ? void 0 : data.document_locality) || \"\");\n      setFieldValue(\"document_billing_state\", (data === null || data === void 0 ? void 0 : data.document_state) || \"\");\n      setFieldValue(\"document_billing_city\", (data === null || data === void 0 ? void 0 : data.document_city) || \"\");\n      setFieldValue(\"document_billing_pin\", (data === null || data === void 0 ? void 0 : data.document_pin) || \"\");\n    } else if (!draftId) {\n      setFieldValue(\"document_billing_house_no\", \"\");\n      setFieldValue(\"document_billing_landmark\", \"\");\n      setFieldValue(\"document_billing_locality\", \"\");\n      setFieldValue(\"document_billing_state\", \"\");\n      setFieldValue(\"document_billing_city\", \"\");\n      setFieldValue(\"document_billing_pin\", \"\");\n    } else if (e.target.value === \"same\" && draftId) {\n      setFieldValue(\"document_billing_house_no\", (data === null || data === void 0 ? void 0 : data.document_house_no) || \"\");\n      setFieldValue(\"document_billing_landmark\", (data === null || data === void 0 ? void 0 : data.document_landmark) || \"\");\n      setFieldValue(\"document_billing_locality\", (data === null || data === void 0 ? void 0 : data.document_locality) || \"\");\n      setFieldValue(\"document_billing_state\", (data === null || data === void 0 ? void 0 : data.document_state) || \"\");\n      setFieldValue(\"document_billing_city\", (data === null || data === void 0 ? void 0 : data.document_city) || \"\");\n      setFieldValue(\"document_billing_pin\", (data === null || data === void 0 ? void 0 : data.document_pin) || \"\");\n    } else if (draftId) {\n      setFieldValue(\"document_billing_house_no\", \"\");\n      setFieldValue(\"document_billing_landmark\", \"\");\n      setFieldValue(\"document_billing_locality\", \"\");\n      setFieldValue(\"document_billing_state\", \"\");\n      setFieldValue(\"document_billing_city\", \"\");\n      setFieldValue(\"document_billing_pin\", \"\");\n    }\n  }\n\n  function onFormSubmit(values, isDraft = false) {\n    const {\n      name,\n      kind,\n      billingAddressType,\n      document_kind,\n      doc_number,\n      document_uri,\n      document_house_no,\n      document_locality,\n      document_city,\n      document_state,\n      document_pin,\n      document_landmark,\n      gstNumber,\n      gstCertUrl,\n      authorizationLetterUrl,\n      document_billing_house_no,\n      document_billing_locality,\n      document_billing_city,\n      document_billing_state,\n      document_billing_pin,\n      document_billing_landmark\n    } = values;\n    let payload = {\n      name,\n      kind,\n      billingAddressType,\n      documentKind: document_kind === \"aadhaar\" ? \"aadhar\" : document_kind,\n      houseNumber: document_house_no,\n      locality: document_locality,\n      city: document_city,\n      state: document_state,\n      pin: document_pin,\n      landmark: document_landmark,\n      documentNumber: doc_number,\n      documentUrl: document_uri,\n      gstNumber: gstNumber,\n      gstCertUrl: gstCertUrl,\n      authorizationLetterUrl: authorizationLetterUrl,\n      billingHouseNumber: document_billing_house_no,\n      billingLocality: document_billing_locality,\n      billingCity: document_billing_city,\n      billingState: document_billing_state,\n      billingPin: document_billing_pin,\n      billingLandmark: document_billing_landmark\n    };\n\n    if (isDraft && typeof isDraft === \"boolean\") {\n      draftParty(payload, enqueueSnackbar, draftId, setLoader);\n    } else {\n      createCaseParty(payload, enqueueSnackbar, draftId, resolutionKind, setLoader);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SuperContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs,\n    onBreadcrumbClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, \" \", draftId ? \"Edit Draft\" : labels.create_party), /*#__PURE__*/React.createElement(Subheading, {\n    dangerouslySetInnerHTML: {\n      __html: labels[\"party.subheading\"]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      kind: draft.kind || \"individual\",\n      party_for: \"myself\",\n      name: draft.name || userObject.name || \"\",\n      document_kind: draft.documentKind || \"pan\",\n      billingAddressType: draft.billingAddressType || \"new\",\n      doc_number: draft.documentNumber,\n      document_house_no: draft.houseNumber || userObject.houseNumber || \"\",\n      document_locality: draft.locality || userObject.locality || \"\",\n      document_city: draft.city || userObject.city || \"\",\n      document_state: draft.state ? draft.state : userObject.state ? userObject.state : \"AN\",\n      document_pin: draft.pin || userObject.pin || \"\",\n      document_landmark: draft.landmark || userObject.landmark || \"\",\n      document_uri: draft.documentUrl,\n      gstNumber: draft.gstNumber || \"\",\n      gstCertUrl: draft.gstCertUrl || \"\",\n      authorizationLetterUrl: draft.authorizationLetterUrl || \"\",\n      document_billing_house_no: draft.billingHouseNumber || \"\",\n      document_billing_locality: draft.billingLocality || \"\",\n      document_billing_city: draft.billingCity || \"\",\n      document_billing_state: draft.billingState || \"\",\n      document_billing_pin: draft.billingPin || \"\",\n      document_billing_landmark: draft.billingLandmark || \"\"\n    },\n    enableReinitialize: true,\n    validationSchema: createPartyValidationSchema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    onSubmit: onFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    setFieldValue,\n    setFieldError,\n    resetForm,\n    handleBlur,\n    setFieldTouched\n  }) => /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadioGroup, {\n    name: \"kind\",\n    radioInputs: typeInputs,\n    handleBlur: handleBlur,\n    handleChange: e => {\n      resetForm();\n      setFieldValue(\"document_uri\", \"\");\n      setFieldValue(\"doc_number\", \"\");\n      prefillValues(e, setFieldValue);\n    },\n    values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    tooltip: \"Name of the Party\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, labels[\"party.name_label\"], \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 19\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: \"name\",\n      label: null\n    },\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      fontSize: 12,\n      color: COLORS.COLOR_DARK,\n      fontFamily: theme.fonts.primaryFontBold,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 15\n    }\n  }, labels[\"user.address\"]), /*#__PURE__*/React.createElement(AddressFormFields, {\n    type: \"document\",\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    setFieldValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      fontSize: 12,\n      color: COLORS.COLOR_DARK,\n      fontFamily: theme.fonts.primaryFontBold,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 15\n    }\n  }, labels[\"user.billing_address\"]), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CustomRadioGroup, {\n    radioInputs: [{\n      label: \"Billing address is same as residential address\",\n      value: \"same\"\n    }, {\n      label: \"Billing address is different from residential address\",\n      value: \"new\"\n    }],\n    name: \"billingAddressType\",\n    handleBlur: handleBlur,\n    handleChange: e => {\n      billingprefillValues(e, setFieldValue);\n    },\n    values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(BillingAddressFormFields, {\n    type: \"document\",\n    values,\n    errors,\n    touched,\n    handleChange,\n    setFieldValue,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 15\n    }\n  }, setData(values)), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"radio-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    spacing: true,\n    tooltip: \"Type of document\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 17\n    }\n  }, labels[\"party.typeOfDocument\"]), /*#__PURE__*/React.createElement(CustomRadioGroup, {\n    radioInputs: documentRadio.filter(doc => filterRadio(doc, values)),\n    handleChange: e => {\n      setFieldTouched(\"doc_number\", false);\n      setFieldValue(\"document_uri\", \"\");\n      setFieldValue(\"doc_number\", \"\");\n      setFieldValue(\"document_kind\", e.target.value);\n    },\n    name: \"document_kind\",\n    values,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"disabledArrows\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `doc_number`,\n      label: `${(values === null || values === void 0 ? void 0 : values.document_kind) === \"voter\" ? labels[\"party.voter\"] : (values === null || values === void 0 ? void 0 : values.document_kind) === \"pan\" || (values === null || values === void 0 ? void 0 : values.document_kind) === \"cin\" ? _.upperCase(values === null || values === void 0 ? void 0 : values.document_kind) : _.capitalize(values === null || values === void 0 ? void 0 : values.document_kind)}`,\n      required: true\n    },\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    spacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 17\n    }\n  }, labels.upload, \" \", (values === null || values === void 0 ? void 0 : values.document_kind) === \"voter\" ? labels[\"party.voter\"] : (values === null || values === void 0 ? void 0 : values.document_kind) === \"pan\" || (values === null || values === void 0 ? void 0 : values.document_kind) === \"cin\" ? _.upperCase(values === null || values === void 0 ? void 0 : values.document_kind) : _.capitalize(values === null || values === void 0 ? void 0 : values.document_kind), \" \", labels.pdf_image_only, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 19\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    style: {\n      width: \"100%\"\n    },\n    key: `${values.document_kind} ${values.kind}`,\n    error: touched.document_uri && errors.document_uri,\n    file: {\n      name: getFileName(values === null || values === void 0 ? void 0 : values.document_uri)\n    },\n    setFile: f => s3Upload(f, \"document_uri\", setFieldValue, setFieldError),\n    accept: \".pdf, image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    spacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 17\n    }\n  }, labels.upload, \" \", labels[\"party.authorisation_letter\"], \" \", \" (optional)\"), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    style: {\n      width: \"100%\"\n    },\n    key: `${values.authorizationLetterUrl}`,\n    file: {\n      name: getFileName(values === null || values === void 0 ? void 0 : values.authorizationLetterUrl)\n    },\n    setFile: f => s3Upload(f, \"authorizationLetterUrl\", setFieldValue, setFieldError),\n    accept: \".pdf, image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    className: \"disabledArrows\",\n    style: {\n      marginTop: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"text\",\n      name: `gstNumber`,\n      label: `${labels[\"party.gstNumber\"]} (Mandatory, if you need your GST number to be mentioned in the invoice)`\n    },\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 17\n    }\n  })), values.gstNumber.length ? /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    spacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 19\n    }\n  }, labels.upload, \" \", labels[\"party.gstcertification\"], \" \", labels.pdf_image_only, \" \", \" (Mandatory)\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 21\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    style: {\n      width: \"100%\"\n    },\n    key: `${values.gstCertUrl}`,\n    error: touched.gstCertUrl && errors.gstCertUrl,\n    file: {\n      name: getFileName(values === null || values === void 0 ? void 0 : values.gstCertUrl)\n    },\n    setFile: f => s3Upload(f, \"gstCertUrl\", setFieldValue, setFieldError),\n    accept: \".pdf, image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    spacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 19\n    }\n  }, labels.upload, \" \", labels[\"party.gstcertification\"], \" \", labels.pdf_image_only, \" \", \" (optional)\"), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    style: {\n      width: \"100%\"\n    },\n    key: `${values.gstCertUrl}`,\n    file: {\n      name: getFileName(values === null || values === void 0 ? void 0 : values.gstCertUrl)\n    },\n    setFile: f => s3Upload(f, \"gstCertUrl\", setFieldValue, setFieldError),\n    accept: \".pdf, image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryOutlinedCTAButton, {\n    type: \"button\",\n    onClick: e => {\n      e.preventDefault();\n      onFormSubmit(values, true);\n    },\n    style: {\n      width: \"47%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 19\n    }\n  }, labels[\"buttons.save_draft\"]), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    onClick: handleSubmit,\n    style: {\n      width: \"47%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 19\n    }\n  }, labels.proceed)))))));\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateParty/CreateCaseParty.js"],"names":["React","Fragment","useState","ActionBar","_","navigate","Container","Heading","Subheading","FormContainer","FormControl","StyledLabel","Row","SuperContainer","Formik","CustomRadioGroup","CustomFileUpload","FormField","PrimaryOutlinedCTAButton","PrimaryCTAButton","AddressFormFields","BillingAddressFormFields","createPartyValidationSchema","getFileName","useSnackbar","useEffect","draftParty","createCaseParty","getPartyOrDraft","AWSService","useLoader","COLORS","theme","useUser","getErrorMessage","labels","typeInputs","label","value","documentRadio","validFormat","CreateParty","draftId","resolutionKind","breadcrumbs","startCase","my_parties","create_party","enqueueSnackbar","draft","setDraft","setLoader","userObject","data","setData","filterRadio","doc","values","isCin","kind","onBreadcrumbClick","selected","snakeCase","s3Upload","file","field","setFieldValue","setFieldError","errorMessage","test","type","state","message","name","payload","key","s3Response","getS3URL","url","res","uploadToS3","variant","error","prefillValues","e","target","houseNumber","landmark","locality","city","pin","billingprefillValues","document_house_no","document_landmark","document_locality","document_state","document_city","document_pin","onFormSubmit","isDraft","billingAddressType","document_kind","doc_number","document_uri","gstNumber","gstCertUrl","authorizationLetterUrl","document_billing_house_no","document_billing_locality","document_billing_city","document_billing_state","document_billing_pin","document_billing_landmark","documentKind","documentNumber","documentUrl","billingHouseNumber","billingLocality","billingCity","billingState","billingPin","billingLandmark","__html","party_for","handleChange","errors","handleSubmit","touched","resetForm","handleBlur","setFieldTouched","marginTop","fontSize","color","COLOR_DARK","fontFamily","fonts","primaryFontBold","marginBottom","filter","upperCase","capitalize","required","upload","pdf_image_only","width","f","length","preventDefault","proceed"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport ActionBar from \"../../common/ActionBar\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport {\n  Container,\n  Heading,\n  Subheading,\n  FormContainer,\n  FormControl,\n  StyledLabel,\n  Row,\n  SuperContainer\n} from \"./styles\";\nimport { Formik } from \"formik\";\nimport { CustomRadioGroup, CustomFileUpload } from \"../../common/FormInputs\";\nimport FormField from \"../../common/FormField/FormField\";\nimport {\n  PrimaryOutlinedCTAButton,\n  PrimaryCTAButton\n} from \"../../common/Buttons\";\nimport AddressFormFields from \"./common/AddressFormFields\";\nimport BillingAddressFormFields from \"./common/BillingAddressFormFields\";\nimport { createPartyValidationSchema } from \"../../../helpers/validationSchema\";\nimport { getFileName } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport { useEffect } from \"react\";\nimport { draftParty, createCaseParty, getPartyOrDraft } from \"./API\";\nimport AWSService from \"../../../services/AWSService\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport useUser from \"../../../hooks/useUser\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport labels from \"../../../helpers/labels.json\";\n\nconst typeInputs = [\n  { label: labels[\"party.self\"], value: \"individual\" },\n  { label: labels[\"party.organisation\"], value: \"organization\" },\n  { label: labels[\"party.others\"], value: \"others\" }\n];\n\nconst documentRadio = [\n  { label: labels[\"party.pan\"], value: \"pan\" },\n  { label: labels[\"party.aadhaar\"], value: \"aadhaar\" },\n  { label: labels[\"party.voter\"], value: \"voter\" },\n  { label: labels[\"party.passport\"], value: \"passport\" },\n  { label: labels[\"party.cin\"], value: \"cin\" }\n];\n\nconst validFormat = /(?:image|pdf)/;\n\nexport default function CreateParty({ draftId, resolutionKind }) {\n  const breadcrumbs = [_.startCase(labels.my_parties), labels.create_party];\n  const { enqueueSnackbar } = useSnackbar();\n  const [draft, setDraft] = useState({});\n  const { setLoader } = useLoader();\n  const { userObject } = useUser();\n  const [data, setData] = useState(\"\");\n\n  const filterRadio = (doc, values) => {\n    const isCin = values.kind === \"organization\";\n    if (isCin) {\n      if (doc.value === \"pan\" || doc.value === \"cin\") {\n        return true;\n      }\n    } else if (doc.value !== \"cin\") {\n      return true;\n    }\n  };\n\n  useEffect(() => {\n    if (draftId) {\n      getPartyOrDraft(draftId, setDraft, enqueueSnackbar, setLoader);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [draftId]);\n\n  const onBreadcrumbClick = (selected) => {\n    switch (_.snakeCase(selected)) {\n      case labels.my_parties:\n        navigate(\"/dashboard/parties\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        const errorMessage = \"Invalid File Type\";\n        if (!validFormat.test(file?.type)) throw errorMessage;\n        setLoader({ state: true, message: `Uploading file ${file.name} ...` });\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Upload was successful\", { variant: \"success\" });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        setFieldError(field, \"Could not upload this file\");\n        enqueueSnackbar(message, { variant: \"error\" });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  function prefillValues(e, setFieldValue) {\n    setFieldValue(\"kind\", e.target.value);\n    setFieldValue(\"document_kind\", \"pan\");\n    if (e.target.value === \"individual\" && !draftId) {\n      setFieldValue(\"name\", userObject.name || \"\");\n      setFieldValue(\"document_house_no\", userObject.houseNumber || \"\");\n      setFieldValue(\"document_landmark\", userObject.landmark || \"\");\n      setFieldValue(\"document_locality\", userObject.locality || \"\");\n      setFieldValue(\"document_state\", userObject.state || \"\");\n      setFieldValue(\"document_city\", userObject.city || \"\");\n      setFieldValue(\"document_pin\", userObject.pin || \"\");\n    } else if (!draftId) {\n      setFieldValue(\"name\", \"\");\n      setFieldValue(\"document_house_no\", \"\");\n      setFieldValue(\"document_landmark\", \"\");\n      setFieldValue(\"document_locality\", \"\");\n      setFieldValue(\"document_state\", \"\");\n      setFieldValue(\"document_city\", \"\");\n      setFieldValue(\"document_pin\", \"\");\n    }\n  }\n\n  function billingprefillValues(e, setFieldValue, values) {\n    setFieldValue(\"billingAddressType\", e.target.value);\n    if (e.target.value === \"same\" && !draftId) {\n      setFieldValue(\"document_billing_house_no\", data?.document_house_no || \"\");\n      setFieldValue(\"document_billing_landmark\", data?.document_landmark || \"\");\n      setFieldValue(\"document_billing_locality\", data?.document_locality || \"\");\n      setFieldValue(\"document_billing_state\", data?.document_state || \"\");\n      setFieldValue(\"document_billing_city\", data?.document_city || \"\");\n      setFieldValue(\"document_billing_pin\", data?.document_pin || \"\");\n    } else if (!draftId) {\n      setFieldValue(\"document_billing_house_no\", \"\");\n      setFieldValue(\"document_billing_landmark\", \"\");\n      setFieldValue(\"document_billing_locality\", \"\");\n      setFieldValue(\"document_billing_state\", \"\");\n      setFieldValue(\"document_billing_city\", \"\");\n      setFieldValue(\"document_billing_pin\", \"\");\n    } else if (e.target.value === \"same\" && draftId) {\n      setFieldValue(\"document_billing_house_no\", data?.document_house_no || \"\");\n      setFieldValue(\"document_billing_landmark\", data?.document_landmark || \"\");\n      setFieldValue(\"document_billing_locality\", data?.document_locality || \"\");\n      setFieldValue(\"document_billing_state\", data?.document_state || \"\");\n      setFieldValue(\"document_billing_city\", data?.document_city || \"\");\n      setFieldValue(\"document_billing_pin\", data?.document_pin || \"\");\n    } else if (draftId) {\n      setFieldValue(\"document_billing_house_no\", \"\");\n      setFieldValue(\"document_billing_landmark\", \"\");\n      setFieldValue(\"document_billing_locality\", \"\");\n      setFieldValue(\"document_billing_state\", \"\");\n      setFieldValue(\"document_billing_city\", \"\");\n      setFieldValue(\"document_billing_pin\", \"\");\n    }\n  }\n\n  function onFormSubmit(values, isDraft = false) {\n    const {\n      name,\n      kind,\n      billingAddressType,\n      document_kind,\n      doc_number,\n      document_uri,\n      document_house_no,\n      document_locality,\n      document_city,\n      document_state,\n      document_pin,\n      document_landmark,\n      gstNumber,\n      gstCertUrl,\n      authorizationLetterUrl,\n      document_billing_house_no,\n      document_billing_locality,\n      document_billing_city,\n      document_billing_state,\n      document_billing_pin,\n      document_billing_landmark\n    } = values;\n\n    let payload = {\n      name,\n      kind,\n      billingAddressType,\n      documentKind: document_kind === \"aadhaar\" ? \"aadhar\" : document_kind,\n      houseNumber: document_house_no,\n      locality: document_locality,\n      city: document_city,\n      state: document_state,\n      pin: document_pin,\n      landmark: document_landmark,\n      documentNumber: doc_number,\n      documentUrl: document_uri,\n      gstNumber: gstNumber,\n      gstCertUrl: gstCertUrl,\n      authorizationLetterUrl: authorizationLetterUrl,\n      billingHouseNumber: document_billing_house_no,\n      billingLocality: document_billing_locality,\n      billingCity: document_billing_city,\n      billingState: document_billing_state,\n      billingPin: document_billing_pin,\n      billingLandmark: document_billing_landmark\n    };\n    if (isDraft && typeof isDraft === \"boolean\") {\n      draftParty(payload, enqueueSnackbar, draftId, setLoader);\n    } else {\n      createCaseParty(payload, enqueueSnackbar, draftId, resolutionKind, setLoader);\n    }\n  }\n\n  return (\n    <SuperContainer>\n      <ActionBar {...{ breadcrumbs, onBreadcrumbClick }} />\n      <Container>\n        <Heading> {draftId ? \"Edit Draft\" : labels.create_party}</Heading>\n        <Subheading\n          dangerouslySetInnerHTML={{ __html: labels[\"party.subheading\"] }}\n        />\n        <Formik\n          initialValues={{\n            kind: draft.kind || \"individual\",\n            party_for: \"myself\",\n            name: draft.name || userObject.name || \"\",\n            document_kind: draft.documentKind || \"pan\",\n            billingAddressType: draft.billingAddressType || \"new\",\n            doc_number: draft.documentNumber,\n            document_house_no:\n              draft.houseNumber || userObject.houseNumber || \"\",\n            document_locality: draft.locality || userObject.locality || \"\",\n            document_city: draft.city || userObject.city || \"\",\n            document_state: draft.state\n              ? draft.state\n              : userObject.state\n              ? userObject.state\n              : \"AN\",\n            document_pin: draft.pin || userObject.pin || \"\",\n            document_landmark: draft.landmark || userObject.landmark || \"\",\n            document_uri: draft.documentUrl,\n            gstNumber: draft.gstNumber || \"\",\n            gstCertUrl: draft.gstCertUrl || \"\",\n            authorizationLetterUrl: draft.authorizationLetterUrl || \"\",\n            document_billing_house_no: draft.billingHouseNumber || \"\",\n            document_billing_locality: draft.billingLocality || \"\",\n            document_billing_city: draft.billingCity || \"\",\n            document_billing_state: draft.billingState || \"\",\n            document_billing_pin: draft.billingPin || \"\",\n            document_billing_landmark: draft.billingLandmark || \"\"\n          }}\n          enableReinitialize\n          validationSchema={createPartyValidationSchema}\n          validateOnBlur\n          validateOnChange\n          onSubmit={onFormSubmit}\n        >\n          {({\n            values,\n            handleChange,\n            errors,\n            handleSubmit,\n            touched,\n            setFieldValue,\n            setFieldError,\n            resetForm,\n            handleBlur,\n            setFieldTouched\n          }) => (\n            <FormContainer onSubmit={handleSubmit}>\n              <FormControl>\n                <CustomRadioGroup\n                  name={\"kind\"}\n                  radioInputs={typeInputs}\n                  handleBlur={handleBlur}\n                  handleChange={(e) => {\n                    resetForm();\n                    setFieldValue(\"document_uri\", \"\");\n                    setFieldValue(\"doc_number\", \"\");\n                    prefillValues(e, setFieldValue);\n                  }}\n                  {...{ values }}\n                />\n              </FormControl>\n              <FormControl>\n                <StyledLabel tooltip=\"Name of the Party\">\n                  {labels[\"party.name_label\"]}{\" \"}\n                  <span className=\"required-star\"> *</span>\n                </StyledLabel>\n                <FormField\n                  white\n                  input={{ type: \"text\", name: \"name\", label: null }}\n                  {...{\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur\n                  }}\n                />\n              </FormControl>\n              <div\n                style={{\n                  marginTop: 10,\n                  fontSize: 12,\n                  color: COLORS.COLOR_DARK,\n                  fontFamily: theme.fonts.primaryFontBold,\n                  marginBottom: 10\n                }}\n              >\n                {labels[\"user.address\"]}\n              </div>\n              <AddressFormFields\n                type={\"document\"}\n                {...{\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleBlur,\n                  setFieldValue\n                }}\n              />\n              <div\n                style={{\n                  marginTop: 10,\n                  fontSize: 12,\n                  color: COLORS.COLOR_DARK,\n                  fontFamily: theme.fonts.primaryFontBold,\n                  marginBottom: 10\n                }}\n              >\n                {labels[\"user.billing_address\"]}\n              </div>\n              <FormControl>\n                <CustomRadioGroup\n                  radioInputs={[\n                    {\n                      label: \"Billing address is same as residential address\",\n                      value: \"same\"\n                    },\n                    {\n                      label:\n                        \"Billing address is different from residential address\",\n                      value: \"new\"\n                    }\n                  ]}\n                  name={\"billingAddressType\"}\n                  handleBlur={handleBlur}\n                  handleChange={(e) => {\n                    billingprefillValues(e, setFieldValue);\n                  }}\n                  {...{ values }}\n                />\n                <BillingAddressFormFields\n                  type={\"document\"}\n                  {...{\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    setFieldValue,\n                    handleBlur\n                  }}\n                />\n              </FormControl>\n              <div>{setData(values)}</div>\n              <FormControl className=\"radio-group\">\n                <StyledLabel spacing tooltip=\"Type of document\">\n                  {labels[\"party.typeOfDocument\"]}\n                </StyledLabel>\n                <CustomRadioGroup\n                  radioInputs={documentRadio.filter((doc) =>\n                    filterRadio(doc, values)\n                  )}\n                  handleChange={(e) => {\n                    setFieldTouched(\"doc_number\", false);\n                    setFieldValue(\"document_uri\", \"\");\n                    setFieldValue(\"doc_number\", \"\");\n                    setFieldValue(\"document_kind\", e.target.value);\n                  }}\n                  name={\"document_kind\"}\n                  {...{ values }}\n                />\n              </FormControl>\n\n              <FormControl className=\"disabledArrows\" style={{ marginTop: 10 }}>\n                <FormField\n                  white\n                  input={{\n                    type: \"text\",\n                    name: `doc_number`,\n                    label: `${\n                      values?.document_kind === \"voter\"\n                        ? labels[\"party.voter\"]\n                        : values?.document_kind === \"pan\" ||\n                          values?.document_kind === \"cin\"\n                        ? _.upperCase(values?.document_kind)\n                        : _.capitalize(values?.document_kind)\n                    }`,\n                    required: true\n                  }}\n                  {...{\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur\n                  }}\n                />\n              </FormControl>\n\n              <FormControl>\n                <StyledLabel spacing>\n                  {labels.upload}{\" \"}\n                  {values?.document_kind === \"voter\"\n                    ? labels[\"party.voter\"]\n                    : values?.document_kind === \"pan\" ||\n                      values?.document_kind === \"cin\"\n                    ? _.upperCase(values?.document_kind)\n                    : _.capitalize(values?.document_kind)}{\" \"}\n                  {labels.pdf_image_only}\n                  <span className=\"required-star\"> *</span>\n                </StyledLabel>\n                <CustomFileUpload\n                  style={{ width: \"100%\" }}\n                  key={`${values.document_kind} ${values.kind}`}\n                  error={touched.document_uri && errors.document_uri}\n                  file={{ name: getFileName(values?.document_uri) }}\n                  setFile={(f) =>\n                    s3Upload(f, \"document_uri\", setFieldValue, setFieldError)\n                  }\n                  accept=\".pdf, image/*\"\n                />\n              </FormControl>\n              <FormControl>\n                <StyledLabel spacing>\n                  {labels.upload} {labels[\"party.authorisation_letter\"]}{\" \"}\n                  {\" (optional)\"}\n                </StyledLabel>\n                <CustomFileUpload\n                  style={{ width: \"100%\" }}\n                  key={`${values.authorizationLetterUrl}`}\n                  file={{ name: getFileName(values?.authorizationLetterUrl) }}\n                  setFile={(f) =>\n                    s3Upload(\n                      f,\n                      \"authorizationLetterUrl\",\n                      setFieldValue,\n                      setFieldError\n                    )\n                  }\n                  accept=\".pdf, image/*\"\n                />\n              </FormControl>\n              <FormControl className=\"disabledArrows\" style={{ marginTop: 10 }}>\n                <FormField\n                  white\n                  input={{\n                    type: \"text\",\n                    name: `gstNumber`,\n                    label: `${labels[\"party.gstNumber\"]} (Mandatory, if you need your GST number to be mentioned in the invoice)`\n                  }}\n                  {...{\n                    values,\n                    errors,\n                    touched,\n                    handleChange,\n                    handleBlur\n                  }}\n                />\n              </FormControl>\n              {values.gstNumber.length ? (\n                <FormControl>\n                  <StyledLabel spacing>\n                    {labels.upload} {labels[\"party.gstcertification\"]}{\" \"}\n                    {labels.pdf_image_only} {\" (Mandatory)\"}\n                    <span className=\"required-star\"> *</span>\n                  </StyledLabel>\n                  <CustomFileUpload\n                    style={{ width: \"100%\" }}\n                    key={`${values.gstCertUrl}`}\n                    error={touched.gstCertUrl && errors.gstCertUrl}\n                    file={{ name: getFileName(values?.gstCertUrl) }}\n                    setFile={(f) =>\n                      s3Upload(f, \"gstCertUrl\", setFieldValue, setFieldError)\n                    }\n                    accept=\".pdf, image/*\"\n                  />\n                </FormControl>\n              ) : (\n                <FormControl>\n                  <StyledLabel spacing>\n                    {labels.upload} {labels[\"party.gstcertification\"]}{\" \"}\n                    {labels.pdf_image_only} {\" (optional)\"}\n                  </StyledLabel>\n                  <CustomFileUpload\n                    style={{ width: \"100%\" }}\n                    key={`${values.gstCertUrl}`}\n                    file={{ name: getFileName(values?.gstCertUrl) }}\n                    setFile={(f) =>\n                      s3Upload(f, \"gstCertUrl\", setFieldValue, setFieldError)\n                    }\n                    accept=\".pdf, image/*\"\n                  />\n                </FormControl>\n              )}\n              <FormControl>\n                <Row>\n                  <PrimaryOutlinedCTAButton\n                    type=\"button\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      onFormSubmit(values, true);\n                    }}\n                    style={{ width: \"47%\" }}\n                  >\n                    {labels[\"buttons.save_draft\"]}\n                  </PrimaryOutlinedCTAButton>\n                  <PrimaryCTAButton\n                    onClick={handleSubmit}\n                    style={{ width: \"47%\" }}\n                  >\n                    {labels.proceed}\n                  </PrimaryCTAButton>\n                </Row>\n              </FormControl>\n            </FormContainer>\n          )}\n        </Formik>\n      </Container>\n    </SuperContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}