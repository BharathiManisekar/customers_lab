{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/CasesBulkCreate/index.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2,\n    _theme$breakpoints3,\n    _theme$breakpoints4;\n\nimport { Tooltip } from \"@material-ui/core\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport { Formik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport { getErrorMessage, getFileName } from \"../../../helpers/functions\";\nimport { BulkUploadSchema } from \"../../../helpers/validationSchema\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AWSService from \"../../../services/AWSService\";\nimport CaseService from \"../../../services/CaseService\";\nimport PartyService from \"../../../services/PartyService\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { CustomFileUpload } from \"../../common/FormInputs\";\nimport { HyperLink } from \"../../common/styled-components\";\nimport _, { values } from \"lodash\";\nimport BulkCaseTypeRadioButton from \"./BulkCaseTypeRadioButton\"; // import  { CustomRadioGroup } from \"../../common/FormInputs\";\n\nexport default function CasesBulkCreate(caseType) {\n  var _caseType$location;\n\n  const resolutionType = caseType === null || caseType === void 0 ? void 0 : (_caseType$location = caseType.location) === null || _caseType$location === void 0 ? void 0 : _caseType$location.search;\n  const [data, setData] = useState(\"\");\n  const resolutionKind = resolutionType.split(\"=\").pop();\n  const breadcrumbs = [\"My Cases\", \"Bulk Upload\", _.capitalize(data.resolutionKind)];\n  const [menuItems, setMenuItems] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  useEffect(() => {\n    async function getParties(params) {\n      try {\n        var _response$data;\n\n        setLoader({\n          state: true\n        });\n        const response = await PartyService.getParties(\"?perPage=50&status=active\");\n\n        if (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.length) {\n          setMenuItems(response.data.map(({\n            name,\n            id\n          }) => ({\n            label: name,\n            value: id\n          })));\n        } else {\n          enqueueSnackbar(\"You need to create a party inorder to create a case\", {\n            variant: \"error\"\n          });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        }); // Handle Error\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n\n    getParties(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        const types = [\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\", \"application/vnd.ms-excel\", \"text/csv\"];\n        setLoader({\n          state: true,\n          message: `Uploading file ${file.name}`\n        });\n        const errorMessage = \"Invalid File Type\";\n        if (!types.includes(file === null || file === void 0 ? void 0 : file.type)) throw errorMessage;\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  async function onFormSubmit(values) {\n    try {\n      setLoader({\n        state: true,\n        message: `Uploading ${getFileName(values.url)}...`\n      });\n      const payload = {\n        url: values.url\n      };\n      let urlKind = \"bulkCaseUploadMediation\";\n      if (resolutionKind === \"negotiation\" || data.resolutionKind === \"negotiation\") urlKind = \"bulkCaseUpload\";else if (resolutionKind === \"arbitration\" || data.resolutionKind === \"arbitration\") urlKind = \"bulkCaseUploadArbitration\";\n      const response = await CaseService.caseBulkCreate(payload, values.partyId, urlKind);\n\n      if (response) {\n        setSuccess(true);\n        enqueueSnackbar(\"Cases uploaded successfully\", {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs: breadcrumbs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      partyId: \"\",\n      url: \"\",\n      resolutionKind: resolutionKind || \"negotiation\"\n    },\n    validationSchema: BulkUploadSchema,\n    enableReinitialize: true,\n    onSubmit: onFormSubmit,\n    validateOnBlur: true,\n    validateOnChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue,\n    setFieldError\n  }) => /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, \"Bulk Case Upload -\", \" \", resolutionKind ? _.capitalize(resolutionKind) : _.capitalize(values.resolutionKind), success && \" Success\"), /*#__PURE__*/React.createElement(BulkCaseTypeRadioButton, {\n    values: values,\n    handleChange: (e, type) => {\n      handleChange(e);\n    },\n    resolutionKind: resolutionKind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), setData(values), console.log(\"resolutionKind\", values.resolutionKind), /*#__PURE__*/React.createElement(Subheading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, !success ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, \"Bulk cases have to be uploaded in a specified template format.\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 19\n    }\n  }, \"If you find it difficult to upload the file from your mobile, please use a desktop/laptop to upload.\"), (data === null || data === void 0 ? void 0 : data.resolutionKind) === \"negotiation\" ? /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/5/1629365116166-bdb1eae7-1137-438f-a711-2ed35192cd08/Bulk%20Cases%20Upload%20Template%20%287%29.xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 21\n    }\n  }, \"Please download the template\", data.resolutionKind, \".\") : (data === null || data === void 0 ? void 0 : data.resolutionKind) === \"mediation\" ? /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/4/1641792525323-34760b2a-6012-4de5-968a-66e87117c5eb/Bulk%20Upload%20Mediation%20Case%20Template.xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, \"Please download the template\", data.resolutionKind, \".\") : /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/4/1643089176491-3ce64dfd-55d5-4785-a11b-b27234d69acc/Bulk%20Upload%20Arbitration%20Case%20Template.xlsx\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 21\n    }\n  }, \"Please download the template\", data.resolutionKind, \".\")) : `You can see all the bulk uploaded cases under MyCases with status as Drafts.`), !success && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    input: {\n      type: \"select\",\n      name: \"partyId\",\n      label: \"SELECT A CLAIMANT PARTY\",\n      required: true\n    },\n    menuItems: menuItems,\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    handleBlur,\n    setFieldValue,\n    showId: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(HyperLink, {\n    style: {\n      marginTop: 10,\n      float: \"right\",\n      width: \"auto\"\n    },\n    onClick: () => navigate(\"/dashboard/parties/create\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, \"Setup a Party\")), /*#__PURE__*/React.createElement(StyledLabel, {\n    style: {\n      width: \"auto\"\n    },\n    tooltip: \"Case template for doing bulk upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }, \"Bulk Case xls/CSV file\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \" *\")), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomFileUpload, {\n    key: values.url,\n    error: touched.url && errors.url,\n    file: {\n      name: getFileName(values.url)\n    },\n    setFile: file => s3Upload(file, \"url\", setFieldValue, setFieldError),\n    accept: \".xlsx\",\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    onClick: handleSubmit,\n    style: {\n      marginTop: 25\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, \"Submit\"))))));\n}\nconst Container = styled.div`\n  border-radius: 10px;\n  background-color: ${COLORS.PRIMARY_WHITE};\n  margin: 40px 15px;\n  padding-top: 1px;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n    margin: 0;\n    padding-top: 0;\n    border-radius: 0;\n    background-color: transparent;\n`;\nconst FormContainer = styled.form`\n  padding: 20px 15px;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.sm_up} {\n    padding: 34px 53px;\n  }\n`;\nconst Button = styled.div`\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints3 = theme.breakpoints) === null || _theme$breakpoints3 === void 0 ? void 0 : _theme$breakpoints3.sm_up} {\n    width: 436px;\n  }\n`;\nconst Heading = styled.div`\n  font-size: 18px;\n  font-family: ${theme.fonts.primaryFontExtraBold};\n  color: ${COLORS.COLOR_DARK};\n  /* text-transform: uppercase; */\n`;\nconst Subheading = styled.div`\n  font-size: 12px;\n  font-family: ${theme.fonts.primaryFontBold};\n  margin-top: 23px;\n  color: ${COLORS.COLOR_DARK};\n  margin-bottom: 20px;\n  & div {\n    margin-bottom: 20px;\n  }\n  & a {\n    color: ${COLORS.BTN_GREEN};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\nconst Flex = styled.div`\n  display: flex;\n  margin-top: 45px;\n  margin-bottom: 6px;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints4 = theme.breakpoints) === null || _theme$breakpoints4 === void 0 ? void 0 : _theme$breakpoints4.sm_up} {\n    margin-top: 19px;\n  }\n`;\nconst FormLabel = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 10px;\n  line-height: 1.7;\n  text-transform: uppercase;\n  color: ${COLORS.INPUT_LABEL};\n  margin-right: 8px;\n`;\nconst TooltipIcon = styled.img`\n  width: 17px;\n  height: 17px;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst StyledLabel = ({\n  tooltip,\n  spacing,\n  style,\n  ...props\n}) => /*#__PURE__*/React.createElement(Flex, {\n  spacing: spacing,\n  style: style,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(FormLabel, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 373,\n    columnNumber: 5\n  }\n})), tooltip && /*#__PURE__*/React.createElement(Tooltip, {\n  title: tooltip,\n  placement: \"top\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 375,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(TooltipIcon, {\n  src: require(\"../../../assets/images/toolTip.png\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 9\n  }\n})));","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/CasesBulkCreate/index.js"],"names":["Tooltip","navigate","useLocation","Formik","useSnackbar","React","useEffect","useState","styled","COLORS","theme","getErrorMessage","getFileName","BulkUploadSchema","useLoader","AWSService","CaseService","PartyService","ActionBar","PrimaryCTAButton","FormField","CustomFileUpload","HyperLink","_","values","BulkCaseTypeRadioButton","CasesBulkCreate","caseType","resolutionType","location","search","data","setData","resolutionKind","split","pop","breadcrumbs","capitalize","menuItems","setMenuItems","success","setSuccess","setLoader","enqueueSnackbar","searchParams","URLSearchParams","getParties","params","state","response","length","map","name","id","label","value","variant","error","message","s3Upload","file","field","setFieldValue","setFieldError","types","errorMessage","includes","type","payload","key","s3Response","getS3URL","url","res","uploadToS3","onFormSubmit","urlKind","caseBulkCreate","partyId","handleChange","errors","handleSubmit","touched","handleBlur","e","console","log","required","showId","marginTop","float","width","Container","div","PRIMARY_WHITE","breakpoints","sm_up","FormContainer","form","Button","Heading","fonts","primaryFontExtraBold","COLOR_DARK","Subheading","primaryFontBold","BTN_GREEN","Flex","FormLabel","primaryFontSemiBold","INPUT_LABEL","TooltipIcon","img","StyledLabel","tooltip","spacing","style","props","require"],"mappings":"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","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\nimport { navigate, useLocation } from \"@reach/router\";\nimport { Formik } from \"formik\";\nimport { useSnackbar } from \"notistack\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport { getErrorMessage, getFileName } from \"../../../helpers/functions\";\nimport { BulkUploadSchema } from \"../../../helpers/validationSchema\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport AWSService from \"../../../services/AWSService\";\nimport CaseService from \"../../../services/CaseService\";\nimport PartyService from \"../../../services/PartyService\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport FormField from \"../../common/FormField/FormField\";\nimport { CustomFileUpload } from \"../../common/FormInputs\";\nimport { HyperLink } from \"../../common/styled-components\";\nimport _, { values } from \"lodash\";\nimport BulkCaseTypeRadioButton from \"./BulkCaseTypeRadioButton\";\n// import  { CustomRadioGroup } from \"../../common/FormInputs\";\n\nexport default function CasesBulkCreate(caseType) {\n  const resolutionType = caseType?.location?.search;\n  const [data, setData] = useState(\"\");\n  const resolutionKind = resolutionType.split(\"=\").pop();\n  const breadcrumbs = [\n    \"My Cases\",\n    \"Bulk Upload\",\n    _.capitalize(data.resolutionKind)\n  ];\n  const [menuItems, setMenuItems] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n\n  useEffect(() => {\n    async function getParties(params) {\n      try {\n        setLoader({ state: true });\n        const response = await PartyService.getParties(\n          \"?perPage=50&status=active\"\n        );\n        if (response?.data?.length) {\n          setMenuItems(\n            response.data.map(({ name, id }) => ({ label: name, value: id }))\n          );\n        } else {\n          enqueueSnackbar(\n            \"You need to create a party inorder to create a case\",\n            {\n              variant: \"error\"\n            }\n          );\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n        // Handle Error\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n    getParties();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        const types = [\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n          \"application/vnd.ms-excel\",\n          \"text/csv\"\n        ];\n        setLoader({ state: true, message: `Uploading file ${file.name}` });\n        const errorMessage = \"Invalid File Type\";\n        if (!types.includes(file?.type)) throw errorMessage;\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, { variant: \"error\" });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  async function onFormSubmit(values) {\n    try {\n      setLoader({\n        state: true,\n        message: `Uploading ${getFileName(values.url)}...`\n      });\n      const payload = { url: values.url };\n      let urlKind = \"bulkCaseUploadMediation\";\n      if (\n        resolutionKind === \"negotiation\" ||\n        data.resolutionKind === \"negotiation\"\n      )\n        urlKind = \"bulkCaseUpload\";\n      else if (\n        resolutionKind === \"arbitration\" ||\n        data.resolutionKind === \"arbitration\"\n      )\n        urlKind = \"bulkCaseUploadArbitration\";\n      const response = await CaseService.caseBulkCreate(\n        payload,\n        values.partyId,\n        urlKind\n      );\n      if (response) {\n        setSuccess(true);\n        enqueueSnackbar(\"Cases uploaded successfully\", {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n\n  return (\n    <Container>\n      <ActionBar breadcrumbs={breadcrumbs} />\n      <Formik\n        initialValues={{\n          partyId: \"\",\n          url: \"\",\n          resolutionKind: resolutionKind || \"negotiation\"\n        }}\n        validationSchema={BulkUploadSchema}\n        enableReinitialize\n        onSubmit={onFormSubmit}\n        validateOnBlur\n        validateOnChange\n      >\n        {({\n          values,\n          handleChange,\n          errors,\n          handleSubmit,\n          touched,\n          handleBlur,\n          setFieldValue,\n          setFieldError\n        }) => (\n          <FormContainer onSubmit={handleSubmit}>\n            <Heading>\n              Bulk Case Upload -{\" \"}\n              {resolutionKind\n                ? _.capitalize(resolutionKind)\n                : _.capitalize(values.resolutionKind)}\n              {success && \" Success\"}\n            </Heading>\n            <BulkCaseTypeRadioButton\n              values={values}\n              handleChange={(e, type) => {\n                handleChange(e);\n              }}\n              resolutionKind={resolutionKind}\n            />\n            {setData(values)}\n            {console.log(\"resolutionKind\", values.resolutionKind)}\n            <Subheading>\n              {!success ? (\n                <>\n                  <div>\n                    Bulk cases have to be uploaded in a specified template\n                    format.\n                  </div>\n                  <div>\n                    If you find it difficult to upload the file from your\n                    mobile, please use a desktop/laptop to upload.\n                  </div>\n                  {data?.resolutionKind === \"negotiation\" ? (\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href=\"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/5/1629365116166-bdb1eae7-1137-438f-a711-2ed35192cd08/Bulk%20Cases%20Upload%20Template%20%287%29.xlsx\"\n                    >\n                      Please download the template\n                      {data.resolutionKind}.\n                    </a>\n                  ) : data?.resolutionKind === \"mediation\" ? (\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href=\"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/4/1641792525323-34760b2a-6012-4de5-968a-66e87117c5eb/Bulk%20Upload%20Mediation%20Case%20Template.xlsx\"\n                    >\n                      Please download the template\n                      {data.resolutionKind}.\n                    </a>\n                  ) : (\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href=\"https://justact-api-uploads.s3.ap-south-1.amazonaws.com/4/1643089176491-3ce64dfd-55d5-4785-a11b-b27234d69acc/Bulk%20Upload%20Arbitration%20Case%20Template.xlsx\"\n                    >\n                      Please download the template\n                      {data.resolutionKind}.\n                    </a>\n                  )}\n                </>\n              ) : (\n                `You can see all the bulk uploaded cases under MyCases with status as Drafts.`\n              )}\n            </Subheading>\n            {!success && (\n              <>\n                <Button>\n                  <FormField\n                    white\n                    input={{\n                      type: \"select\",\n                      name: \"partyId\",\n                      label: \"SELECT A CLAIMANT PARTY\",\n                      required: true\n                    }}\n                    menuItems={menuItems}\n                    {...{\n                      values,\n                      handleChange,\n                      errors,\n                      handleSubmit,\n                      touched,\n                      handleBlur,\n                      setFieldValue,\n                      showId: true\n                    }}\n                  />\n                  <HyperLink\n                    style={{\n                      marginTop: 10,\n                      float: \"right\",\n                      width: \"auto\"\n                    }}\n                    onClick={() => navigate(\"/dashboard/parties/create\")}\n                  >\n                    Setup a Party\n                  </HyperLink>\n                </Button>\n\n                <StyledLabel\n                  style={{ width: \"auto\" }}\n                  tooltip={\"Case template for doing bulk upload\"}\n                >\n                  Bulk Case xls/CSV file\n                  <span className=\"required-star\"> *</span>\n                </StyledLabel>\n                <Button>\n                  <CustomFileUpload\n                    key={values.url}\n                    error={touched.url && errors.url}\n                    file={{ name: getFileName(values.url) }}\n                    setFile={file =>\n                      s3Upload(file, \"url\", setFieldValue, setFieldError)\n                    }\n                    accept=\".xlsx\"\n                    style={{ width: \"100%\" }}\n                  />\n                </Button>\n                <Button>\n                  <PrimaryCTAButton\n                    onClick={handleSubmit}\n                    style={{ marginTop: 25 }}\n                  >\n                    Submit\n                  </PrimaryCTAButton>\n                </Button>\n              </>\n            )}\n          </FormContainer>\n        )}\n      </Formik>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  border-radius: 10px;\n  background-color: ${COLORS.PRIMARY_WHITE};\n  margin: 40px 15px;\n  padding-top: 1px;\n  @media ${theme?.breakpoints?.sm_up} {\n    margin: 0;\n    padding-top: 0;\n    border-radius: 0;\n    background-color: transparent;\n`;\n\nconst FormContainer = styled.form`\n  padding: 20px 15px;\n  @media ${theme?.breakpoints?.sm_up} {\n    padding: 34px 53px;\n  }\n`;\n\nconst Button = styled.div`\n  @media ${theme?.breakpoints?.sm_up} {\n    width: 436px;\n  }\n`;\n\nconst Heading = styled.div`\n  font-size: 18px;\n  font-family: ${theme.fonts.primaryFontExtraBold};\n  color: ${COLORS.COLOR_DARK};\n  /* text-transform: uppercase; */\n`;\n\nconst Subheading = styled.div`\n  font-size: 12px;\n  font-family: ${theme.fonts.primaryFontBold};\n  margin-top: 23px;\n  color: ${COLORS.COLOR_DARK};\n  margin-bottom: 20px;\n  & div {\n    margin-bottom: 20px;\n  }\n  & a {\n    color: ${COLORS.BTN_GREEN};\n    text-decoration: underline;\n    cursor: pointer;\n  }\n`;\n\nconst Flex = styled.div`\n  display: flex;\n  margin-top: 45px;\n  margin-bottom: 6px;\n  @media ${theme?.breakpoints?.sm_up} {\n    margin-top: 19px;\n  }\n`;\n\nconst FormLabel = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 10px;\n  line-height: 1.7;\n  text-transform: uppercase;\n  color: ${COLORS.INPUT_LABEL};\n  margin-right: 8px;\n`;\n\nconst TooltipIcon = styled.img`\n  width: 17px;\n  height: 17px;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst StyledLabel = ({ tooltip, spacing, style, ...props }) => (\n  <Flex spacing={spacing} style={style}>\n    <FormLabel {...props} />\n    {tooltip && (\n      <Tooltip title={tooltip} placement=\"top\">\n        <TooltipIcon src={require(\"../../../assets/images/toolTip.png\")} />\n      </Tooltip>\n    )}\n  </Flex>\n);\n"]},"metadata":{},"sourceType":"module"}