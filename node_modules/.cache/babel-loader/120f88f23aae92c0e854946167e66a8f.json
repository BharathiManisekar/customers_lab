{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase/components/AdditionalMediator.js\";\nimport { FieldArray } from \"formik\";\nimport React from \"react\";\nimport { SecondaryCTAButton } from \"../../../common/Buttons\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { DeleteIcon, H2, Row, StyledFormElementsWrapper } from \"../Styles\";\nconst mediatorInitialValue = {\n  mediatorName: \"\",\n  mediatorEmail: \"\",\n  mediatorMobile: \"\"\n};\n\nconst MediatorInputs = ({\n  index,\n  values,\n  errors,\n  touched,\n  setFieldValue,\n  remove,\n  caseObj\n}) => {\n  var _caseObj$requestedMed, _caseObj$requestedMed2;\n\n  const adhocMediatorInputs = [{\n    type: \"text\",\n    name: \"mediatorName\",\n    label: `${(caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\" ? \"Mediator\" : \"Arbitrator\"} Name`,\n    required: true\n  }, {\n    type: \"email\",\n    name: \"mediatorEmail\",\n    label: \"Email\",\n    required: true\n  }, {\n    type: \"phone\",\n    name: \"mediatorMobile\",\n    label: \"Phone Number\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledFormElementsWrapper, {\n    style: {\n      marginTop: 40,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      justifyContent: \"space-between\",\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(H2, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Enter\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\" ? \"Mediator\" : \"Arbitrator\", \" \", \"Details \", (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed = caseObj.requestedMediators) === null || _caseObj$requestedMed === void 0 ? void 0 : _caseObj$requestedMed.length) > 1 ? index + 1 : \"\"), /*#__PURE__*/React.createElement(React.Fragment, null, (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$requestedMed2 = caseObj.requestedMediators) === null || _caseObj$requestedMed2 === void 0 ? void 0 : _caseObj$requestedMed2.length) > 1 ? /*#__PURE__*/React.createElement(DeleteIcon, {\n    onClick: () => remove(index),\n    src: require(\"../../../../assets/images/removeIcon.svg\"),\n    alt: \"delete Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }) : null))), adhocMediatorInputs.map((input, key) => /*#__PURE__*/React.createElement(StyledFormElementsWrapper, {\n    style: {\n      marginBottom: 0\n    },\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormField, {\n    white: true,\n    errors: errors || {},\n    touched: touched || {},\n    input,\n    values,\n    handleChange: e => {\n      var _e$target3;\n\n      if (input.name === \"mediatorMobile\") {\n        var _e$target, _e$target$value;\n\n        if (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : (_e$target$value = _e$target.value) === null || _e$target$value === void 0 ? void 0 : _e$target$value.match(/^[0-9]*$/)) {\n          var _e$target2;\n\n          setFieldValue(`requestedMediators[${index}].${input === null || input === void 0 ? void 0 : input.name}`, e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.value);\n        }\n      } else setFieldValue(`requestedMediators[${index}].${input === null || input === void 0 ? void 0 : input.name}`, e === null || e === void 0 ? void 0 : (_e$target3 = e.target) === null || _e$target3 === void 0 ? void 0 : _e$target3.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst AdditionalMediator = ({\n  errors,\n  touched,\n  setFieldValue,\n  values,\n  handleBlur\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ((values === null || values === void 0 ? void 0 : values.resolutionKind) === \"arbitration\" || (values === null || values === void 0 ? void 0 : values.resolutionKind) === \"mediation\") && (values === null || values === void 0 ? void 0 : values.subscriptionKind) === \"adhoc\" && /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"requestedMediators\",\n    render: ({\n      push,\n      remove\n    }) => {\n      var _values$requestedMedi;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, values === null || values === void 0 ? void 0 : (_values$requestedMedi = values.requestedMediators) === null || _values$requestedMedi === void 0 ? void 0 : _values$requestedMedi.map((mediator, index) => /*#__PURE__*/React.createElement(MediatorInputs, {\n        values: mediator,\n        caseObj: values,\n        errors: errors && (errors === null || errors === void 0 ? void 0 : errors.requestedMediators) ? errors === null || errors === void 0 ? void 0 : errors.requestedMediators[index] : {},\n        touched: touched && (touched === null || touched === void 0 ? void 0 : touched.requestedMediators) ? touched === null || touched === void 0 ? void 0 : touched.requestedMediators[index] : {},\n        index,\n        setFieldValue,\n        remove,\n        handleBlur,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      })), (values === null || values === void 0 ? void 0 : values.resolutionKind) === \"arbitration\" ? /*#__PURE__*/React.createElement(StyledFormElementsWrapper, {\n        style: {\n          marginTop: 15\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SecondaryCTAButton, {\n        onClick: () => {\n          push({ ...mediatorInitialValue\n          });\n        },\n        style: {\n          marginTop: \"24px\",\n          margin: \"unset\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      }, \"+ Add Another\", \" \", (values === null || values === void 0 ? void 0 : values.resolutionKind) === \"mediation\" ? \"Mediator\" : \"Arbitrator\")) : null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default AdditionalMediator;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase/components/AdditionalMediator.js"],"names":["FieldArray","React","SecondaryCTAButton","FormField","DeleteIcon","H2","Row","StyledFormElementsWrapper","mediatorInitialValue","mediatorName","mediatorEmail","mediatorMobile","MediatorInputs","index","values","errors","touched","setFieldValue","remove","caseObj","adhocMediatorInputs","type","name","label","resolutionKind","required","marginTop","marginBottom","justifyContent","width","alignItems","requestedMediators","length","require","map","input","key","e","target","value","match","AdditionalMediator","handleBlur","subscriptionKind","push","mediator","margin"],"mappings":"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","sourcesContent":["import { FieldArray } from \"formik\";\nimport React from \"react\";\nimport { SecondaryCTAButton } from \"../../../common/Buttons\";\nimport FormField from \"../../../common/FormField/FormField\";\nimport { DeleteIcon, H2, Row, StyledFormElementsWrapper } from \"../Styles\";\n\nconst mediatorInitialValue = {\n  mediatorName: \"\",\n  mediatorEmail: \"\",\n  mediatorMobile: \"\",\n};\n\nconst MediatorInputs = ({\n  index,\n  values,\n  errors,\n  touched,\n  setFieldValue,\n  remove,\n  caseObj,\n}) => {\n  const adhocMediatorInputs = [\n    {\n      type: \"text\",\n      name: \"mediatorName\",\n      label: `${\n        caseObj?.resolutionKind === \"mediation\" ? \"Mediator\" : \"Arbitrator\"\n      } Name`,\n      required: true,\n    },\n    {\n      type: \"email\",\n      name: \"mediatorEmail\",\n      label: \"Email\",\n      required: true,\n    },\n    {\n      type: \"phone\",\n      name: \"mediatorMobile\",\n      label: \"Phone Number\",\n    },\n  ];\n\n  return (\n    <div key={index}>\n      <StyledFormElementsWrapper style={{ marginTop: 40, marginBottom: 10 }}>\n        <Row\n          style={{\n            justifyContent: \"space-between\",\n            width: \"100%\",\n            alignItems: \"center\",\n          }}\n        >\n          <H2>\n            Enter{\" \"}\n            {caseObj?.resolutionKind === \"mediation\"\n              ? \"Mediator\"\n              : \"Arbitrator\"}{\" \"}\n            Details {caseObj?.requestedMediators?.length > 1 ? index + 1 : \"\"}\n          </H2>\n          <>\n            {caseObj?.requestedMediators?.length > 1 ? (\n              <DeleteIcon\n                onClick={() => remove(index)}\n                src={require(\"../../../../assets/images/removeIcon.svg\")}\n                alt=\"delete Icon\"\n              />\n            ) : null}\n          </>\n        </Row>\n      </StyledFormElementsWrapper>\n      {adhocMediatorInputs.map((input, key) => (\n        <StyledFormElementsWrapper style={{ marginBottom: 0 }} key={key}>\n          <FormField\n            white\n            errors={errors || {}}\n            touched={touched || {}}\n            {...{\n              input,\n              values,\n            }}\n            handleChange={(e) => {\n              if (input.name === \"mediatorMobile\") {\n                if (e?.target?.value?.match(/^[0-9]*$/)) {\n                  setFieldValue(\n                    `requestedMediators[${index}].${input?.name}`,\n                    e?.target?.value\n                  );\n                }\n              } else\n                setFieldValue(\n                  `requestedMediators[${index}].${input?.name}`,\n                  e?.target?.value\n                );\n            }}\n          />\n        </StyledFormElementsWrapper>\n      ))}\n    </div>\n  );\n};\n\nconst AdditionalMediator = ({\n  errors,\n  touched,\n  setFieldValue,\n  values,\n  handleBlur,\n}) => {\n  return (\n    <>\n      {(values?.resolutionKind === \"arbitration\" ||\n        values?.resolutionKind === \"mediation\") &&\n        values?.subscriptionKind === \"adhoc\" && (\n          <FieldArray\n            name=\"requestedMediators\"\n            render={({ push, remove }) => (\n              <div style={{ marginBottom: 25 }}>\n                {values?.requestedMediators?.map((mediator, index) => (\n                  <MediatorInputs\n                    values={mediator}\n                    caseObj={values}\n                    errors={\n                      errors && errors?.requestedMediators\n                        ? errors?.requestedMediators[index]\n                        : {}\n                    }\n                    touched={\n                      touched && touched?.requestedMediators\n                        ? touched?.requestedMediators[index]\n                        : {}\n                    }\n                    {...{\n                      index,\n                      setFieldValue,\n                      remove,\n                      handleBlur,\n                    }}\n                  />\n                ))}\n                {values?.resolutionKind === \"arbitration\" ? (\n                  <StyledFormElementsWrapper style={{ marginTop: 15 }}>\n                    <SecondaryCTAButton\n                      onClick={() => {\n                        push({ ...mediatorInitialValue });\n                      }}\n                      style={{\n                        marginTop: \"24px\",\n                        margin: \"unset\",\n                      }}\n                    >\n                      + Add Another{\" \"}\n                      {values?.resolutionKind === \"mediation\"\n                        ? \"Mediator\"\n                        : \"Arbitrator\"}\n                    </SecondaryCTAButton>\n                  </StyledFormElementsWrapper>\n                ) : null}\n              </div>\n            )}\n          />\n        )}\n    </>\n  );\n};\n\nexport default AdditionalMediator;\n"]},"metadata":{},"sourceType":"module"}