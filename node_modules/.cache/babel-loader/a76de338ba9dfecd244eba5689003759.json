{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseInvites/index.js\";\nimport React, { Fragment, useState } from \"react\";\nimport { Container, TableWrapper, HyperLink, StyledTitle } from \"./Styles\";\nimport { Heading } from \"../../../styles/component/style\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport ActionBar from \"../../common/ActionBar\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport queryString from \"query-string\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport { formatNumberToMetrics, getErrorMessage, parseTimeStamp } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getCases(query) {\n  try {\n    const response = await CaseService.caseInvitesSent(query);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst columns = [{\n  field: \"id\",\n  title: labels[\"table.case_id\"],\n  sorting: false,\n  tooltip: \"Unique Identifier for the Case across JustAct platform\",\n  render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n    onClick: () => navigate(`/dashboard/cases/${rowData.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, rowData.id),\n  headerStyle: {\n    paddingLeft: \"28px\",\n    display: \"flex\",\n    flexWrap: \"nowrap\"\n  },\n  cellStyle: {\n    paddingLeft: \"28px\",\n    width: \"11%\"\n  }\n}, {\n  field: \"title\",\n  title: labels[\"table.case_title\"],\n  sorting: false,\n  render: rowData => /*#__PURE__*/React.createElement(StyledTitle, {\n    onClick: () => navigate(`/dashboard/cases/${rowData.id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, rowData.title)\n}, {\n  field: \"claimantParty.name\",\n  title: labels[\"table.party\"],\n  sorting: false,\n  tooltip: \"Parties representing to file the case\",\n  render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, _.startCase(rowData.claimantParty.name))\n}, {\n  field: \"respondentName\",\n  title: labels[\"table.sent_to\"],\n  sorting: false,\n  tooltip: \"Sent to User\",\n  render: rowData => {\n    var _rowData$respondentPa, _rowData$respondentPa2, _rowData$respondentPa3;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa = rowData.respondentParty) === null || _rowData$respondentPa === void 0 ? void 0 : _rowData$respondentPa.name) ? rowData.respondentParty.name : (rowData === null || rowData === void 0 ? void 0 : rowData.respondentName) ? rowData.respondentName : (rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa2 = rowData.respondentParties) === null || _rowData$respondentPa2 === void 0 ? void 0 : _rowData$respondentPa2.length) ? rowData === null || rowData === void 0 ? void 0 : (_rowData$respondentPa3 = rowData.respondentParties[0]) === null || _rowData$respondentPa3 === void 0 ? void 0 : _rowData$respondentPa3.name : /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 35\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, \"-\"));\n  }\n}, {\n  field: \"resolutionKind\",\n  title: labels[\"table.caseType\"],\n  render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, _.startCase(rowData.resolutionKind)),\n  headerStyle: {\n    minWidth: 140\n  },\n  sorting: false\n}, {\n  field: \"totalClaimValue\",\n  title: labels[\"table.claim_value\"],\n  tooltip: \"Claim Value of the Case\",\n  render: rowData => {\n    const caseItems = rowData.totalClaimValue;\n    if (caseItems) return \"INR \" + formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\");else return \"Non Monetary\";\n  },\n  headerStyle: {\n    width: \"15%\"\n  }\n}, {\n  field: \"submittedOn\",\n  title: labels[\"table.sent_on\"],\n  render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : rowData.submittedOn) ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\") : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\"))\n}, {\n  field: \"respondentStatus\",\n  title: labels[\"table.status\"],\n  sorting: false,\n  render: rowData => _.startCase(rowData.respondentStatus)\n}];\n\nconst Index = () => {\n  const [state, setState] = useState();\n  const breadcrumbs = [_.startCase(labels.home), labels.case_invites];\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n\n  const onBreadcrumbClick = selected => {\n    switch (_.snakeCase(selected)) {\n      case \"home\":\n        navigate(\"/dashboard\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      query: query.search\n    };\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}`;\n    }\n\n    getCases(stringParams).then(result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs,\n    onBreadcrumbClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"CreateCase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, labels.case_invites), /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    columns,\n    data,\n    state,\n    noToolbar: true,\n    pageSize: 10,\n    singularTitle: \"\",\n    pluralTitle: labels.invites,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Index;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CaseInvites/index.js"],"names":["React","Fragment","useState","Container","TableWrapper","HyperLink","StyledTitle","Heading","_","navigate","ActionBar","CustomTable","queryString","CaseService","moment","formatNumberToMetrics","getErrorMessage","parseTimeStamp","useSnackbar","labels","getCases","query","response","caseInvitesSent","error","columns","field","title","sorting","tooltip","render","rowData","id","headerStyle","paddingLeft","display","flexWrap","cellStyle","width","startCase","claimantParty","name","respondentParty","respondentName","respondentParties","length","marginLeft","resolutionKind","minWidth","caseItems","totalClaimValue","parseFloat","toFixed","submittedOn","format","created_at","respondentStatus","Index","state","setState","breadcrumbs","home","case_invites","enqueueSnackbar","onBreadcrumbClick","selected","snakeCase","data","Promise","resolve","params","page","perPage","search","orderBy","sort","sortDirection","orderDirection","stringParams","isEmpty","stringify","then","result","total","catch","variant","lastPage","invites"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Container, TableWrapper, HyperLink, StyledTitle } from \"./Styles\";\nimport { Heading } from \"../../../styles/component/style\";\nimport _ from \"lodash\";\nimport { navigate } from \"@reach/router\";\nimport ActionBar from \"../../common/ActionBar\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport queryString from \"query-string\";\nimport CaseService from \"../../../services/CaseService\";\nimport moment from \"moment\";\nimport {\n  formatNumberToMetrics,\n  getErrorMessage,\n  parseTimeStamp,\n} from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport labels from \"../../../helpers/labels.json\";\n\nasync function getCases(query) {\n  try {\n    const response = await CaseService.caseInvitesSent(query);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst columns = [\n  {\n    field: \"id\",\n    title: labels[\"table.case_id\"],\n    sorting: false,\n    tooltip: \"Unique Identifier for the Case across JustAct platform\",\n    render: (rowData) => (\n      <HyperLink onClick={() => navigate(`/dashboard/cases/${rowData.id}`)}>\n        {rowData.id}\n      </HyperLink>\n    ),\n    headerStyle: {\n      paddingLeft: \"28px\",\n      display: \"flex\",\n      flexWrap: \"nowrap\",\n    },\n    cellStyle: {\n      paddingLeft: \"28px\",\n      width: \"11%\",\n    },\n  },\n  {\n    field: \"title\",\n    title: labels[\"table.case_title\"],\n    sorting: false,\n    render: (rowData) => (\n      <StyledTitle onClick={() => navigate(`/dashboard/cases/${rowData.id}`)}>\n        {rowData.title}\n      </StyledTitle>\n    ),\n  },\n  {\n    field: \"claimantParty.name\",\n    title: labels[\"table.party\"],\n    sorting: false,\n    tooltip: \"Parties representing to file the case\",\n    render: (rowData) => <>{_.startCase(rowData.claimantParty.name)}</>,\n  },\n  {\n    field: \"respondentName\",\n    title: labels[\"table.sent_to\"],\n    sorting: false,\n    tooltip: \"Sent to User\",\n    render: (rowData) => (\n      <div>\n        {rowData?.respondentParty?.name ? (\n          rowData.respondentParty.name\n        ) : rowData?.respondentName ? (\n          rowData.respondentName\n        ) : rowData?.respondentParties?.length ? (\n          rowData?.respondentParties[0]?.name\n        ) : (\n          <div style={{ marginLeft: 35 }}>-</div>\n        )}\n      </div>\n    ),\n  },\n  {\n    field: \"resolutionKind\",\n    title: labels[\"table.caseType\"],\n    render: (rowData) => <>{_.startCase(rowData.resolutionKind)}</>,\n    headerStyle: {\n      minWidth: 140,\n    },\n    sorting: false,\n  },\n  {\n    field: \"totalClaimValue\",\n    title: labels[\"table.claim_value\"],\n    tooltip: \"Claim Value of the Case\",\n    render: (rowData) => {\n      const caseItems = rowData.totalClaimValue;\n      if (caseItems)\n        return (\n          \"INR \" +\n          formatNumberToMetrics(parseFloat(caseItems).toFixed(2), \"INR\")\n        );\n      else return \"Non Monetary\";\n    },\n    headerStyle: {\n      width: \"15%\",\n    },\n  },\n  {\n    field: \"submittedOn\",\n    title: labels[\"table.sent_on\"],\n    render: (rowData) => (\n      <>\n        {rowData?.submittedOn\n          ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\")\n          : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")}\n      </>\n    ),\n  },\n  {\n    field: \"respondentStatus\",\n    title: labels[\"table.status\"],\n    sorting: false,\n    render: (rowData) => _.startCase(rowData.respondentStatus),\n  },\n];\n\nconst Index = () => {\n  const [state, setState] = useState();\n  const breadcrumbs = [_.startCase(labels.home), labels.case_invites];\n  const { enqueueSnackbar } = useSnackbar();\n\n  const onBreadcrumbClick = (selected) => {\n    switch (_.snakeCase(selected)) {\n      case \"home\":\n        navigate(\"/dashboard\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        query: query.search,\n      };\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      getCases(stringParams)\n        .then((result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  return (\n    <Fragment>\n      <ActionBar {...{ breadcrumbs, onBreadcrumbClick }} />\n      <Container className=\"CreateCase\">\n        <Heading>{labels.case_invites}</Heading>\n        <TableWrapper>\n          <CustomTable\n            {...{\n              columns,\n              data,\n              state,\n            }}\n            noToolbar\n            pageSize={10}\n            singularTitle=\"\"\n            pluralTitle={labels.invites}\n          />\n        </TableWrapper>\n      </Container>\n    </Fragment>\n  );\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}