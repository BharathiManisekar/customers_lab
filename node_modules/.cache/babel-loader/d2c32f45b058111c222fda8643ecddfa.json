{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/FormField/FormField.js\";\nimport React, { useState } from \"react\";\nimport { CustomInputField, CustomDatePicker, CustomMobileInput } from \"../FormInputs\";\nimport theme from \"../../../assets/theme\";\nimport { FormLabel, IconButton, InputAdornment, TextareaAutosize } from \"@material-ui/core\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport COLORS from \"../../../assets/Colors\";\nimport styled, { css } from \"styled-components\";\nimport Autocomplete, { createFilterOptions } from \"@material-ui/lab/Autocomplete\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { get } from \"lodash\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nconst filter = createFilterOptions();\nexport default function FormField({\n  touched,\n  errors,\n  input,\n  values,\n  handleChange,\n  handleBlur,\n  menuItems = [],\n  setFieldValue,\n  white = false,\n  multiline,\n  disabled = false,\n  showId = false,\n  row = 4,\n  saveOnBlur = false,\n  maximumLength = 13,\n  selectedIndex = \"label\",\n  alias,\n  showAllInitial = false,\n  currentTab,\n  selectedItemChanged = () => {}\n}) {\n  const {\n    name,\n    label,\n    type,\n    placeholder,\n    required\n  } = input;\n  const [searchInput, setSearchInput] = useState();\n  const [visibility, setVisibility] = useState(false);\n\n  const createNewOption = (options, params) => {\n    let filtered = filter(options, params);\n\n    if (params.inputValue !== \"\") {\n      let temp = {};\n      temp[\"inputValue\"] = params.inputValue;\n      temp[selectedIndex] = `Add \"${params.inputValue}\"`;\n      filtered = [temp, ...filtered];\n    }\n\n    return filtered;\n  };\n\n  const calRenderOption = option => {\n    // Value selected with enter, right from the input\n    if (typeof option === \"string\") {\n      return option;\n    } // Add \"xxx\" option created dynamically\n\n\n    if (option.inputValue) {\n      return option.inputValue;\n    } // Regular option\n\n\n    return option[selectedIndex];\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-fields\",\n    style: {\n      width: \"100%\",\n      paddingTop: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormLabel, {\n    error: errors[name] && touched[name],\n    style: {\n      fontFamily: theme.fonts.primaryFontSemiBold,\n      fontSize: 12,\n      color: COLORS.INPUT_LABEL\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, label, required && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required-star\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 22\n    }\n  }, \" *\")), type === \"autoselect\" ? /*#__PURE__*/React.createElement(Autocomplete, {\n    freeSolo: true,\n    disableClearable: true,\n    options: showAllInitial || (searchInput === null || searchInput === void 0 ? void 0 : searchInput.trim()) ? menuItems : [],\n    name: name,\n    value: get(values, name),\n    onChange: (_, v) => {\n      v[selectedIndex] = v[\"inputValue\"] ? v[\"inputValue\"] : v[selectedIndex];\n      console.log(v);\n      selectedItemChanged(v);\n    },\n    onKeyDown: e => {\n      if (e.key === \"Tab\" && saveOnBlur) {\n        const v = {\n          [selectedIndex]: e.target.value\n        };\n        selectedItemChanged(v);\n      }\n    },\n    clearOnBlur: true,\n    filterOptions: (options, params) => createNewOption(options, params),\n    getOptionLabel: option => calRenderOption(option),\n    renderOption: option => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, option[alias] ? `${option[selectedIndex]} (${option[alias]})` : /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, option[selectedIndex])),\n    onBlur: handleBlur,\n    id: name,\n    style: {\n      marginTop: 6\n    },\n    disabled: disabled,\n    renderInput: params => /*#__PURE__*/React.createElement(CustomInputField, Object.assign({}, params, {\n      error: errors[name] && touched[name],\n      helperText: touched[name] && errors[name],\n      onChange: e => {\n        setSearchInput(e.target.value);\n      },\n      onBlur: handleBlur,\n      className: `input-no-padding ${white ? \"input-white\" : \"\"}`,\n      variant: \"outlined\",\n      InputProps: { ...params.InputProps,\n        type: \"search\"\n      },\n      placeholder: placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : type === \"select\" ? /*#__PURE__*/React.createElement(CustomSelect, {\n    white: white,\n    id: name,\n    menuItemValues: menuItems,\n    name: name,\n    value: values[name],\n    onChange: handleChange,\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    onBlur: handleBlur,\n    style: {\n      marginTop: 6\n    },\n    disabled: disabled,\n    showId: showId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }) : type === \"date\" ? /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomDatePicker, {\n    className: white ? \"input-white\" : \"\",\n    disableFuture: true,\n    inputVariant: \"outlined\",\n    openTo: \"year\",\n    disabled: disabled,\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    maxDate: new Date(new Date().getFullYear() - 18, new Date().getMonth(), new Date().getDate()),\n    format: \"dd MMMM yyyy\",\n    views: [\"year\", \"month\", \"date\"],\n    value: values[name],\n    onChange: e => setFieldValue(name, e),\n    style: {\n      marginTop: 6\n    },\n    inputProps: {\n      placeholder: placeholder\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  })) : name === \"mobile\" ? currentTab == 'mobile' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomMobileInput, {\n    disabled: disabled,\n    className: white ? \"input-white\" : \"\",\n    defaultCountry: \"in\",\n    onlyCountries: [\"in\"],\n    onChange: e => setFieldValue(name, e),\n    onBlur: handleBlur,\n    autoFormat: false,\n    style: {\n      marginTop: 6\n    },\n    value: values[name],\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    id: name,\n    placeholder: placeholder,\n    name: name,\n    variant: \"outlined\",\n    inputProps: {\n      maxLength: maximumLength\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mobile-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomMobileInput, {\n    disabled: disabled,\n    className: white ? \"input-white\" : \"\",\n    defaultCountry: \"in\",\n    onChange: e => setFieldValue(name, e),\n    onBlur: handleBlur,\n    autoFormat: false,\n    style: {\n      marginTop: 6\n    },\n    value: values[name],\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    id: name,\n    placeholder: placeholder,\n    name: name,\n    variant: \"outlined\",\n    inputProps: {\n      maxLength: maximumLength\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  })) : type === \"textarea\" ? /*#__PURE__*/React.createElement(Relative, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTextArea, {\n    className: white && multiline ? \"input-white input-height-auto\" : white ? \"input-white\" : multiline ? \"input-height-auto\" : \"\",\n    disabled: disabled,\n    rowsMin: 5,\n    autoComplete: \"new-password\",\n    type: type,\n    value: values[name],\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    id: name,\n    maxLength: 1000,\n    placeholder: placeholder,\n    name: name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    style: {\n      marginTop: 6\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MaxLength, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, 1000 - values[name].length, \" characters remaining\"), /*#__PURE__*/React.createElement(HelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 11\n    }\n  }, touched[name] && errors[name])) : /*#__PURE__*/React.createElement(CustomInputField, {\n    className: white && multiline ? \"input-white input-height-auto\" : white ? \"input-white\" : multiline ? \"input-height-auto\" : \"\",\n    multiline: multiline,\n    row: 4,\n    autoComplete: \"new-password\",\n    autoFocus: name === \"fullname\",\n    type: type === \"password\" ? visibility ? \"text\" : type : type,\n    value: values[name],\n    error: errors[name] && touched[name],\n    helperText: touched[name] && errors[name],\n    id: name,\n    placeholder: placeholder,\n    name: name,\n    variant: \"outlined\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    style: {\n      marginTop: 6,\n      marginBottom: 10\n    },\n    disabled: disabled,\n    InputProps: {\n      endAdornment: /*#__PURE__*/React.createElement(React.Fragment, null, type === \"password\" ? /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": \"toggle password visibility\",\n        onClick: () => setVisibility(!visibility),\n        edge: \"end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }\n      }, visibility ? /*#__PURE__*/React.createElement(Visibility, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 25\n        }\n      }) : /*#__PURE__*/React.createElement(VisibilityOff, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }\n      }))) : null)\n    },\n    inputProps: {\n      maxLength: label === \"NEW AGENT PAN\" || label === \"PAN\" || name === \"respondentPanNumber\" ? 10 : label === \"CIN\" ? 21 : null\n    },\n    min: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }));\n}\nconst Relative = styled.div`\n  position: relative;\n`;\nconst CustomTextArea = styled(TextareaAutosize)`\n  width: 100%;\n  min-width: 100%;\n  max-width: 100%;\n  font-size: 16px;\n  color: ${COLORS.COLOR_DARK} !important;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  /* min-height: 89px; */\n  border-radius: 6px;\n  border: solid 0.5px #e1e3ee;\n  background-color: #ffffff;\n  outline: none;\n  padding: 15px;\n  :hover {\n    border: solid 0.5px black;\n  }\n  ${({\n  error\n}) => error && css`\n      border: solid 0.5px #f44336;\n      :hover {\n        border: solid 0.5px #f44336;\n      }\n    `}\n`;\nconst MaxLength = styled.div`\n  font-family: openSans-SemiBold, sans-serif;\n  font-size: 10px;\n  color: #acb1c2;\n  text-align: right;\n`;\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: 2px;\n  position: absolute;\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/FormField/FormField.js"],"names":["React","useState","CustomInputField","CustomDatePicker","CustomMobileInput","theme","FormLabel","IconButton","InputAdornment","TextareaAutosize","CustomSelect","COLORS","styled","css","Autocomplete","createFilterOptions","MuiPickersUtilsProvider","DateFnsUtils","get","Visibility","VisibilityOff","filter","FormField","touched","errors","input","values","handleChange","handleBlur","menuItems","setFieldValue","white","multiline","disabled","showId","row","saveOnBlur","maximumLength","selectedIndex","alias","showAllInitial","currentTab","selectedItemChanged","name","label","type","placeholder","required","searchInput","setSearchInput","visibility","setVisibility","createNewOption","options","params","filtered","inputValue","temp","calRenderOption","option","width","paddingTop","fontFamily","fonts","primaryFontSemiBold","fontSize","color","INPUT_LABEL","trim","_","v","console","log","e","key","target","value","marginTop","InputProps","Date","getFullYear","getMonth","getDate","maxLength","length","marginBottom","endAdornment","Relative","div","CustomTextArea","COLOR_DARK","error","MaxLength","HelperText"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  CustomInputField,\n  CustomDatePicker,\n  CustomMobileInput,\n} from \"../FormInputs\";\nimport theme from \"../../../assets/theme\";\nimport {\n  FormLabel,\n  IconButton,\n  InputAdornment,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport CustomSelect from \"../CustomSelect/CustomSelect\";\nimport COLORS from \"../../../assets/Colors\";\nimport styled, { css } from \"styled-components\";\nimport Autocomplete, {\n  createFilterOptions,\n} from \"@material-ui/lab/Autocomplete\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { get } from \"lodash\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\n\nconst filter = createFilterOptions();\n\nexport default function FormField({\n  touched,\n  errors,\n  input,\n  values,\n  handleChange,\n  handleBlur,\n  menuItems = [],\n  setFieldValue,\n  white = false,\n  multiline,\n  disabled = false,\n  showId = false,\n  row = 4,\n  saveOnBlur = false,\n  maximumLength = 13,\n  selectedIndex = \"label\",\n  alias,\n  showAllInitial = false,\n  currentTab,\n  selectedItemChanged = () => {},\n}) {\n  const { name, label, type, placeholder, required } = input;\n  const [searchInput, setSearchInput] = useState();\n  const [visibility, setVisibility] = useState(false);\n  const createNewOption = (options, params) => {\n    let filtered = filter(options, params);\n    if (params.inputValue !== \"\") {\n      let temp = {};\n      temp[\"inputValue\"] = params.inputValue;\n      temp[selectedIndex] = `Add \"${params.inputValue}\"`;\n      filtered = [temp, ...filtered];\n    }\n    return filtered;\n  };\n\n  const calRenderOption = (option) => {\n    // Value selected with enter, right from the input\n    if (typeof option === \"string\") {\n      return option;\n    }\n    // Add \"xxx\" option created dynamically\n    if (option.inputValue) {\n      return option.inputValue;\n    }\n    // Regular option\n    return option[selectedIndex];\n  };\n\n  return (\n    <div className=\"form-fields\" style={{ width: \"100%\", paddingTop: 5 }}>\n      <FormLabel\n        error={errors[name] && touched[name]}\n        style={{\n          fontFamily: theme.fonts.primaryFontSemiBold,\n          fontSize: 12,\n          color: COLORS.INPUT_LABEL,\n        }}\n      >\n        {label}\n        {required && <span className=\"required-star\"> *</span>}\n      </FormLabel>\n      {type === \"autoselect\" ? (\n        <Autocomplete\n          freeSolo\n          disableClearable\n          options={showAllInitial || searchInput?.trim() ? menuItems : []}\n          name={name}\n          value={get(values, name)}\n          onChange={(_, v) => {\n            v[selectedIndex] = v[\"inputValue\"]\n              ? v[\"inputValue\"]\n              : v[selectedIndex];\n            console.log(v);\n            selectedItemChanged(v);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Tab\" && saveOnBlur) {\n              const v = { [selectedIndex]: e.target.value };\n              selectedItemChanged(v);\n            }\n          }}\n          clearOnBlur\n          filterOptions={(options, params) => createNewOption(options, params)}\n          getOptionLabel={(option) => calRenderOption(option)}\n          renderOption={(option) => (\n            <React.Fragment>\n              {option[alias] ? (\n                `${option[selectedIndex]} (${option[alias]})`\n              ) : (\n                <strong>{option[selectedIndex]}</strong>\n              )}\n            </React.Fragment>\n          )}\n          onBlur={handleBlur}\n          id={name}\n          style={{ marginTop: 6 }}\n          disabled={disabled}\n          renderInput={(params) => (\n            <CustomInputField\n              {...params}\n              error={errors[name] && touched[name]}\n              helperText={touched[name] && errors[name]}\n              onChange={(e) => {\n                setSearchInput(e.target.value);\n              }}\n              onBlur={handleBlur}\n              className={`input-no-padding ${white ? \"input-white\" : \"\"}`}\n              variant=\"outlined\"\n              InputProps={{ ...params.InputProps, type: \"search\" }}\n              placeholder={placeholder}\n            />\n          )}\n        />\n      ) : type === \"select\" ? (\n        <CustomSelect\n          white={white}\n          id={name}\n          menuItemValues={menuItems}\n          name={name}\n          value={values[name]}\n          onChange={handleChange}\n          error={errors[name] && touched[name]}\n          helperText={touched[name] && errors[name]}\n          onBlur={handleBlur}\n          style={{ marginTop: 6 }}\n          disabled={disabled}\n          showId={showId}\n        />\n      ) : type === \"date\" ? (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <CustomDatePicker\n            className={white ? \"input-white\" : \"\"}\n            disableFuture\n            inputVariant=\"outlined\"\n            openTo=\"year\"\n            disabled={disabled}\n            error={errors[name] && touched[name]}\n            helperText={touched[name] && errors[name]}\n            maxDate={\n              new Date(\n                new Date().getFullYear() - 18,\n                new Date().getMonth(),\n                new Date().getDate()\n              )\n            }\n            format=\"dd MMMM yyyy\"\n            views={[\"year\", \"month\", \"date\"]}\n            value={values[name]}\n            onChange={(e) => setFieldValue(name, e)}\n            style={{ marginTop: 6 }}\n            inputProps={{\n              placeholder: placeholder,\n            }}\n          />\n        </MuiPickersUtilsProvider>\n      ) : name === \"mobile\" ? currentTab=='mobile'? (\n        <div className=\"mobile-input\">\n          <CustomMobileInput\n            disabled={disabled}\n            className={white ? \"input-white\" : \"\"}\n            defaultCountry={\"in\"}\n            onlyCountries={[\"in\"]}\n            onChange={(e) => setFieldValue(name, e)}\n            onBlur={handleBlur}\n            autoFormat={false}\n            style={{ marginTop: 6 }}\n            value={values[name]}\n            error={errors[name] && touched[name]}\n            helperText={touched[name] && errors[name]}\n            id={name}\n            placeholder={placeholder}\n            name={name}\n            variant=\"outlined\"\n            inputProps={{\n              maxLength: maximumLength,\n            }}\n          />\n        </div>\n      ): (\n        <div className=\"mobile-input\">\n          <CustomMobileInput\n            disabled={disabled}\n            className={white ? \"input-white\" : \"\"}\n            defaultCountry={\"in\"}\n            onChange={(e) => setFieldValue(name, e)}\n            onBlur={handleBlur}\n            autoFormat={false}\n            style={{ marginTop: 6 }}\n            value={values[name]}\n            error={errors[name] && touched[name]}\n            helperText={touched[name] && errors[name]}\n            id={name}\n            placeholder={placeholder}\n            name={name}\n            variant=\"outlined\"\n            inputProps={{\n              maxLength: maximumLength,\n            }}\n          />\n        </div>\n      ) : type === \"textarea\" ? (\n        <Relative>\n          <CustomTextArea\n            className={\n              white && multiline\n                ? \"input-white input-height-auto\"\n                : white\n                ? \"input-white\"\n                : multiline\n                ? \"input-height-auto\"\n                : \"\"\n            }\n            disabled={disabled}\n            rowsMin={5}\n            autoComplete={\"new-password\"}\n            type={type}\n            value={values[name]}\n            error={errors[name] && touched[name]}\n            helperText={touched[name] && errors[name]}\n            id={name}\n            maxLength={1000}\n            placeholder={placeholder}\n            name={name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            style={{ marginTop: 6 }}\n          />\n          <MaxLength>\n            {1000 - values[name].length} characters remaining\n          </MaxLength>\n          <HelperText>{touched[name] && errors[name]}</HelperText>\n        </Relative>\n      ) : (\n        <CustomInputField\n          className={\n            white && multiline\n              ? \"input-white input-height-auto\"\n              : white\n              ? \"input-white\"\n              : multiline\n              ? \"input-height-auto\"\n              : \"\"\n          }\n          multiline={multiline}\n          row={4}\n          autoComplete={\"new-password\"}\n          autoFocus={name === \"fullname\"}\n          type={type === \"password\" ? (visibility ? \"text\" : type) : type}\n          value={values[name]}\n          error={errors[name] && touched[name]}\n          helperText={touched[name] && errors[name]}\n          id={name}\n          placeholder={placeholder}\n          name={name}\n          variant=\"outlined\"\n          onChange={handleChange}\n          onBlur={handleBlur}\n          style={{ marginTop: 6, marginBottom: 10 }}\n          disabled={disabled}\n          InputProps={{\n            endAdornment: (\n              <>\n                {type === \"password\" ? (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={() => setVisibility(!visibility)}\n                      edge=\"end\"\n                    >\n                      {visibility ? (\n                        <Visibility style={{ fontSize: 18 }} />\n                      ) : (\n                        <VisibilityOff style={{ fontSize: 18 }} />\n                      )}\n                    </IconButton>\n                  </InputAdornment>\n                ) : null}\n              </>\n            ),\n          }}\n          inputProps={{\n            maxLength:\n              label === \"NEW AGENT PAN\" ||\n              label === \"PAN\" ||\n              name === \"respondentPanNumber\"\n                ? 10\n                : label === \"CIN\"\n                ? 21\n                : null,\n          }}\n          min={0}\n        />\n      )}\n    </div>\n  );\n}\n\nconst Relative = styled.div`\n  position: relative;\n`;\n\nconst CustomTextArea = styled(TextareaAutosize)`\n  width: 100%;\n  min-width: 100%;\n  max-width: 100%;\n  font-size: 16px;\n  color: ${COLORS.COLOR_DARK} !important;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  /* min-height: 89px; */\n  border-radius: 6px;\n  border: solid 0.5px #e1e3ee;\n  background-color: #ffffff;\n  outline: none;\n  padding: 15px;\n  :hover {\n    border: solid 0.5px black;\n  }\n  ${({ error }) =>\n    error &&\n    css`\n      border: solid 0.5px #f44336;\n      :hover {\n        border: solid 0.5px #f44336;\n      }\n    `}\n`;\n\nconst MaxLength = styled.div`\n  font-family: openSans-SemiBold, sans-serif;\n  font-size: 10px;\n  color: #acb1c2;\n  text-align: right;\n`;\n\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: 2px;\n  position: absolute;\n  font-size: 10px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;\n"]},"metadata":{},"sourceType":"module"}