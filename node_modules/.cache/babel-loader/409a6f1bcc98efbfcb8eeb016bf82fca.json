{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentDrawer/index.js\";\nimport React, { useState } from \"react\";\nimport { Heading, HyperLink } from \"../../../styles/component/style\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport Drawer from \"../../common/Drawer\";\nimport { Header, ImageWrapper } from \"../DrawerTable\";\nimport labels from \"../../../helpers/labels.json\";\nimport { PAYMENT_STATUS } from \"../../../helpers/constants\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { getErrorMessage, parseTimeStamp, renderStatus } from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport queryString from \"query-string\";\nimport CaseService from \"../../../services/CaseService\";\nimport theme from \"../../../assets/theme\";\nimport styled, { css } from \"styled-components\";\n\nasync function getPayments(query = \"\") {\n  try {\n    const response = await CaseService.getPayments(query);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst PaymentDrawer = ({\n  setOpenPaymentModal,\n  openPaymentModal,\n  id,\n  MTRef\n}) => {\n  var _state$data, _state$data2;\n\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [state, setState] = useState({});\n  const columns = [{\n    field: \"paymentId\",\n    title: labels[\"table.order_id\"],\n    sorting: false,\n    render: rowData => /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }\n    }, rowData === null || rowData === void 0 ? void 0 : rowData.paymentId),\n    headerStyle: {\n      display: \"flex\"\n    },\n    cellStyle: {\n      paddingLeft: 32\n    }\n  }, {\n    field: \"amount\",\n    title: labels[\"table.amount\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$cartItem, _rowData$cartItem$amo;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"INR \", rowData === null || rowData === void 0 ? void 0 : (_rowData$cartItem = rowData.cartItem) === null || _rowData$cartItem === void 0 ? void 0 : (_rowData$cartItem$amo = _rowData$cartItem.amount) === null || _rowData$cartItem$amo === void 0 ? void 0 : _rowData$cartItem$amo.toFixed(2));\n    }\n  }, {\n    field: \"created_at\",\n    title: labels[\"table.date\"],\n    tooltip: \"Date of transaction\",\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, moment(parseTimeStamp(rowData === null || rowData === void 0 ? void 0 : rowData.created_at)).format(\"DD/MM/YYYY\"))\n  }, {\n    field: \"description\",\n    title: labels[\"table.description\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$cartItem2, _rowData$case, _rowData$cartItem3;\n\n      return (rowData === null || rowData === void 0 ? void 0 : (_rowData$cartItem2 = rowData.cartItem) === null || _rowData$cartItem2 === void 0 ? void 0 : _rowData$cartItem2.feeKind) ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      }, (rowData === null || rowData === void 0 ? void 0 : (_rowData$case = rowData.case) === null || _rowData$case === void 0 ? void 0 : _rowData$case.subscriptionKind) === \"adhoc\" ? \"Platform Fee\" : renderStatus(PAYMENT_STATUS[rowData === null || rowData === void 0 ? void 0 : (_rowData$cartItem3 = rowData.cartItem) === null || _rowData$cartItem3 === void 0 ? void 0 : _rowData$cartItem3.feeKind], rowData === null || rowData === void 0 ? void 0 : rowData.case)) : /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginLeft: 35\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, \"-\");\n    },\n    headerStyle: {\n      width: \"150px !important\"\n    }\n  }, {\n    field: \"status\",\n    title: labels[\"table.status\"],\n    sorting: false,\n    render: rowData => /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontFamily: theme.fonts.primaryFontBold,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, (rowData === null || rowData === void 0 ? void 0 : rowData.refundedAt) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, \"Refunded\"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 10,\n        fontStyle: \"italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, \"( INR \", Number(rowData === null || rowData === void 0 ? void 0 : rowData.refundAmount).toFixed(2), \")\")) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, \"Completed\")),\n    headerStyle: {\n      width: \"150px !important\",\n      textAlign: \"center\"\n    }\n  }];\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      filter: \"caseId\"\n    };\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n    const filterSting = queryString.stringify({\n      filterValues: [id]\n    }, {\n      arrayFormat: \"index\"\n    });\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}&${filterSting}`;\n    }\n\n    getPayments(stringParams).then(async result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    state: openPaymentModal,\n    setState: setOpenPaymentModal,\n    label: \"Drawer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    style: {\n      marginBottom: \"unset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, \"Payments\"), /*#__PURE__*/React.createElement(ImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../assets/images/closeModal.svg\"),\n    onClick: () => {\n      setOpenPaymentModal(false);\n    },\n    alt: \"close\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    hidePagination: state.lastPage === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    pluralTitle: \"Payments\",\n    singularTitle: \"\",\n    columns,\n    data,\n    MTRef,\n    noToolbar: true,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default PaymentDrawer;\nconst Bold = styled.span`\n  cursor: pointer;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  ${({\n  disabled\n}) => disabled && css`\n      cursor: not-allowed;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n`;\nconst Title = styled.div`\n  margin-left: 35px;\n  @media (min-width: 780px) {\n    margin-left: 0;\n    text-decoration: none;\n    cursor: inherit;\n    width: 90px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/PaymentDrawer/index.js"],"names":["React","useState","Heading","HyperLink","CustomTable","Drawer","Header","ImageWrapper","labels","PAYMENT_STATUS","_","moment","getErrorMessage","parseTimeStamp","renderStatus","useSnackbar","queryString","CaseService","theme","styled","css","getPayments","query","response","error","PaymentDrawer","setOpenPaymentModal","openPaymentModal","id","MTRef","enqueueSnackbar","state","setState","columns","field","title","sorting","render","rowData","paymentId","headerStyle","display","cellStyle","paddingLeft","cartItem","amount","toFixed","tooltip","created_at","format","feeKind","case","subscriptionKind","marginLeft","width","fontFamily","fonts","primaryFontBold","textAlign","refundedAt","fontSize","fontStyle","Number","refundAmount","data","Promise","resolve","params","page","perPage","filter","orderBy","sort","sortDirection","orderDirection","stringParams","filterSting","stringify","filterValues","arrayFormat","isEmpty","then","result","total","catch","variant","lastPage","marginBottom","require","padding","length","Bold","span","primaryFontSemiBold","disabled","Title","div"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,iCAAnC;AACA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,gBAArC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,eADF,EAEEC,cAFF,EAGEC,YAHF,QAIO,4BAJP;AAKA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;;AAEA,eAAeC,WAAf,CAA2BC,KAAK,GAAG,EAAnC,EAAuC;AACrC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACI,WAAZ,CAAwBC,KAAxB,CAAvB;AACA,WAAO,EAAE,GAAGC;AAAL,KAAP;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;;AAED,MAAMC,aAAa,GAAG,CAAC;AACrBC,EAAAA,mBADqB;AAErBC,EAAAA,gBAFqB;AAGrBC,EAAAA,EAHqB;AAIrBC,EAAAA;AAJqB,CAAD,KAKhB;AAAA;;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAsBf,WAAW,EAAvC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMgC,OAAO,GAAG,CACd;AACEC,IAAAA,KAAK,EAAE,WADT;AAEEC,IAAAA,KAAK,EAAE3B,MAAM,CAAC,gBAAD,CAFf;AAGE4B,IAAAA,OAAO,EAAE,KAHX;AAIEC,IAAAA,MAAM,EAAGC,OAAD,iBAAa,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQA,OAAR,aAAQA,OAAR,uBAAQA,OAAO,CAAEC,SAAjB,CAJvB;AAKEC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE;AADE,KALf;AAQEC,IAAAA,SAAS,EAAE;AACTC,MAAAA,WAAW,EAAE;AADJ;AARb,GADc,EAad;AACET,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE3B,MAAM,CAAC,cAAD,CAFf;AAGE4B,IAAAA,OAAO,EAAE,KAHX;AAIEC,IAAAA,MAAM,EAAGC,OAAD;AAAA;;AAAA,0BAAa,kDAAOA,OAAP,aAAOA,OAAP,4CAAOA,OAAO,CAAEM,QAAhB,+EAAO,kBAAmBC,MAA1B,0DAAO,sBAA2BC,OAA3B,CAAmC,CAAnC,CAAP,CAAb;AAAA;AAJV,GAbc,EAmBd;AACEZ,IAAAA,KAAK,EAAE,YADT;AAEEC,IAAAA,KAAK,EAAE3B,MAAM,CAAC,YAAD,CAFf;AAGEuC,IAAAA,OAAO,EAAE,qBAHX;AAIEV,IAAAA,MAAM,EAAGC,OAAD,iBACN,0CAAG3B,MAAM,CAACE,cAAc,CAACyB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEU,UAAV,CAAf,CAAN,CAA4CC,MAA5C,CAAmD,YAAnD,CAAH;AALJ,GAnBc,EA2Bd;AACEf,IAAAA,KAAK,EAAE,aADT;AAEEC,IAAAA,KAAK,EAAE3B,MAAM,CAAC,mBAAD,CAFf;AAGE4B,IAAAA,OAAO,EAAE,KAHX;AAIEC,IAAAA,MAAM,EAAGC,OAAD;AAAA;;AAAA,aACN,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,kCAAAA,OAAO,CAAEM,QAAT,0EAAmBM,OAAnB,iBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAAZ,OAAO,SAAP,IAAAA,OAAO,WAAP,6BAAAA,OAAO,CAAEa,IAAT,gEAAeC,gBAAf,MAAoC,OAApC,GACG,cADH,GAEGtC,YAAY,CACVL,cAAc,CAAC6B,OAAD,aAACA,OAAD,6CAACA,OAAO,CAAEM,QAAV,uDAAC,mBAAmBM,OAApB,CADJ,EAEVZ,OAFU,aAEVA,OAFU,uBAEVA,OAAO,CAAEa,IAFC,CAHlB,CADF,gBAUE;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,UAAU,EAAE;AAAd,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXI;AAAA,KAJV;AAiBEb,IAAAA,WAAW,EAAE;AACXc,MAAAA,KAAK,EAAE;AADI;AAjBf,GA3Bc,EAgDd;AACEpB,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,KAAK,EAAE3B,MAAM,CAAC,cAAD,CAFf;AAGE4B,IAAAA,OAAO,EAAE,KAHX;AAIEC,IAAAA,MAAM,EAAGC,OAAD,iBACN;AACE,MAAA,KAAK,EAAE;AACLiB,QAAAA,UAAU,EAAErC,KAAK,CAACsC,KAAN,CAAYC,eADnB;AAELC,QAAAA,SAAS,EAAE;AAFN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,CAAApB,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEqB,UAAT,iBACC,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE,EADL;AAELC,QAAAA,SAAS,EAAE;AAFN,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAMSC,MAAM,CAACxB,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEyB,YAAV,CAAN,CAA8BjB,OAA9B,CAAsC,CAAtC,CANT,MAFF,CADD,gBAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAnBJ,CALJ;AA4BEN,IAAAA,WAAW,EAAE;AACXc,MAAAA,KAAK,EAAE,kBADI;AAEXI,MAAAA,SAAS,EAAE;AAFA;AA5Bf,GAhDc,CAAhB;;AAmFA,QAAMM,IAAI,GAAI1C,KAAD,IACX,IAAI2C,OAAJ,CAAaC,OAAD,IAAa;AAAA;;AACvB,QAAIC,MAAM,GAAG;AACXC,MAAAA,IAAI,EAAE9C,KAAK,CAAC8C,IAAN,GAAa,CADR;AAEXC,MAAAA,OAAO,EAAE,EAFE;AAGXC,MAAAA,MAAM,EAAE;AAHG,KAAb;;AAKA,0BAAIhD,KAAK,CAACiD,OAAV,mDAAI,eAAerC,KAAnB,EAA0B;AACxBiC,MAAAA,MAAM,CAACK,IAAP,GAAclD,KAAK,CAACiD,OAAN,CAAcrC,KAA5B;AACAiC,MAAAA,MAAM,CAACM,aAAP,GAAuBnD,KAAK,CAACoD,cAA7B;AACD;;AACD,QAAIC,YAAY,GAAG,EAAnB;AACA,UAAMC,WAAW,GAAG5D,WAAW,CAAC6D,SAAZ,CAClB;AAAEC,MAAAA,YAAY,EAAE,CAAClD,EAAD;AAAhB,KADkB,EAElB;AAAEmD,MAAAA,WAAW,EAAE;AAAf,KAFkB,CAApB;;AAIA,QAAI,CAACrE,CAAC,CAACsE,OAAF,CAAUb,MAAV,CAAL,EAAwB;AACtBQ,MAAAA,YAAY,GAAI,IAAG3D,WAAW,CAAC6D,SAAZ,CAAsBV,MAAtB,CAA8B,IAAGS,WAAY,EAAhE;AACD;;AACDvD,IAAAA,WAAW,CAACsD,YAAD,CAAX,CACGM,IADH,CACQ,MAAOC,MAAP,IAAkB;AACtB,UAAIA,MAAJ,EAAY;AACVhB,QAAAA,OAAO,CAAC;AACNF,UAAAA,IAAI,EAAEkB,MAAM,CAAClB,IADP;AAENI,UAAAA,IAAI,EAAEc,MAAM,CAACd,IAAP,GAAc,CAFd;AAGNe,UAAAA,KAAK,EAAED,MAAM,CAACC;AAHR,SAAD,CAAP;AAKAnD,QAAAA,QAAQ,CAACkD,MAAD,CAAR;AACD;AACF,KAVH,EAWGE,KAXH,CAWU5D,KAAD,IAAW;AAChBM,MAAAA,eAAe,CAAClB,eAAe,CAACY,KAAD,CAAhB,EAAyB;AACtC6D,QAAAA,OAAO,EAAE;AAD6B,OAAzB,CAAf;AAGArD,MAAAA,QAAQ,CAAC;AAAEgC,QAAAA,IAAI,EAAE,EAAR;AAAYsB,QAAAA,QAAQ,EAAE,CAAtB;AAAyBlB,QAAAA,IAAI,EAAE,CAA/B;AAAkCC,QAAAA,OAAO,EAAE,EAA3C;AAA+Cc,QAAAA,KAAK,EAAE;AAAtD,OAAD,CAAR;AACAjB,MAAAA,OAAO,CAAC;AACNF,QAAAA,IAAI,EAAE,EADA;AAENI,QAAAA,IAAI,EAAE,CAFA;AAGNe,QAAAA,KAAK,EAAE;AAHD,OAAD,CAAP;AAKD,KArBH;AAsBD,GAxCD,CADF;;AA0CA,sBACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAExD,gBADT;AAEE,IAAA,QAAQ,EAAED,mBAFZ;AAGE,IAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAE;AAAE6D,MAAAA,YAAY,EAAE;AAAhB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEC,OAAO,CAAC,uCAAD,CADd;AAEE,IAAA,OAAO,EAAE,MAAM;AACb9D,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,KAJH;AAKE,IAAA,GAAG,EAAC,OALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,eAaE;AAAK,IAAA,KAAK,EAAE;AAAE+D,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,cAAc,EAAE1D,KAAK,CAACuD,QAAN,KAAmB,CADrC;AAEE,IAAA,QAAQ,EAAE,CAAAvD,KAAK,SAAL,IAAAA,KAAK,WAAL,2BAAAA,KAAK,CAAEiC,IAAP,4DAAa0B,MAAb,IAAsB3D,KAAtB,aAAsBA,KAAtB,uCAAsBA,KAAK,CAAEiC,IAA7B,iDAAsB,aAAa0B,MAAnC,GAA4C,EAFxD;AAGE,IAAA,WAAW,EAAE,UAHf;AAIE,IAAA,aAAa,EAAC,EAJhB;AAMIzD,IAAAA,OANJ;AAOI+B,IAAAA,IAPJ;AAQInC,IAAAA,KARJ;AAUE,IAAA,SAAS,MAVX;AAWE,IAAA,KAAK,EAAEE,KAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CALF,CADF;AAqCD,CA3KD;;AA6KA,eAAeN,aAAf;AAEA,MAAMkE,IAAI,GAAGxE,MAAM,CAACyE,IAAK;AACzB;AACA,iBAAiB1E,KAAK,CAACsC,KAAN,CAAYqC,mBAAoB;AACjD,IAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACAA,QAAQ,IACR1E,GAAI;AACR;AACA;AACA;AACA;AACA,KAAM;AACN,CAXA;AAaA,MAAM2E,KAAK,GAAG5E,MAAM,CAAC6E,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA","sourcesContent":["import React, { useState } from \"react\";\nimport { Heading, HyperLink } from \"../../../styles/component/style\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport Drawer from \"../../common/Drawer\";\nimport { Header, ImageWrapper } from \"../DrawerTable\";\nimport labels from \"../../../helpers/labels.json\";\nimport { PAYMENT_STATUS } from \"../../../helpers/constants\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport {\n  getErrorMessage,\n  parseTimeStamp,\n  renderStatus,\n} from \"../../../helpers/functions\";\nimport { useSnackbar } from \"notistack\";\nimport queryString from \"query-string\";\nimport CaseService from \"../../../services/CaseService\";\nimport theme from \"../../../assets/theme\";\nimport styled, { css } from \"styled-components\";\n\nasync function getPayments(query = \"\") {\n  try {\n    const response = await CaseService.getPayments(query);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst PaymentDrawer = ({\n  setOpenPaymentModal,\n  openPaymentModal,\n  id,\n  MTRef,\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const [state, setState] = useState({});\n\n  const columns = [\n    {\n      field: \"paymentId\",\n      title: labels[\"table.order_id\"],\n      sorting: false,\n      render: (rowData) => <Title>{rowData?.paymentId}</Title>,\n      headerStyle: {\n        display: \"flex\",\n      },\n      cellStyle: {\n        paddingLeft: 32,\n      },\n    },\n    {\n      field: \"amount\",\n      title: labels[\"table.amount\"],\n      sorting: false,\n      render: (rowData) => <>INR {rowData?.cartItem?.amount?.toFixed(2)}</>,\n    },\n    {\n      field: \"created_at\",\n      title: labels[\"table.date\"],\n      tooltip: \"Date of transaction\",\n      render: (rowData) => (\n        <>{moment(parseTimeStamp(rowData?.created_at)).format(\"DD/MM/YYYY\")}</>\n      ),\n    },\n    {\n      field: \"description\",\n      title: labels[\"table.description\"],\n      sorting: false,\n      render: (rowData) =>\n        rowData?.cartItem?.feeKind ? (\n          <div>\n            {rowData?.case?.subscriptionKind === \"adhoc\"\n              ? \"Platform Fee\"\n              : renderStatus(\n                  PAYMENT_STATUS[rowData?.cartItem?.feeKind],\n                  rowData?.case\n                )}\n          </div>\n        ) : (\n          <div style={{ marginLeft: 35 }}>-</div>\n        ),\n      headerStyle: {\n        width: \"150px !important\",\n      },\n    },\n    {\n      field: \"status\",\n      title: labels[\"table.status\"],\n      sorting: false,\n      render: (rowData) => (\n        <div\n          style={{\n            fontFamily: theme.fonts.primaryFontBold,\n            textAlign: \"center\",\n          }}\n        >\n          {rowData?.refundedAt ? (\n            <>\n              <div>Refunded</div>\n              <div\n                style={{\n                  fontSize: 10,\n                  fontStyle: \"italic\",\n                }}\n              >\n                ( INR {Number(rowData?.refundAmount).toFixed(2)})\n              </div>\n            </>\n          ) : (\n            <div>Completed</div>\n          )}\n        </div>\n      ),\n      headerStyle: {\n        width: \"150px !important\",\n        textAlign: \"center\",\n      },\n    },\n  ];\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        filter: \"caseId\",\n      };\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n      const filterSting = queryString.stringify(\n        { filterValues: [id] },\n        { arrayFormat: \"index\" }\n      );\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}&${filterSting}`;\n      }\n      getPayments(stringParams)\n        .then(async (result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n  return (\n    <Drawer\n      state={openPaymentModal}\n      setState={setOpenPaymentModal}\n      label=\"Drawer\"\n    >\n      <div>\n        <Header>\n          <Heading style={{ marginBottom: \"unset\" }}>Payments</Heading>\n          <ImageWrapper>\n            <img\n              src={require(\"../../../assets/images/closeModal.svg\")}\n              onClick={() => {\n                setOpenPaymentModal(false);\n              }}\n              alt=\"close\"\n            />\n          </ImageWrapper>\n        </Header>\n        <div style={{ padding: 20 }}>\n          <CustomTable\n            hidePagination={state.lastPage === 1}\n            pageSize={state?.data?.length ? state?.data?.length : 10}\n            pluralTitle={\"Payments\"}\n            singularTitle=\"\"\n            {...{\n              columns,\n              data,\n              MTRef,\n            }}\n            noToolbar\n            state={state}\n          />\n        </div>\n      </div>\n    </Drawer>\n  );\n};\n\nexport default PaymentDrawer;\n\nconst Bold = styled.span`\n  cursor: pointer;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  ${({ disabled }) =>\n    disabled &&\n    css`\n      cursor: not-allowed;\n      & .add_circle {\n        cursor: not-allowed !important;\n      }\n    `}\n`;\n\nconst Title = styled.div`\n  margin-left: 35px;\n  @media (min-width: 780px) {\n    margin-left: 0;\n    text-decoration: none;\n    cursor: inherit;\n    width: 90px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}