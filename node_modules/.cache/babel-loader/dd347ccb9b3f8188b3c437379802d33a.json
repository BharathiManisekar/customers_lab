{"ast":null,"code":"import PartyService from \"../../../../services/PartyService\";\nimport { getErrorMessage } from \"../../../../helpers/functions\";\nimport { navigate } from \"@reach/router\";\nexport async function createParty(payload, enqueueSnackbar, draftId = null, setLoader = () => {}) {\n  try {\n    setLoader({\n      state: true,\n      message: \"Creating Party\"\n    });\n    console.log(\"creating party\");\n    let response = null;\n\n    if (draftId) {\n      response = await PartyService.submitPartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createParty(payload);\n    }\n\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\"\n      });\n      navigate(\"/dashboard/parties\");\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  } finally {\n    setLoader({\n      state: false\n    });\n  }\n}\nexport async function createCaseParty(payload, enqueueSnackbar, draftId = null, resolutionKind, setLoader = () => {}) {\n  try {\n    setLoader({\n      state: true,\n      message: \"Creating Party\"\n    });\n    console.log(\"creating party\");\n    let response = null;\n\n    if (draftId) {\n      response = await PartyService.submitPartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createParty(payload);\n    }\n\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\"\n      });\n      navigate(`/dashboard/cases/create?caseType=${resolutionKind}`);\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  } finally {\n    setLoader({\n      state: false\n    });\n  }\n}\nexport async function draftParty(payload, enqueueSnackbar, draftId = null, setLoader = () => {}) {\n  console.log(\"creating draft\");\n\n  try {\n    setLoader({\n      state: true,\n      message: \"Saving Draft...\"\n    });\n    let response = null;\n\n    if (draftId) {\n      response = await PartyService.updatePartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createPartyDraft(payload);\n    }\n\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\"\n      });\n      navigate(\"/dashboard/parties\");\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  } finally {\n    setLoader({\n      state: false\n    });\n  }\n}\nexport async function getPartyOrDraft(id, setter = () => {}, enqueueSnackbar = () => {}, setLoader = () => {}) {\n  try {\n    setLoader({\n      state: true,\n      message: \"Fetching party details...\"\n    });\n    const response = await PartyService.getPartyOrDraft(id);\n\n    if (response) {\n      setter(response);\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  } finally {\n    setLoader({\n      state: false\n    });\n  }\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateParty/API/index.js"],"names":["PartyService","getErrorMessage","navigate","createParty","payload","enqueueSnackbar","draftId","setLoader","state","message","console","log","response","submitPartyDraft","variant","error","createCaseParty","resolutionKind","draftParty","updatePartyDraft","createPartyDraft","getPartyOrDraft","id","setter"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,mCAAzB;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,QAAT,QAAyB,eAAzB;AAEA,OAAO,eAAeC,WAAf,CACLC,OADK,EAELC,eAFK,EAGLC,OAAO,GAAG,IAHL,EAILC,SAAS,GAAG,MAAM,CAAE,CAJf,EAKL;AACA,MAAI;AACFA,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIN,OAAJ,EAAa;AACXM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACa,gBAAb,CAA8BT,OAA9B,EAAuCE,OAAvC,CAAjB;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACG,WAAb,CAAyBC,OAAzB,CAAjB;AACD;;AACD,QAAIQ,QAAJ,EAAc;AACZP,MAAAA,eAAe,CAACO,QAAQ,CAACH,OAAV,EAAmB;AAChCK,QAAAA,OAAO,EAAE;AADuB,OAAnB,CAAf;AAGAZ,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,GAfD,CAeE,OAAOa,KAAP,EAAc;AACd,UAAMN,OAAO,GAAGR,eAAe,CAACc,KAAD,CAA/B;AACAV,IAAAA,eAAe,CAACI,OAAD,EAAU;AACvBK,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GApBD,SAoBU;AACRP,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAT;AACD;AACF;AAED,OAAO,eAAeQ,eAAf,CACLZ,OADK,EAELC,eAFK,EAGLC,OAAO,GAAG,IAHL,EAILW,cAJK,EAKLV,SAAS,GAAG,MAAM,CAAE,CALf,EAML;AACA,MAAI;AACFA,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIN,OAAJ,EAAa;AACXM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACa,gBAAb,CAA8BT,OAA9B,EAAuCE,OAAvC,CAAjB;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACG,WAAb,CAAyBC,OAAzB,CAAjB;AACD;;AACD,QAAIQ,QAAJ,EAAc;AACZP,MAAAA,eAAe,CAACO,QAAQ,CAACH,OAAV,EAAmB;AAChCK,QAAAA,OAAO,EAAE;AADuB,OAAnB,CAAf;AAGAZ,MAAAA,QAAQ,CAAE,oCAAmCe,cAAe,EAApD,CAAR;AACD;AACF,GAfD,CAeE,OAAOF,KAAP,EAAc;AACd,UAAMN,OAAO,GAAGR,eAAe,CAACc,KAAD,CAA/B;AACAV,IAAAA,eAAe,CAACI,OAAD,EAAU;AACvBK,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GApBD,SAoBU;AACRP,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAT;AACD;AACF;AAED,OAAO,eAAeU,UAAf,CACLd,OADK,EAELC,eAFK,EAGLC,OAAO,GAAG,IAHL,EAILC,SAAS,GAAG,MAAM,CAAE,CAJf,EAKL;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;;AACA,MAAI;AACFJ,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAT;AACA,QAAIG,QAAQ,GAAG,IAAf;;AACA,QAAIN,OAAJ,EAAa;AACXM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACmB,gBAAb,CAA8Bf,OAA9B,EAAuCE,OAAvC,CAAjB;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,GAAG,MAAMZ,YAAY,CAACoB,gBAAb,CAA8BhB,OAA9B,CAAjB;AACD;;AACD,QAAIQ,QAAJ,EAAc;AACZP,MAAAA,eAAe,CAACO,QAAQ,CAACH,OAAV,EAAmB;AAChCK,QAAAA,OAAO,EAAE;AADuB,OAAnB,CAAf;AAGAZ,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD;AACF,GAdD,CAcE,OAAOa,KAAP,EAAc;AACd,UAAMN,OAAO,GAAGR,eAAe,CAACc,KAAD,CAA/B;AACAV,IAAAA,eAAe,CAACI,OAAD,EAAU;AACvBK,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GAnBD,SAmBU;AACRP,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAT;AACD;AACF;AAED,OAAO,eAAea,eAAf,CACLC,EADK,EAELC,MAAM,GAAG,MAAM,CAAE,CAFZ,EAGLlB,eAAe,GAAG,MAAM,CAAE,CAHrB,EAILE,SAAS,GAAG,MAAM,CAAE,CAJf,EAKL;AACA,MAAI;AACFA,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAD,CAAT;AACA,UAAMG,QAAQ,GAAG,MAAMZ,YAAY,CAACqB,eAAb,CAA6BC,EAA7B,CAAvB;;AACA,QAAIV,QAAJ,EAAc;AACZW,MAAAA,MAAM,CAACX,QAAD,CAAN;AACD;AACF,GAND,CAME,OAAOG,KAAP,EAAc;AACd,UAAMN,OAAO,GAAGR,eAAe,CAACc,KAAD,CAA/B;AACAV,IAAAA,eAAe,CAACI,OAAD,EAAU;AACvBK,MAAAA,OAAO,EAAE;AADc,KAAV,CAAf;AAGD,GAXD,SAWU;AACRP,IAAAA,SAAS,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CAAT;AACD;AACF","sourcesContent":["import PartyService from \"../../../../services/PartyService\";\nimport { getErrorMessage } from \"../../../../helpers/functions\";\nimport { navigate } from \"@reach/router\";\n\nexport async function createParty(\n  payload,\n  enqueueSnackbar,\n  draftId = null,\n  setLoader = () => {}\n) {\n  try {\n    setLoader({ state: true, message: \"Creating Party\" });\n    console.log(\"creating party\");\n    let response = null;\n    if (draftId) {\n      response = await PartyService.submitPartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createParty(payload);\n    }\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\",\n      });\n      navigate(\"/dashboard/parties\");\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\",\n    });\n  } finally {\n    setLoader({ state: false });\n  }\n}\n\nexport async function createCaseParty(\n  payload,\n  enqueueSnackbar,\n  draftId = null,\n  resolutionKind,\n  setLoader = () => {}\n) {\n  try {\n    setLoader({ state: true, message: \"Creating Party\" });\n    console.log(\"creating party\");\n    let response = null;\n    if (draftId) {\n      response = await PartyService.submitPartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createParty(payload);\n    }\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\"\n      });\n      navigate(`/dashboard/cases/create?caseType=${resolutionKind}`)\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\"\n    });\n  } finally {\n    setLoader({ state: false });\n  }\n}\n\nexport async function draftParty(\n  payload,\n  enqueueSnackbar,\n  draftId = null,\n  setLoader = () => {}\n) {\n  console.log(\"creating draft\");\n  try {\n    setLoader({ state: true, message: \"Saving Draft...\" });\n    let response = null;\n    if (draftId) {\n      response = await PartyService.updatePartyDraft(payload, draftId);\n    } else {\n      response = await PartyService.createPartyDraft(payload);\n    }\n    if (response) {\n      enqueueSnackbar(response.message, {\n        variant: \"success\",\n      });\n      navigate(\"/dashboard/parties\");\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\",\n    });\n  } finally {\n    setLoader({ state: false });\n  }\n}\n\nexport async function getPartyOrDraft(\n  id,\n  setter = () => {},\n  enqueueSnackbar = () => {},\n  setLoader = () => {}\n) {\n  try {\n    setLoader({ state: true, message: \"Fetching party details...\" });\n    const response = await PartyService.getPartyOrDraft(id);\n    if (response) {\n      setter(response);\n    }\n  } catch (error) {\n    const message = getErrorMessage(error);\n    enqueueSnackbar(message, {\n      variant: \"error\",\n    });\n  } finally {\n    setLoader({ state: false });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}