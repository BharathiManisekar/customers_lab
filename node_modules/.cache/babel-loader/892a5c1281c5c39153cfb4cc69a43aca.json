{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/providers/Providers.js\";\nimport React, { useRef } from \"react\";\nimport { SnackbarProvider } from \"notistack\";\nimport { makeStyles } from \"@material-ui/core\";\nimport COLORS from \"../assets/Colors\";\nimport UserProvider from \"./UserProvider\";\nimport LoaderProvider from \"./LoaderProvider\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport CartCountProvider from \"./cartCountProvider\";\nimport AlertProvider from \"./AlertProvider\";\nimport { SnackbarButton } from \"../styles/component/style\";\nimport DialogProvider from \"./dialogProvider\";\nimport TranslatorProvider from \"./TranslaterProvider\";\nimport NotificationProvider from \"./NotifcationProvider\";\nimport SettingsProvider from \"./SettingsProvider\";\nconst useStyles = makeStyles(() => ({\n  success: {\n    backgroundColor: COLORS.BTN_GREEN\n  }\n}));\nexport default function Providers({\n  children\n}) {\n  const classes = useStyles();\n  const snackBarRef = useRef();\n  return /*#__PURE__*/React.createElement(SnackbarProvider, {\n    maxSnack: 1,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    ref: snackBarRef,\n    action: key => /*#__PURE__*/React.createElement(SnackbarButton, {\n      onClick: () => {\n        var _snackBarRef$current;\n\n        return snackBarRef === null || snackBarRef === void 0 ? void 0 : (_snackBarRef$current = snackBarRef.current) === null || _snackBarRef$current === void 0 ? void 0 : _snackBarRef$current.closeSnackbar(key);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }, \"Dismiss\"),\n    classes: {\n      variantSuccess: classes.success\n    },\n    autoHideDuration: 4000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TranslatorProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SettingsProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(AlertProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LoaderProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DialogProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(UserProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(NotificationProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CartCountProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }\n  }, children))))))))));\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/providers/Providers.js"],"names":["React","useRef","SnackbarProvider","makeStyles","COLORS","UserProvider","LoaderProvider","MuiPickersUtilsProvider","MomentUtils","CartCountProvider","AlertProvider","SnackbarButton","DialogProvider","TranslatorProvider","NotificationProvider","SettingsProvider","useStyles","success","backgroundColor","BTN_GREEN","Providers","children","classes","snackBarRef","vertical","horizontal","key","current","closeSnackbar","variantSuccess"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,2BAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,oBAAP,MAAiC,uBAAjC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAC,OAAO;AAClCc,EAAAA,OAAO,EAAE;AAAEC,IAAAA,eAAe,EAAEd,MAAM,CAACe;AAA1B;AADyB,CAAP,CAAD,CAA5B;AAIA,eAAe,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAAiC;AAC9C,QAAMC,OAAO,GAAGN,SAAS,EAAzB;AACA,QAAMO,WAAW,GAAGtB,MAAM,EAA1B;AAEA,sBACE,oBAAC,gBAAD;AACE,IAAA,QAAQ,EAAE,CADZ;AAEE,IAAA,YAAY,EAAE;AACZuB,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KAFhB;AAME,IAAA,GAAG,EAAEF,WANP;AAOE,IAAA,MAAM,EAAGG,GAAD,iBACN,oBAAC,cAAD;AACE,MAAA,OAAO,EAAE;AAAA;;AAAA,eAAMH,WAAN,aAAMA,WAAN,+CAAMA,WAAW,CAAEI,OAAnB,yDAAM,qBAAsBC,aAAtB,CAAoCF,GAApC,CAAN;AAAA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARJ;AAcE,IAAA,OAAO,EAAE;AAAEG,MAAAA,cAAc,EAAEP,OAAO,CAACL;AAA1B,KAdX;AAeE,IAAA,gBAAgB,EAAE,IAfpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAiBE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAET,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBa,QAApB,CADF,CADF,CADF,CADF,CADF,CADF,CADF,CADF,CAjBF,CADF;AAqCD","sourcesContent":["import React, { useRef } from \"react\";\nimport { SnackbarProvider } from \"notistack\";\nimport { makeStyles } from \"@material-ui/core\";\nimport COLORS from \"../assets/Colors\";\nimport UserProvider from \"./UserProvider\";\nimport LoaderProvider from \"./LoaderProvider\";\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport MomentUtils from \"@date-io/moment\";\nimport CartCountProvider from \"./cartCountProvider\";\nimport AlertProvider from \"./AlertProvider\";\nimport { SnackbarButton } from \"../styles/component/style\";\nimport DialogProvider from \"./dialogProvider\";\nimport TranslatorProvider from \"./TranslaterProvider\";\nimport NotificationProvider from \"./NotifcationProvider\";\nimport SettingsProvider from \"./SettingsProvider\";\n\nconst useStyles = makeStyles(() => ({\n  success: { backgroundColor: COLORS.BTN_GREEN },\n}));\n\nexport default function Providers({ children }) {\n  const classes = useStyles();\n  const snackBarRef = useRef();\n\n  return (\n    <SnackbarProvider\n      maxSnack={1}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\",\n      }}\n      ref={snackBarRef}\n      action={(key) => (\n        <SnackbarButton\n          onClick={() => snackBarRef?.current?.closeSnackbar(key)}\n        >\n          Dismiss\n        </SnackbarButton>\n      )}\n      classes={{ variantSuccess: classes.success }}\n      autoHideDuration={4000}\n    >\n      <TranslatorProvider>\n        <MuiPickersUtilsProvider utils={MomentUtils}>\n          <SettingsProvider>\n            <AlertProvider>\n              <LoaderProvider>\n                <DialogProvider>\n                  <UserProvider>\n                    <NotificationProvider>\n                      <CartCountProvider>{children}</CartCountProvider>\n                    </NotificationProvider>\n                  </UserProvider>\n                </DialogProvider>\n              </LoaderProvider>\n            </AlertProvider>\n          </SettingsProvider>\n        </MuiPickersUtilsProvider>\n      </TranslatorProvider>\n    </SnackbarProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}