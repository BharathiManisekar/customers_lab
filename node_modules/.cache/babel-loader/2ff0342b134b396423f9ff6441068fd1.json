{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase3/index.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2;\n\nimport React, { Fragment, useState, useEffect, useRef, createRef } from \"react\";\nimport { Container, Heading, Subheading, FormContainer, BackArrow, TableWrapper, HyperLink, ButtonWrapper, DeleteIcon, TableContainer, MonetaryText, Row, FormControl, Seperator, OuterContainer, BigTable, SmallTable, Details, LabelValueContainer, Label, Value, Delete } from \"./Styles\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { navigate } from \"@reach/router\";\nimport _ from \"lodash\";\nimport { Formik } from \"formik\";\nimport { PrimaryOutlinedCTAButton, PrimaryCTAButton, SecondaryCTAButton } from \"../../common/Buttons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { CustomInputField } from \"../../common/FormInputs\";\nimport CaseService from \"../../../services/CaseService\";\nimport { CreateCaseStep3Schema } from \"../../../helpers/validationSchema\";\nimport AWSService from \"../../../services/AWSService\";\nimport { useSnackbar } from \"notistack\";\nimport { formatNumberToMetrics, getErrorMessage } from \"../../../helpers/functions\";\nimport DescriptionModal from \"./components/DescriptionModal\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { Tooltip } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport { MAX_ROUND_TO_END, MAX_ROUND_TO_START } from \"../../../helpers/constants\";\nimport NumberFormat from \"react-number-format\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport AlertDialog from \"../../common/Alert\";\nconst useStyles = makeStyles({\n  table: {\n    backgroundColor: \"transparent\",\n    borderRadius: 7,\n    \"& .MuiTableCell-root\": {\n      borderBottom: 0\n    }\n  },\n  tableHead: {\n    fontFamily: theme.fonts.primaryFontSemiBold,\n    color: COLORS.INPUT_LABEL,\n    fontSize: 10,\n    paddingBottom: 0\n  },\n  row: {\n    borderBottom: `1px solid ${COLORS.INPUT_BORDER}`\n  },\n  radioGroup: {\n    \"& .MuiRadio-colorPrimary.Mui-checked\": {\n      color: COLORS.BTN_GREEN\n    }\n  },\n  formLabel: {\n    fontFamily: theme.fonts.primaryFontRegular,\n    color: COLORS.COLOR_DARK,\n    marginRight: 5 // minWidth: 98,\n\n  },\n  radioButton: {\n    color: COLORS.BTN_GREEN\n  }\n});\n\nconst Index = ({\n  caseId\n}) => {\n  var _caseObj$caseItems;\n\n  const breadcrumbs = [\"My Cases\", \"Create New Case\"];\n  const classes = useStyles();\n  const [caseObj, setCaseObj] = useState({});\n  const fileRef = useRef([]);\n  const formikRef = useRef();\n  const [length, setLength] = useState(1);\n  const {\n    setTriggerCount\n  } = useCartCount();\n  const [maximumRounds, setMaximumRounds] = useState([]);\n  const {\n    hideAlert,\n    showAlert\n  } = useAlert();\n  const [dialogData, setDialogData] = useState(false);\n  const [open, setOpen] = useState(false);\n  const initialState = {\n    title: \"\",\n    claimValue: null,\n    unit: \"INR\",\n    description: \"\",\n    description_document_url: \"\"\n  };\n  const [modal, setModal] = useState({\n    state: false\n  });\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setLoader\n  } = useLoader();\n  useEffect(() => {\n    window.scroll(0, 0);\n    const tempArray = [];\n\n    for (let index = MAX_ROUND_TO_START; index <= MAX_ROUND_TO_END; index++) {\n      let tempObj = {};\n      tempObj = {\n        label: index,\n        value: index\n      };\n      tempArray.push(tempObj);\n    }\n\n    setMaximumRounds(tempArray);\n  }, []);\n  useEffect(() => {\n    async function getCase(caseId) {\n      setLoader({\n        state: true\n      });\n\n      try {\n        const response = await CaseService.getCase(caseId);\n\n        if (response) {\n          setCaseObj(response);\n\n          if (response.caseItems.length > 0) {\n            setLength(response.caseItems.length);\n          }\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n\n    if (caseId) {\n      getCase(caseId);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [caseId]);\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length).fill().map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const onBreadcrumbClick = selected => {\n    switch (_.snakeCase(selected)) {\n      case \"my_cases\":\n        navigate(\"/dashboard/cases\");\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const addClaimItems = (values, setFieldValue) => {\n    var _values$claim_items;\n\n    const new_claim_items = [...(values === null || values === void 0 ? void 0 : values.claim_items), {\n      title: \"\",\n      claimValue: \"\",\n      caseId,\n      unit: \"INR\",\n      description: \"\",\n      description_document_url: \"\",\n      index: (values === null || values === void 0 ? void 0 : (_values$claim_items = values.claim_items) === null || _values$claim_items === void 0 ? void 0 : _values$claim_items.length) || 0\n    }];\n    setLength(new_claim_items.length);\n    setFieldValue(\"claim_items\", new_claim_items);\n  };\n\n  const removeClaimItem = (index, values, setFieldValue) => {\n    const new_claim_items = [...(values === null || values === void 0 ? void 0 : values.claim_items)].filter((ci, idx) => idx !== index);\n    setLength(new_claim_items.length);\n    setFieldValue(\"claim_items\", new_claim_items);\n  };\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        setLoader({\n          state: true,\n          message: `Uploading file ${file.name} ...`\n        });\n        const payload = {\n          key: file.name\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Successfully Uploaded\", {\n            variant: \"success\"\n          });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n  }\n\n  async function addClaimItem(claim_item) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        claim_item.claimValue = Number(claim_item.claimValue);\n        const response = await CaseService.createCaseItem(claim_item, caseId, caseObj.claimantParty.id);\n\n        if (response) {\n          resolve({ ...response.caseItem,\n            index: (claim_item === null || claim_item === void 0 ? void 0 : claim_item.index) || 0\n          });\n        }\n\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function updateClaimItem(claim_id, claim_item) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        claim_item.claimValue = Number(claim_item.claimValue);\n        const response = await CaseService.updateCaseItem(caseId, claim_id, claim_item, caseObj.claimantParty.id);\n\n        if (response) {\n          resolve(response.caseItem);\n        }\n\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function deleteClaimItem(id) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await CaseService.deleteCaseItem(caseId, id, caseObj.claimantParty.id);\n\n        if (response) {\n          resolve(response);\n        }\n\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function submitCase(payload) {\n    try {\n      setLoader({\n        state: true,\n        message: \"Submitting form...\"\n      });\n      const response = await CaseService.submitCase(payload, caseId, caseObj.claimantParty.id);\n\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {} finally {\n      setTriggerCount(true);\n      setLoader({\n        state: false\n      });\n      hideAlert();\n    }\n  }\n\n  async function getDeletedItems(orginalData, currentData) {\n    const originalIDs = await _.map(orginalData, \"id\");\n    const currentIDs = await _.map(currentData, \"id\");\n    const deletedIDs = await _.difference(originalIDs, currentIDs);\n    return deletedIDs;\n  }\n\n  async function onFormSubmit(rawValues, props, isDraft) {\n    var _rawValues$claim_item;\n\n    let values = JSON === null || JSON === void 0 ? void 0 : JSON.parse(JSON.stringify(rawValues));\n    values.claim_items = rawValues === null || rawValues === void 0 ? void 0 : (_rawValues$claim_item = rawValues.claim_items) === null || _rawValues$claim_item === void 0 ? void 0 : _rawValues$claim_item.map(ci => {\n      var _ci$claimValue, _ci$claimValue$toStri, _ci$claimValue$toStri2;\n\n      return { ...ci,\n        description_document_url: !_.isEmpty(ci.description_document_url) ? {\n          url: ci.description_document_url || \"\",\n          uploadeType: \"\"\n        } : null,\n        claimValue: ci === null || ci === void 0 ? void 0 : (_ci$claimValue = ci.claimValue) === null || _ci$claimValue === void 0 ? void 0 : (_ci$claimValue$toStri = _ci$claimValue.toString()) === null || _ci$claimValue$toStri === void 0 ? void 0 : (_ci$claimValue$toStri2 = _ci$claimValue$toStri.split(\",\")) === null || _ci$claimValue$toStri2 === void 0 ? void 0 : _ci$claimValue$toStri2.join(\"\")\n      };\n    });\n\n    try {\n      var _caseObj$claimantPart;\n\n      setLoader({\n        state: true,\n        message: \"Submitting form...\"\n      });\n      const new_claim_items = values.claim_items.filter(ci => !ci.id);\n      const old_claim_items = values.claim_items.filter(ci => ci.id);\n      const deleted_claim_items = await getDeletedItems(caseObj.caseItems, old_claim_items);\n      let count = 0;\n      let finalClaimItems = values.claim_items.map((el, index) => {\n        return { ...el,\n          index\n        };\n      });\n\n      if (deleted_claim_items) {\n        count = -deleted_claim_items.length;\n\n        for (const claim_item_id of deleted_claim_items) {\n          const deleted_item = await deleteClaimItem(claim_item_id);\n\n          if (deleted_item) {\n            count += 1;\n          }\n        }\n      }\n\n      if (new_claim_items) {\n        for (const claim_item of new_claim_items) {\n          if (claim_item.title && claim_item.claimValue) {\n            const addedItem = await addClaimItem(claim_item);\n\n            if (addedItem.id) {\n              const index = _.findIndex(finalClaimItems, ci => (ci === null || ci === void 0 ? void 0 : ci.index) === (addedItem === null || addedItem === void 0 ? void 0 : addedItem.index));\n\n              finalClaimItems[index] = addedItem;\n              setCaseObj({ ...caseObj,\n                caseItems: finalClaimItems\n              });\n              count += 1;\n            }\n          }\n        }\n      }\n\n      if (old_claim_items) {\n        for (const claim_item of old_claim_items) {\n          const addedItem = await updateClaimItem(claim_item.id, claim_item);\n\n          if (addedItem.id) {\n            const index = _.findIndex(finalClaimItems, ci => (ci === null || ci === void 0 ? void 0 : ci.id) === (addedItem === null || addedItem === void 0 ? void 0 : addedItem.id));\n\n            finalClaimItems[index] = addedItem;\n            count += 1;\n          }\n        }\n      }\n      /** Service call to update the Negotiation Limit */\n\n\n      const details_response = await CaseService.updateDraft(values, caseId, (_caseObj$claimantPart = caseObj.claimantParty) === null || _caseObj$claimantPart === void 0 ? void 0 : _caseObj$claimantPart.id);\n\n      if (count === values.claim_items.length) {\n        if (props === null || props === void 0 ? void 0 : props.setFieldValue) props.setFieldValue(\"claim_items\", finalClaimItems);\n\n        const payload = _.pick(caseObj, [\"respondentKind\", \"respondentName\", \"respondentPanNumber\", \"respondentEmail\", \"respondentMobile\", \"description\", \"description_document_url\", \"agreement_urls\", \"title\"]);\n\n        if (!isDraft) {\n          var _await$CaseService$ge, _await$CaseService$ge2;\n\n          const registrationFee = ((_await$CaseService$ge = await CaseService.getCase(caseId, \"?estimateFeeKind=registrationFee\")) === null || _await$CaseService$ge === void 0 ? void 0 : _await$CaseService$ge.fee) || {};\n          const negotiationSuccessFee = ((_await$CaseService$ge2 = await CaseService.getCase(caseId, \"?estimateFeeKind=successFee\")) === null || _await$CaseService$ge2 === void 0 ? void 0 : _await$CaseService$ge2.fee) || {};\n          showAlert({\n            heading: \"Payment Information\",\n            desc: /*#__PURE__*/React.createElement(DetailsAlertmodal, {\n              negotiationSuccessFee,\n              registrationFee,\n              caseObj,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 15\n              }\n            }),\n            primaryBtnText: \"Add to Cart\",\n            secondaryBtnText: \"Cancel\",\n            clickSecondarybtn: () => {\n              hideAlert();\n            },\n            clickPrimaryBtn: () => submitCase(payload),\n            isOpen: true,\n            onDialogClose: () => {\n              hideAlert();\n            },\n            descriptionTextStyle: {\n              textAlign: \"left\"\n            }\n          });\n        } else {\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\"\n          });\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      } else {\n        if (details_response) {\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\"\n          });\n        }\n\n        navigate(\"/dashboard/cases?caseType=negotiation\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setTriggerCount(true);\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  function renderClaimValue(values) {\n    try {\n      var _values$claim_items2, _values$claim_items2$;\n\n      const sum = _.sum(values === null || values === void 0 ? void 0 : (_values$claim_items2 = values.claim_items) === null || _values$claim_items2 === void 0 ? void 0 : (_values$claim_items2$ = _values$claim_items2.filter(f => f.unit === \"INR\")) === null || _values$claim_items2$ === void 0 ? void 0 : _values$claim_items2$.map(f => {\n        var _f$claimValue, _f$claimValue$toStrin, _f$claimValue$toStrin2;\n\n        if (f === null || f === void 0 ? void 0 : f.claimValue) return Number(f === null || f === void 0 ? void 0 : (_f$claimValue = f.claimValue) === null || _f$claimValue === void 0 ? void 0 : (_f$claimValue$toStrin = _f$claimValue.toString()) === null || _f$claimValue$toStrin === void 0 ? void 0 : (_f$claimValue$toStrin2 = _f$claimValue$toStrin.split(\",\")) === null || _f$claimValue$toStrin2 === void 0 ? void 0 : _f$claimValue$toStrin2.join(\"\"));\n      }));\n\n      if (sum) return formatNumberToMetrics(parseFloat(sum).toFixed(2).toString(), \"INR\");else return 0;\n    } catch (error) {\n      return 0;\n    }\n  }\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n\n\n  const deleteDraft = async id => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Deleting Cases...\"\n      });\n      const res = await CaseService.deleteDraftCase(id);\n\n      if (res === null || res === void 0 ? void 0 : res.message) {\n        enqueueSnackbar(res === null || res === void 0 ? void 0 : res.message, {\n          variant: \"success\"\n        });\n\n        if ((caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"mediation\") {\n          navigate(\"/dashboard/cases?caseType=mediation\");\n        } else {\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n      setOpen(false);\n    }\n  };\n  /**\n   * @description Function to show the delete warning\n   * @param {*} id\n   */\n\n\n  const deleteWaring = id => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () => deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\"\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(OuterContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ActionBar, {\n    breadcrumbs,\n    onBreadcrumbClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: \"CreateCase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BackArrow, {\n    onClick: () => navigate(`/dashboard/cases/create/${caseId}/step-2?caseType=${caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentKind}`),\n    src: require(\"../../../assets/images/backArrow.svg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }\n  }), \"Create New Case (3/ 3)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delete\",\n    onClick: () => deleteWaring(caseId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: require(\"../../../assets/images/delete.svg\"),\n    alt: \"delete Icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(TooltipHeading, {\n    tooltip: \"Claim Items for the case\",\n    style: {\n      marginBottom: \"unset\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 9\n    }\n  }, \"Enter Claim Items\"), /*#__PURE__*/React.createElement(Formik, {\n    innerRef: formikRef,\n    initialValues: {\n      negotiationRoundLimit: (caseObj === null || caseObj === void 0 ? void 0 : caseObj.negotiationRoundLimit) || MAX_ROUND_TO_START,\n      claim_items: (caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$caseItems = caseObj.caseItems) === null || _caseObj$caseItems === void 0 ? void 0 : _caseObj$caseItems.length) ? _.map(caseObj === null || caseObj === void 0 ? void 0 : caseObj.caseItems, ci => {\n        var _ci$description_docum;\n\n        return { ...ci,\n          claimValue: parseFloat(ci.claimValue).toFixed(2),\n          // unit: ci.unit || \"INR\", // Comment for always its going to INR\n          unit: \"INR\",\n          description_document_url: ((_ci$description_docum = ci.description_document_url) === null || _ci$description_docum === void 0 ? void 0 : _ci$description_docum.url) || \"\"\n        };\n      }) : [initialState] || [initialState]\n    },\n    onSubmit: onFormSubmit,\n    enableReinitialize: true,\n    validationSchema: CreateCaseStep3Schema,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validateOnMount: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    errors,\n    handleSubmit,\n    touched,\n    setFieldError,\n    setFieldValue,\n    handleBlur,\n    isValid,\n    setFieldTouched\n  }) => {\n    var _values$claim_items3, _values$claim_items5;\n\n    return /*#__PURE__*/React.createElement(FormContainer, {\n      className: \"claim-table\",\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BigTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: window.innerWidth <= 1441 ? 183 : 253\n      },\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 27\n      }\n    }, \"Claim Item\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 29\n      }\n    }, \" *\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: 150\n      },\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 27\n      }\n    }, \"Claim Value\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 29\n      }\n    }, \" *\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: 180\n      },\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 27\n      }\n    }, \"Unit \", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"required-star\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 34\n      }\n    }, \" *\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: window.innerWidth <= 1441 ? 250 : 350\n      },\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 27\n      }\n    }, \"Supporting Document\", \" \", /*#__PURE__*/React.createElement(SuperTextSm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 29\n      }\n    }, \"(pdf, mp3, mp4, mov, docx or image)\")), /*#__PURE__*/React.createElement(TableCell, {\n      style: {\n        width: 218\n      },\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 27\n      }\n    }, \"Claim Description\"), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableHead,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 23\n      }\n    }, values === null || values === void 0 ? void 0 : (_values$claim_items3 = values.claim_items) === null || _values$claim_items3 === void 0 ? void 0 : _values$claim_items3.map((claim_item, index) => {\n      var _values$claim_items4, _errors$claim_items, _errors$claim_items$i, _touched$claim_items, _touched$claim_items$, _errors$claim_items2, _errors$claim_items2$, _touched$claim_items2, _touched$claim_items3, _touched$claim_items4, _touched$claim_items5, _errors$claim_items3, _errors$claim_items3$, _errors$claim_items4, _errors$claim_items4$, _touched$claim_items6, _touched$claim_items7, _touched$claim_items8, _touched$claim_items9, _errors$claim_items5, _errors$claim_items5$, _errors$claim_items6, _errors$claim_items6$;\n\n      return /*#__PURE__*/React.createElement(TableRow, {\n        className: index < (values === null || values === void 0 ? void 0 : (_values$claim_items4 = values.claim_items) === null || _values$claim_items4 === void 0 ? void 0 : _values$claim_items4.length) - 1 ? classes.row : \"table-row\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CustomInputField, {\n        className: \"input-white\",\n        value: claim_item.title,\n        name: `claim_items[${index}].title`,\n        onChange: handleChange,\n        style: {\n          width: window.innerWidth <= 1441 ? 183 : 253\n        },\n        variant: \"outlined\",\n        onBlur: handleBlur,\n        error: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items = errors.claim_items) === null || _errors$claim_items === void 0 ? void 0 : (_errors$claim_items$i = _errors$claim_items[index]) === null || _errors$claim_items$i === void 0 ? void 0 : _errors$claim_items$i.title) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items = touched.claim_items) === null || _touched$claim_items === void 0 ? void 0 : (_touched$claim_items$ = _touched$claim_items[index]) === null || _touched$claim_items$ === void 0 ? void 0 : _touched$claim_items$.title),\n        helperText: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items2 = errors.claim_items) === null || _errors$claim_items2 === void 0 ? void 0 : (_errors$claim_items2$ = _errors$claim_items2[index]) === null || _errors$claim_items2$ === void 0 ? void 0 : _errors$claim_items2$.title) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items2 = touched.claim_items) === null || _touched$claim_items2 === void 0 ? void 0 : (_touched$claim_items3 = _touched$claim_items2[index]) === null || _touched$claim_items3 === void 0 ? void 0 : _touched$claim_items3.title),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 31\n        }\n      }, (touched === null || touched === void 0 ? void 0 : (_touched$claim_items4 = touched.claim_items) === null || _touched$claim_items4 === void 0 ? void 0 : (_touched$claim_items5 = _touched$claim_items4[index]) === null || _touched$claim_items5 === void 0 ? void 0 : _touched$claim_items5.title) && (errors === null || errors === void 0 ? void 0 : (_errors$claim_items3 = errors.claim_items) === null || _errors$claim_items3 === void 0 ? void 0 : (_errors$claim_items3$ = _errors$claim_items3[index]) === null || _errors$claim_items3$ === void 0 ? void 0 : _errors$claim_items3$.title))), /*#__PURE__*/React.createElement(TableCell, {\n        className: \"disabledArrows\",\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NumberFormat, {\n        thousandSeparator: true,\n        thousandsGroupStyle: \"lakh\",\n        isNumericString: true,\n        decimalScale: 2,\n        fixedDecimalScale: true,\n        allowNegative: false,\n        className: \"input-white\",\n        displayType: \"input\",\n        value: claim_item === null || claim_item === void 0 ? void 0 : claim_item.claimValue,\n        type: \"text\",\n        customInput: CustomInputField,\n        name: `claim_items[${index}].claimValue`,\n        onChange: handleChange,\n        style: {\n          width: 140\n        },\n        variant: \"outlined\",\n        error: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items4 = errors.claim_items) === null || _errors$claim_items4 === void 0 ? void 0 : (_errors$claim_items4$ = _errors$claim_items4[index]) === null || _errors$claim_items4$ === void 0 ? void 0 : _errors$claim_items4$.claimValue) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items6 = touched.claim_items) === null || _touched$claim_items6 === void 0 ? void 0 : (_touched$claim_items7 = _touched$claim_items6[index]) === null || _touched$claim_items7 === void 0 ? void 0 : _touched$claim_items7.claimValue),\n        onBlur: e => {\n          setFieldTouched(`claim_items[${index}].claimValue`, true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 33\n        }\n      })), (touched === null || touched === void 0 ? void 0 : (_touched$claim_items8 = touched.claim_items) === null || _touched$claim_items8 === void 0 ? void 0 : (_touched$claim_items9 = _touched$claim_items8[index]) === null || _touched$claim_items9 === void 0 ? void 0 : _touched$claim_items9.claimValue) && (errors === null || errors === void 0 ? void 0 : (_errors$claim_items5 = errors.claim_items) === null || _errors$claim_items5 === void 0 ? void 0 : (_errors$claim_items5$ = _errors$claim_items5[index]) === null || _errors$claim_items5$ === void 0 ? void 0 : _errors$claim_items5$.claimValue) && /*#__PURE__*/React.createElement(HelperText, {\n        style: {\n          whiteSpace: \"nowrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 35\n        }\n      }, errors === null || errors === void 0 ? void 0 : (_errors$claim_items6 = errors.claim_items) === null || _errors$claim_items6 === void 0 ? void 0 : (_errors$claim_items6$ = _errors$claim_items6[index]) === null || _errors$claim_items6$ === void 0 ? void 0 : _errors$claim_items6$.claimValue)), /*#__PURE__*/React.createElement(TableCell, {\n        style: {\n          position: \"relative\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontWeight: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 31\n        }\n      }, claim_item.unit)), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 29\n        }\n      }, !_.isEmpty(claim_item.description_document_url) ? /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginTop: 0,\n          width: 123\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => window.open(claim_item.description_document_url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 35\n        }\n      }, \"View\"), /*#__PURE__*/React.createElement(Seperator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _fileRef$current$inde, _fileRef$current$inde2;\n\n          return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde = fileRef.current[index]) === null || _fileRef$current$inde === void 0 ? void 0 : (_fileRef$current$inde2 = _fileRef$current$inde.current) === null || _fileRef$current$inde2 === void 0 ? void 0 : _fileRef$current$inde2.click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 35\n        }\n      }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _fileRef$current$inde3, _fileRef$current$inde4;\n\n          return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde3 = fileRef.current[index]) === null || _fileRef$current$inde3 === void 0 ? void 0 : (_fileRef$current$inde4 = _fileRef$current$inde3.current) === null || _fileRef$current$inde4 === void 0 ? void 0 : _fileRef$current$inde4.click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 35\n        }\n      }, \"Upload\")), /*#__PURE__*/React.createElement(\"input\", {\n        ref: fileRef.current[index],\n        onChange: e => {\n          var _e$target;\n\n          return s3Upload(e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0], `claim_items[${index}].description_document_url`, setFieldValue, setFieldError);\n        },\n        type: \"file\",\n        accept: \".pdf, .mp3, .mp4, .docx, .mov, image/*\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 31\n        }\n      })), /*#__PURE__*/React.createElement(TableCell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 29\n        }\n      }, !claim_item.description ? /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => setModal({\n          state: true,\n          name: `claim_items[${index}].description`,\n          index\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 33\n        }\n      }, \"Add\") : /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => setModal({\n          state: true,\n          name: `claim_items[${index}].description`,\n          index\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 33\n        }\n      }, \"View\")), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"center\",\n        style: {\n          width: 100\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 29\n        }\n      }, values.claim_items.length > 1 && /*#__PURE__*/React.createElement(DeleteIcon, {\n        onClick: () => removeClaimItem(index, values, setFieldValue),\n        src: require(\"../../../assets/images/removeIcon.svg\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 33\n        }\n      })));\n    })))), /*#__PURE__*/React.createElement(SmallTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 19\n      }\n    }, values === null || values === void 0 ? void 0 : (_values$claim_items5 = values.claim_items) === null || _values$claim_items5 === void 0 ? void 0 : _values$claim_items5.map((claim_item, index) => {\n      var _errors$claim_items7, _errors$claim_items7$, _touched$claim_items10, _touched$claim_items11, _errors$claim_items8, _errors$claim_items8$, _touched$claim_items12, _touched$claim_items13, _touched$claim_items14, _touched$claim_items15, _errors$claim_items9, _errors$claim_items9$, _errors$claim_items10, _errors$claim_items11, _touched$claim_items16, _touched$claim_items17, _touched$claim_items18, _touched$claim_items19, _errors$claim_items12, _errors$claim_items13, _errors$claim_items14, _errors$claim_items15;\n\n      return /*#__PURE__*/React.createElement(Details, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(LabelValueContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 27\n        }\n      }, \"Claim Item\"), /*#__PURE__*/React.createElement(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(CustomInputField, {\n        className: \"input-white\",\n        value: claim_item.title,\n        name: `claim_items[${index}].title`,\n        onChange: handleChange,\n        style: {\n          paddingRight: 15\n        },\n        variant: \"outlined\",\n        onBlur: handleBlur,\n        error: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items7 = errors.claim_items) === null || _errors$claim_items7 === void 0 ? void 0 : (_errors$claim_items7$ = _errors$claim_items7[index]) === null || _errors$claim_items7$ === void 0 ? void 0 : _errors$claim_items7$.title) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items10 = touched.claim_items) === null || _touched$claim_items10 === void 0 ? void 0 : (_touched$claim_items11 = _touched$claim_items10[index]) === null || _touched$claim_items11 === void 0 ? void 0 : _touched$claim_items11.title),\n        helperText: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items8 = errors.claim_items) === null || _errors$claim_items8 === void 0 ? void 0 : (_errors$claim_items8$ = _errors$claim_items8[index]) === null || _errors$claim_items8$ === void 0 ? void 0 : _errors$claim_items8$.title) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items12 = touched.claim_items) === null || _touched$claim_items12 === void 0 ? void 0 : (_touched$claim_items13 = _touched$claim_items12[index]) === null || _touched$claim_items13 === void 0 ? void 0 : _touched$claim_items13.title),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 31\n        }\n      }), /*#__PURE__*/React.createElement(HelperText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 31\n        }\n      }, (touched === null || touched === void 0 ? void 0 : (_touched$claim_items14 = touched.claim_items) === null || _touched$claim_items14 === void 0 ? void 0 : (_touched$claim_items15 = _touched$claim_items14[index]) === null || _touched$claim_items15 === void 0 ? void 0 : _touched$claim_items15.title) && (errors === null || errors === void 0 ? void 0 : (_errors$claim_items9 = errors.claim_items) === null || _errors$claim_items9 === void 0 ? void 0 : (_errors$claim_items9$ = _errors$claim_items9[index]) === null || _errors$claim_items9$ === void 0 ? void 0 : _errors$claim_items9$.title))))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 27\n        }\n      }, \" Claim Description\"), /*#__PURE__*/React.createElement(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 29\n        }\n      }, !claim_item.description ? /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => setModal({\n          state: true,\n          name: `claim_items[${index}].description`,\n          index\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 33\n        }\n      }, \"Add\") : /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => setModal({\n          state: true,\n          name: `claim_items[${index}].description`,\n          index\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 33\n        }\n      }, \"View\")))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 27\n        }\n      }, \"Claim Value\"), /*#__PURE__*/React.createElement(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(InputContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(NumberFormat, {\n        thousandSeparator: true,\n        thousandsGroupStyle: \"lakh\",\n        isNumericString: true,\n        decimalScale: 2,\n        fixedDecimalScale: true,\n        allowNegative: false,\n        className: \"input-white\",\n        displayType: \"input\",\n        value: claim_item === null || claim_item === void 0 ? void 0 : claim_item.claimValue,\n        type: \"text\",\n        customInput: CustomInputField,\n        name: `claim_items[${index}].claimValue`,\n        onChange: handleChange,\n        style: {\n          paddingRight: 15\n        },\n        variant: \"outlined\",\n        error: (errors === null || errors === void 0 ? void 0 : (_errors$claim_items10 = errors.claim_items) === null || _errors$claim_items10 === void 0 ? void 0 : (_errors$claim_items11 = _errors$claim_items10[index]) === null || _errors$claim_items11 === void 0 ? void 0 : _errors$claim_items11.claimValue) && (touched === null || touched === void 0 ? void 0 : (_touched$claim_items16 = touched.claim_items) === null || _touched$claim_items16 === void 0 ? void 0 : (_touched$claim_items17 = _touched$claim_items16[index]) === null || _touched$claim_items17 === void 0 ? void 0 : _touched$claim_items17.claimValue),\n        onBlur: e => {\n          setFieldTouched(`claim_items[${index}].claimValue`, true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 33\n        }\n      })), (touched === null || touched === void 0 ? void 0 : (_touched$claim_items18 = touched.claim_items) === null || _touched$claim_items18 === void 0 ? void 0 : (_touched$claim_items19 = _touched$claim_items18[index]) === null || _touched$claim_items19 === void 0 ? void 0 : _touched$claim_items19.claimValue) && (errors === null || errors === void 0 ? void 0 : (_errors$claim_items12 = errors.claim_items) === null || _errors$claim_items12 === void 0 ? void 0 : (_errors$claim_items13 = _errors$claim_items12[index]) === null || _errors$claim_items13 === void 0 ? void 0 : _errors$claim_items13.claimValue) && /*#__PURE__*/React.createElement(HelperText, {\n        style: {\n          whiteSpace: \"nowrap\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 35\n        }\n      }, errors === null || errors === void 0 ? void 0 : (_errors$claim_items14 = errors.claim_items) === null || _errors$claim_items14 === void 0 ? void 0 : (_errors$claim_items15 = _errors$claim_items14[index]) === null || _errors$claim_items15 === void 0 ? void 0 : _errors$claim_items15.claimValue)))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 27\n        }\n      }, \"Unit\"), /*#__PURE__*/React.createElement(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 927,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 29\n        }\n      }, claim_item.unit))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 932,\n          columnNumber: 27\n        }\n      }, \"Supporting Document\"), /*#__PURE__*/React.createElement(Value, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 933,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"element\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 934,\n          columnNumber: 29\n        }\n      }, !_.isEmpty(claim_item.description_document_url) ? /*#__PURE__*/React.createElement(Row, {\n        style: {\n          marginTop: 0,\n          width: 123\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => window.open(claim_item.description_document_url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 35\n        }\n      }, \"View\"), /*#__PURE__*/React.createElement(Seperator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _fileRef$current$inde5, _fileRef$current$inde6;\n\n          return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde5 = fileRef.current[index]) === null || _fileRef$current$inde5 === void 0 ? void 0 : (_fileRef$current$inde6 = _fileRef$current$inde5.current) === null || _fileRef$current$inde6 === void 0 ? void 0 : _fileRef$current$inde6.click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 35\n        }\n      }, \"Update\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _fileRef$current$inde7, _fileRef$current$inde8;\n\n          return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde7 = fileRef.current[index]) === null || _fileRef$current$inde7 === void 0 ? void 0 : (_fileRef$current$inde8 = _fileRef$current$inde7.current) === null || _fileRef$current$inde8 === void 0 ? void 0 : _fileRef$current$inde8.click();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 35\n        }\n      }, \"Upload\")), /*#__PURE__*/React.createElement(\"input\", {\n        ref: fileRef.current[index],\n        onChange: e => {\n          var _e$target2;\n\n          return s3Upload(e === null || e === void 0 ? void 0 : (_e$target2 = e.target) === null || _e$target2 === void 0 ? void 0 : _e$target2.files[0], `claim_items[${index}].description_document_url`, setFieldValue, setFieldError);\n        },\n        type: \"file\",\n        accept: \".pdf, .mp3, .mp4, .docx, .mov, image/*\",\n        style: {\n          display: \"none\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 31\n        }\n      })))), values.claim_items.length > 1 && /*#__PURE__*/React.createElement(Delete, {\n        onClick: () => removeClaimItem(index, values, setFieldValue),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 27\n        }\n      }, \"Remove\"));\n    })), /*#__PURE__*/React.createElement(ButtonWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(SecondaryCTAButton, {\n      style: {\n        paddingLeft: 0\n      },\n      onClick: () => {\n        var _errors$claim_items16, _errors$claim_items17, _errors$claim_items18, _errors$claim_items19, _errors$claim_items20, _errors$claim_items21;\n\n        if ((errors === null || errors === void 0 ? void 0 : (_errors$claim_items16 = errors.claim_items) === null || _errors$claim_items16 === void 0 ? void 0 : (_errors$claim_items17 = _errors$claim_items16[values.claim_items.length - 1]) === null || _errors$claim_items17 === void 0 ? void 0 : _errors$claim_items17.title) || (errors === null || errors === void 0 ? void 0 : (_errors$claim_items18 = errors.claim_items) === null || _errors$claim_items18 === void 0 ? void 0 : (_errors$claim_items19 = _errors$claim_items18[values.claim_items.length - 1]) === null || _errors$claim_items19 === void 0 ? void 0 : _errors$claim_items19.claimValue) || (errors === null || errors === void 0 ? void 0 : (_errors$claim_items20 = errors.claim_items) === null || _errors$claim_items20 === void 0 ? void 0 : (_errors$claim_items21 = _errors$claim_items20[values.claim_items.length - 1]) === null || _errors$claim_items21 === void 0 ? void 0 : _errors$claim_items21.unit)) return enqueueSnackbar(\"Enter claim items in order to add more claim items\", {\n          variant: \"error\"\n        });\n        addClaimItems(values, setFieldValue);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 998,\n        columnNumber: 21\n      }\n    }, \"+ Add Claim Items\"))), /*#__PURE__*/React.createElement(MonetaryText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1021,\n        columnNumber: 17\n      }\n    }, \"Total Monetary Claim Value :\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1023,\n        columnNumber: 19\n      }\n    }, \"INR \", renderClaimValue(values)))), /*#__PURE__*/React.createElement(FormControl, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(PrimaryOutlinedCTAButton, {\n      type: \"button\",\n      onClick: () => {\n        onFormSubmit(values, null, true);\n      },\n      style: {\n        width: \"47%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 19\n      }\n    }, \"Save as Draft\"), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n      onClick: handleSubmit,\n      disabled: !isValid,\n      style: {\n        width: \"47%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 19\n      }\n    }, \"Submit Case\"))), /*#__PURE__*/React.createElement(DescriptionModal, {\n      modal,\n      setModal,\n      handleChange,\n      errors,\n      values,\n      handleSubmit,\n      touched,\n      handleBlur,\n      setFieldValue,\n      setFieldError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1047,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(AlertDialog, Object.assign({\n      isOpen: open\n    }, dialogData, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1061,\n        columnNumber: 15\n      }\n    })));\n  })));\n};\n\nexport default Index;\n\nconst TooltipHeading = ({\n  tooltip,\n  spacing,\n  style,\n  children,\n  ...props\n}) => /*#__PURE__*/React.createElement(Subheading, Object.assign({\n  spacing: spacing\n}, props, {\n  style: style,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 1073,\n    columnNumber: 3\n  }\n}), children, tooltip && /*#__PURE__*/React.createElement(Tooltip, {\n  title: tooltip,\n  placement: \"top\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 1076,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(TooltipIcon, {\n  src: require(\"../../../assets/images/toolTip.png\"),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 1077,\n    columnNumber: 9\n  }\n})));\n\nconst DetailsAlertmodal = ({\n  negotiationSuccessFee,\n  registrationFee,\n  caseObj\n}) => {\n  var _caseObj$respondentPa;\n\n  return /*#__PURE__*/React.createElement(UnorderList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1091,\n      columnNumber: 9\n    }\n  }, \"Respondent(s)\"), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentName) ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1094,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1095,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1096,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 17\n    }\n  }, caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentName)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1099,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1100,\n      columnNumber: 17\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 17\n    }\n  }, caseObj === null || caseObj === void 0 ? void 0 : caseObj.respondentEmail)))) : /*#__PURE__*/React.createElement(React.Fragment, null, caseObj === null || caseObj === void 0 ? void 0 : (_caseObj$respondentPa = caseObj.respondentParties) === null || _caseObj$respondentPa === void 0 ? void 0 : _caseObj$respondentPa.map((el, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1109,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1110,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1112,\n      columnNumber: 21\n    }\n  }, el === null || el === void 0 ? void 0 : el.name)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"data-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1116,\n      columnNumber: 21\n    }\n  }, el === null || el === void 0 ? void 0 : el.email))))))), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 7\n    }\n  }, (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"arbitration\" ? \"Arbitration\" : \"Registration\", \" \", \"Fee -\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      fontFamily: `${theme.fonts.primaryFontExtraBold}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1129,\n      columnNumber: 9\n    }\n  }, \"INR \", parseFloat(registrationFee === null || registrationFee === void 0 ? void 0 : registrationFee.total).toFixed(2) || 0.0)), /*#__PURE__*/React.createElement(TextAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1137,\n      columnNumber: 7\n    }\n  }, \"(The\", \" \", (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) === \"arbitration\" ? \"Arbitration\" : \"Registration\", \" \", \"Fee will be added to the cart)\"), (caseObj === null || caseObj === void 0 ? void 0 : caseObj.resolutionKind) !== \"arbitration\" && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1145,\n      columnNumber: 9\n    }\n  }, \"Success Fee -\", \" \", /*#__PURE__*/React.createElement(\"b\", {\n    style: {\n      fontFamily: `${theme.fonts.primaryFontExtraBold}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1147,\n      columnNumber: 11\n    }\n  }, \"INR \", parseFloat(negotiationSuccessFee === null || negotiationSuccessFee === void 0 ? void 0 : negotiationSuccessFee.total).toFixed(2))), /*#__PURE__*/React.createElement(TextAlign, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1156,\n      columnNumber: 7\n    }\n  }, \"(If the case is negotiated successfully you need to pay the Success Fee for getting the settlement agreement)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1159,\n      columnNumber: 9\n    }\n  }), \"(Claim amount, once submitted, may be changed only if feasible. Any difference in fee will need to be paid in such a case)\"));\n};\n\nconst InputContainer = styled.div`\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.md_up} {\n    & input {\n      text-align: right !important;\n    }\n  }\n`;\nconst TooltipIcon = styled.img`\n  width: 17px;\n  height: 17px;\n  object-fit: contain;\n  cursor: pointer;\n  margin-left: 5px;\n`;\nconst TextAlign = styled.text`\n  text-align: left;\n`;\nconst SuperTextSm = styled.span`\n  font-size: 8px;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  color: ${COLORS.INPUT_LABEL};\n`;\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: 2px;\n  position: absolute;\n  font-size: 9px;\n  padding-left: 16px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;\nconst UnorderList = styled.ul`\n  padding: 0px 10px;\n  & .data-row {\n    display: flex;\n    & .data-field {\n      padding: 10px 0px;\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      & .label {\n        color: ${COLORS.INPUT_LABEL};\n        font-size: 8px;\n      }\n      & .value {\n        font-size: 10px;\n      }\n      &:nth-child(2) {\n        margin-left: 20px;\n      }\n    }\n    @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.sm_up} {\n      & .data-field {\n        & .label {\n          color: ${COLORS.INPUT_LABEL};\n          font-size: 10px;\n        }\n        & .value {\n          font-size: 14px;\n        }\n        &:nth-child(2) {\n          margin-left: 30px;\n        }\n      }\n    }\n  }\n  & li {\n    padding: 5px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/CreateCase3/index.js"],"names":["React","Fragment","useState","useEffect","useRef","createRef","Container","Heading","Subheading","FormContainer","BackArrow","TableWrapper","HyperLink","ButtonWrapper","DeleteIcon","TableContainer","MonetaryText","Row","FormControl","Seperator","OuterContainer","BigTable","SmallTable","Details","LabelValueContainer","Label","Value","Delete","ActionBar","navigate","_","Formik","PrimaryOutlinedCTAButton","PrimaryCTAButton","SecondaryCTAButton","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","theme","COLORS","CustomInputField","CaseService","CreateCaseStep3Schema","AWSService","useSnackbar","formatNumberToMetrics","getErrorMessage","DescriptionModal","useLoader","Tooltip","styled","useCartCount","MAX_ROUND_TO_END","MAX_ROUND_TO_START","NumberFormat","useAlert","AlertDialog","useStyles","table","backgroundColor","borderRadius","borderBottom","tableHead","fontFamily","fonts","primaryFontSemiBold","color","INPUT_LABEL","fontSize","paddingBottom","row","INPUT_BORDER","radioGroup","BTN_GREEN","formLabel","primaryFontRegular","COLOR_DARK","marginRight","radioButton","Index","caseId","breadcrumbs","classes","caseObj","setCaseObj","fileRef","formikRef","length","setLength","setTriggerCount","maximumRounds","setMaximumRounds","hideAlert","showAlert","dialogData","setDialogData","open","setOpen","initialState","title","claimValue","unit","description","description_document_url","modal","setModal","state","enqueueSnackbar","setLoader","window","scroll","tempArray","index","tempObj","label","value","push","getCase","response","caseItems","error","message","variant","current","Array","fill","map","i","onBreadcrumbClick","selected","snakeCase","addClaimItems","values","setFieldValue","new_claim_items","claim_items","removeClaimItem","filter","ci","idx","s3Upload","file","field","setFieldError","name","payload","key","s3Response","getS3URL","url","res","uploadToS3","addClaimItem","claim_item","Promise","resolve","reject","Number","createCaseItem","claimantParty","id","caseItem","updateClaimItem","claim_id","updateCaseItem","deleteClaimItem","deleteCaseItem","submitCase","getDeletedItems","orginalData","currentData","originalIDs","currentIDs","deletedIDs","difference","onFormSubmit","rawValues","props","isDraft","JSON","parse","stringify","isEmpty","uploadeType","toString","split","join","old_claim_items","deleted_claim_items","count","finalClaimItems","el","claim_item_id","deleted_item","addedItem","findIndex","details_response","updateDraft","pick","registrationFee","fee","negotiationSuccessFee","heading","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","isOpen","onDialogClose","descriptionTextStyle","textAlign","renderClaimValue","sum","f","parseFloat","toFixed","deleteDraft","deleteDraftCase","resolutionKind","deleteWaring","display","flex","respondentKind","require","marginBottom","negotiationRoundLimit","handleChange","errors","handleSubmit","touched","handleBlur","isValid","setFieldTouched","width","innerWidth","position","e","whiteSpace","fontWeight","marginTop","click","target","files","paddingRight","paddingLeft","TooltipHeading","tooltip","spacing","style","children","DetailsAlertmodal","respondentName","respondentEmail","respondentParties","email","primaryFontExtraBold","total","InputContainer","div","breakpoints","md_up","TooltipIcon","img","TextAlign","text","SuperTextSm","span","HelperText","UnorderList","ul","sm_up"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useRef, createRef } from \"react\";\nimport {\n  Container,\n  Heading,\n  Subheading,\n  FormContainer,\n  BackArrow,\n  TableWrapper,\n  HyperLink,\n  ButtonWrapper,\n  DeleteIcon,\n  TableContainer,\n  MonetaryText,\n  Row,\n  FormControl,\n  Seperator,\n  OuterContainer,\n  BigTable,\n  SmallTable,\n  Details,\n  LabelValueContainer,\n  Label,\n  Value,\n  Delete,\n} from \"./Styles\";\nimport ActionBar from \"../../common/ActionBar\";\nimport { navigate } from \"@reach/router\";\nimport _ from \"lodash\";\nimport { Formik } from \"formik\";\nimport {\n  PrimaryOutlinedCTAButton,\n  PrimaryCTAButton,\n  SecondaryCTAButton,\n} from \"../../common/Buttons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { CustomInputField } from \"../../common/FormInputs\";\nimport CaseService from \"../../../services/CaseService\";\nimport { CreateCaseStep3Schema } from \"../../../helpers/validationSchema\";\nimport AWSService from \"../../../services/AWSService\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  formatNumberToMetrics,\n  getErrorMessage,\n} from \"../../../helpers/functions\";\nimport DescriptionModal from \"./components/DescriptionModal\";\nimport useLoader from \"../../../hooks/useLoader\";\nimport { Tooltip } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport useCartCount from \"../../../hooks/useCartCount\";\nimport {\n  MAX_ROUND_TO_END,\n  MAX_ROUND_TO_START,\n} from \"../../../helpers/constants\";\nimport NumberFormat from \"react-number-format\";\nimport useAlert from \"../../../hooks/useAlert\";\nimport AlertDialog from \"../../common/Alert\";\n\nconst useStyles = makeStyles({\n  table: {\n    backgroundColor: \"transparent\",\n    borderRadius: 7,\n    \"& .MuiTableCell-root\": {\n      borderBottom: 0,\n    },\n  },\n  tableHead: {\n    fontFamily: theme.fonts.primaryFontSemiBold,\n    color: COLORS.INPUT_LABEL,\n    fontSize: 10,\n    paddingBottom: 0,\n  },\n  row: {\n    borderBottom: `1px solid ${COLORS.INPUT_BORDER}`,\n  },\n  radioGroup: {\n    \"& .MuiRadio-colorPrimary.Mui-checked\": {\n      color: COLORS.BTN_GREEN,\n    },\n  },\n  formLabel: {\n    fontFamily: theme.fonts.primaryFontRegular,\n    color: COLORS.COLOR_DARK,\n    marginRight: 5,\n    // minWidth: 98,\n  },\n  radioButton: {\n    color: COLORS.BTN_GREEN,\n  },\n});\n\nconst Index = ({ caseId }) => {\n  const breadcrumbs = [\"My Cases\", \"Create New Case\"];\n  const classes = useStyles();\n  const [caseObj, setCaseObj] = useState({});\n  const fileRef = useRef([]);\n  const formikRef = useRef();\n  const [length, setLength] = useState(1);\n  const { setTriggerCount } = useCartCount();\n  const [maximumRounds, setMaximumRounds] = useState([]);\n  const { hideAlert, showAlert } = useAlert();\n  const [dialogData, setDialogData] = useState(false);\n  const [open, setOpen] = useState(false);\n  const initialState = {\n    title: \"\",\n    claimValue: null,\n    unit: \"INR\",\n    description: \"\",\n    description_document_url: \"\",\n  };\n  const [modal, setModal] = useState({\n    state: false,\n  });\n  const { enqueueSnackbar } = useSnackbar();\n  const { setLoader } = useLoader();\n\n  useEffect(() => {\n    window.scroll(0, 0);\n    const tempArray = [];\n    for (let index = MAX_ROUND_TO_START; index <= MAX_ROUND_TO_END; index++) {\n      let tempObj = {};\n      tempObj = { label: index, value: index };\n      tempArray.push(tempObj);\n    }\n    setMaximumRounds(tempArray);\n  }, []);\n\n  useEffect(() => {\n    async function getCase(caseId) {\n      setLoader({ state: true });\n      try {\n        const response = await CaseService.getCase(caseId);\n        if (response) {\n          setCaseObj(response);\n          if (response.caseItems.length > 0) {\n            setLength(response.caseItems.length);\n          }\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n\n    if (caseId) {\n      getCase(caseId);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [caseId]);\n\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length)\n        .fill()\n        .map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const onBreadcrumbClick = (selected) => {\n    switch (_.snakeCase(selected)) {\n      case \"my_cases\":\n        navigate(\"/dashboard/cases\");\n        break;\n      default:\n        break;\n    }\n  };\n\n  const addClaimItems = (values, setFieldValue) => {\n    const new_claim_items = [\n      ...values?.claim_items,\n      {\n        title: \"\",\n        claimValue: \"\",\n        caseId,\n        unit: \"INR\",\n        description: \"\",\n        description_document_url: \"\",\n        index: values?.claim_items?.length || 0,\n      },\n    ];\n    setLength(new_claim_items.length);\n    setFieldValue(\"claim_items\", new_claim_items);\n  };\n\n  const removeClaimItem = (index, values, setFieldValue) => {\n    const new_claim_items = [...values?.claim_items].filter(\n      (ci, idx) => idx !== index\n    );\n    setLength(new_claim_items.length);\n    setFieldValue(\"claim_items\", new_claim_items);\n  };\n\n  async function s3Upload(file, field, setFieldValue, setFieldError) {\n    if (file) {\n      try {\n        setLoader({ state: true, message: `Uploading file ${file.name} ...` });\n        const payload = {\n          key: file.name,\n        };\n        const s3Response = await AWSService.getS3URL(payload);\n        if (s3Response.url) {\n          const res = await AWSService.uploadToS3(s3Response.url, file);\n          setFieldValue(field, res);\n          enqueueSnackbar(\"Successfully Uploaded\", { variant: \"success\" });\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, { variant: \"error\" });\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n  }\n\n  async function addClaimItem(claim_item) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        claim_item.claimValue = Number(claim_item.claimValue);\n        const response = await CaseService.createCaseItem(\n          claim_item,\n          caseId,\n          caseObj.claimantParty.id\n        );\n        if (response) {\n          resolve({ ...response.caseItem, index: claim_item?.index || 0 });\n        }\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function updateClaimItem(claim_id, claim_item) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        claim_item.claimValue = Number(claim_item.claimValue);\n        const response = await CaseService.updateCaseItem(\n          caseId,\n          claim_id,\n          claim_item,\n          caseObj.claimantParty.id\n        );\n        if (response) {\n          resolve(response.caseItem);\n        }\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function deleteClaimItem(id) {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const response = await CaseService.deleteCaseItem(\n          caseId,\n          id,\n          caseObj.claimantParty.id\n        );\n        if (response) {\n          resolve(response);\n        }\n        reject(\"Error\");\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function submitCase(payload) {\n    try {\n      setLoader({ state: true, message: \"Submitting form...\" });\n      const response = await CaseService.submitCase(\n        payload,\n        caseId,\n        caseObj.claimantParty.id\n      );\n      if (response) {\n        enqueueSnackbar(response.message, {\n          variant: \"success\",\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {\n    } finally {\n      setTriggerCount(true);\n      setLoader({ state: false });\n      hideAlert();\n    }\n  }\n\n  async function getDeletedItems(orginalData, currentData) {\n    const originalIDs = await _.map(orginalData, \"id\");\n    const currentIDs = await _.map(currentData, \"id\");\n    const deletedIDs = await _.difference(originalIDs, currentIDs);\n    return deletedIDs;\n  }\n\n  async function onFormSubmit(rawValues, props, isDraft) {\n    let values = JSON?.parse(JSON.stringify(rawValues));\n    values.claim_items = rawValues?.claim_items?.map((ci) => ({\n      ...ci,\n      description_document_url: !_.isEmpty(ci.description_document_url)\n        ? {\n            url: ci.description_document_url || \"\",\n            uploadeType: \"\",\n          }\n        : null,\n      claimValue: ci?.claimValue?.toString()?.split(\",\")?.join(\"\"),\n    }));\n    try {\n      setLoader({ state: true, message: \"Submitting form...\" });\n      const new_claim_items = values.claim_items.filter((ci) => !ci.id);\n      const old_claim_items = values.claim_items.filter((ci) => ci.id);\n      const deleted_claim_items = await getDeletedItems(\n        caseObj.caseItems,\n        old_claim_items\n      );\n      let count = 0;\n      let finalClaimItems = values.claim_items.map((el, index) => {\n        return { ...el, index };\n      });\n      if (deleted_claim_items) {\n        count = -deleted_claim_items.length;\n        for (const claim_item_id of deleted_claim_items) {\n          const deleted_item = await deleteClaimItem(claim_item_id);\n          if (deleted_item) {\n            count += 1;\n          }\n        }\n      }\n      if (new_claim_items) {\n        for (const claim_item of new_claim_items) {\n          if (claim_item.title && claim_item.claimValue) {\n            const addedItem = await addClaimItem(claim_item);\n            if (addedItem.id) {\n              const index = _.findIndex(\n                finalClaimItems,\n                (ci) => ci?.index === addedItem?.index\n              );\n              finalClaimItems[index] = addedItem;\n              setCaseObj({ ...caseObj, caseItems: finalClaimItems });\n              count += 1;\n            }\n          }\n        }\n      }\n      if (old_claim_items) {\n        for (const claim_item of old_claim_items) {\n          const addedItem = await updateClaimItem(claim_item.id, claim_item);\n          if (addedItem.id) {\n            const index = _.findIndex(\n              finalClaimItems,\n              (ci) => ci?.id === addedItem?.id\n            );\n            finalClaimItems[index] = addedItem;\n            count += 1;\n          }\n        }\n      }\n\n      /** Service call to update the Negotiation Limit */\n      const details_response = await CaseService.updateDraft(\n        values,\n        caseId,\n        caseObj.claimantParty?.id\n      );\n\n      if (count === values.claim_items.length) {\n        if (props?.setFieldValue)\n          props.setFieldValue(\"claim_items\", finalClaimItems);\n        const payload = _.pick(caseObj, [\n          \"respondentKind\",\n          \"respondentName\",\n          \"respondentPanNumber\",\n          \"respondentEmail\",\n          \"respondentMobile\",\n          \"description\",\n          \"description_document_url\",\n          \"agreement_urls\",\n          \"title\",\n        ]);\n        if (!isDraft) {\n          const registrationFee =\n            (\n              await CaseService.getCase(\n                caseId,\n                \"?estimateFeeKind=registrationFee\"\n              )\n            )?.fee || {};\n          const negotiationSuccessFee =\n            (await CaseService.getCase(caseId, \"?estimateFeeKind=successFee\"))\n              ?.fee || {};\n          showAlert({\n            heading: \"Payment Information\",\n            desc: (\n              <DetailsAlertmodal\n                {...{ negotiationSuccessFee, registrationFee, caseObj }}\n              />\n            ),\n\n            primaryBtnText: \"Add to Cart\",\n            secondaryBtnText: \"Cancel\",\n            clickSecondarybtn: () => {\n              hideAlert();\n            },\n            clickPrimaryBtn: () => submitCase(payload),\n            isOpen: true,\n            onDialogClose: () => {\n              hideAlert();\n            },\n            descriptionTextStyle: {\n              textAlign: \"left\",\n            },\n          });\n        } else {\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\",\n          });\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      } else {\n        if (details_response) {\n          enqueueSnackbar(\"Case added to draft successfully\", {\n            variant: \"success\",\n          });\n        }\n        navigate(\"/dashboard/cases?caseType=negotiation\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setTriggerCount(true);\n      setLoader({ state: false });\n    }\n  }\n\n  function renderClaimValue(values) {\n    try {\n      const sum = _.sum(\n        values?.claim_items\n          ?.filter((f) => f.unit === \"INR\")\n          ?.map((f) => {\n            if (f?.claimValue)\n              return Number(f?.claimValue?.toString()?.split(\",\")?.join(\"\"));\n          })\n      );\n      if (sum)\n        return formatNumberToMetrics(\n          parseFloat(sum).toFixed(2).toString(),\n          \"INR\"\n        );\n      else return 0;\n    } catch (error) {\n      return 0;\n    }\n  }\n\n  /**\n   * @description Function to trigger the delete case\n   * @param {*} param0\n   */\n  const deleteDraft = async (id) => {\n    try {\n      setLoader({ state: true, message: \"Deleting Cases...\" });\n      const res = await CaseService.deleteDraftCase(id);\n      if (res?.message) {\n        enqueueSnackbar(res?.message, {\n          variant: \"success\",\n        });\n        if (caseObj?.resolutionKind === \"mediation\") {\n          navigate(\"/dashboard/cases?caseType=mediation\");\n        } else {\n          navigate(\"/dashboard/cases?caseType=negotiation\");\n        }\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n      setOpen(false);\n    }\n  };\n\n  /**\n   * @description Function to show the delete warning\n   * @param {*} id\n   */\n  const deleteWaring = (id) => {\n    setOpen(true);\n    setDialogData({\n      primaryBtnText: \"Proceed\",\n      secondaryBtnText: \"Cancel\",\n      clickPrimaryBtn: () => deleteDraft(id),\n      clickSecondarybtn: () => setOpen(false),\n      desc: `Are you sure you want to delete this draft case?`,\n      heading: \"Delete Case\",\n      descriptionTextStyle: {\n        textAlign: \"center\",\n      },\n    });\n  };\n\n  return (\n    <OuterContainer>\n      <ActionBar {...{ breadcrumbs, onBreadcrumbClick }} />\n      <Container className=\"CreateCase\">\n        <Heading>\n          <div style={{ display: \"flex\", flex: 1 }}>\n            <BackArrow\n              onClick={() =>\n                navigate(\n                  `/dashboard/cases/create/${caseId}/step-2?caseType=${caseObj?.respondentKind}`\n                )\n              }\n              src={require(\"../../../assets/images/backArrow.svg\")}\n            />\n            Create New Case (3/ 3)\n          </div>\n          <div className=\"delete\" onClick={() => deleteWaring(caseId)}>\n            <img\n              src={require(\"../../../assets/images/delete.svg\")}\n              alt=\"delete Icon\"\n            />\n          </div>\n        </Heading>\n        <TooltipHeading\n          tooltip=\"Claim Items for the case\"\n          style={{ marginBottom: \"unset\" }}\n        >\n          Enter Claim Items\n        </TooltipHeading>\n        <Formik\n          innerRef={formikRef}\n          initialValues={{\n            negotiationRoundLimit:\n              caseObj?.negotiationRoundLimit || MAX_ROUND_TO_START,\n            claim_items: caseObj?.caseItems?.length\n              ? _.map(caseObj?.caseItems, (ci) => ({\n                  ...ci,\n                  claimValue: parseFloat(ci.claimValue).toFixed(2),\n                  // unit: ci.unit || \"INR\", // Comment for always its going to INR\n                  unit: \"INR\",\n                  description_document_url:\n                    ci.description_document_url?.url || \"\",\n                }))\n              : [initialState] || [initialState],\n          }}\n          onSubmit={onFormSubmit}\n          enableReinitialize\n          validationSchema={CreateCaseStep3Schema}\n          validateOnBlur\n          validateOnChange\n          validateOnMount\n        >\n          {({\n            values,\n            handleChange,\n            errors,\n            handleSubmit,\n            touched,\n            setFieldError,\n            setFieldValue,\n            handleBlur,\n            isValid,\n            setFieldTouched,\n          }) => (\n            <FormContainer className=\"claim-table\" onSubmit={handleSubmit}>\n              <TableContainer>\n                <TableWrapper>\n                  <BigTable>\n                    <Table className={classes.table}>\n                      <TableHead>\n                        <TableRow>\n                          <TableCell\n                            style={{\n                              width: window.innerWidth <= 1441 ? 183 : 253,\n                            }}\n                            className={classes.tableHead}\n                          >\n                            Claim Item\n                            <span className=\"required-star\"> *</span>\n                          </TableCell>\n                          <TableCell\n                            style={{ width: 150 }}\n                            className={classes.tableHead}\n                          >\n                            Claim Value{\" \"}\n                            <span className=\"required-star\"> *</span>\n                          </TableCell>\n                          <TableCell\n                            style={{ width: 180 }}\n                            className={classes.tableHead}\n                          >\n                            Unit <span className=\"required-star\"> *</span>\n                          </TableCell>\n                          <TableCell\n                            style={{\n                              width: window.innerWidth <= 1441 ? 250 : 350,\n                            }}\n                            className={classes.tableHead}\n                          >\n                            Supporting Document{\" \"}\n                            <SuperTextSm>\n                              (pdf, mp3, mp4, mov, docx or image)\n                            </SuperTextSm>\n                          </TableCell>\n                          <TableCell\n                            style={{ width: 218 }}\n                            className={classes.tableHead}\n                          >\n                            Claim Description\n                          </TableCell>\n                          <TableCell className={classes.tableHead}></TableCell>\n                        </TableRow>\n                      </TableHead>\n                      <TableBody>\n                        {values?.claim_items?.map((claim_item, index) => (\n                          <TableRow\n                            className={\n                              index < values?.claim_items?.length - 1\n                                ? classes.row\n                                : \"table-row\"\n                            }\n                            key={index}\n                          >\n                            <TableCell\n                              component=\"th\"\n                              scope=\"row\"\n                              style={{ position: \"relative\" }}\n                            >\n                              <CustomInputField\n                                className={\"input-white\"}\n                                value={claim_item.title}\n                                name={`claim_items[${index}].title`}\n                                onChange={handleChange}\n                                style={{\n                                  width: window.innerWidth <= 1441 ? 183 : 253,\n                                }}\n                                variant=\"outlined\"\n                                onBlur={handleBlur}\n                                error={\n                                  errors?.claim_items?.[index]?.title &&\n                                  touched?.claim_items?.[index]?.title\n                                }\n                                helperText={\n                                  errors?.claim_items?.[index]?.title &&\n                                  touched?.claim_items?.[index]?.title\n                                }\n                              />\n                              <HelperText>\n                                {touched?.claim_items?.[index]?.title &&\n                                  errors?.claim_items?.[index]?.title}\n                              </HelperText>\n                            </TableCell>\n                            <TableCell\n                              className=\"disabledArrows\"\n                              style={{ position: \"relative\" }}\n                            >\n                              <InputContainer>\n                                <NumberFormat\n                                  thousandSeparator\n                                  thousandsGroupStyle=\"lakh\"\n                                  isNumericString={true}\n                                  decimalScale={2}\n                                  fixedDecimalScale\n                                  allowNegative={false}\n                                  className={\"input-white\"}\n                                  displayType={\"input\"}\n                                  value={claim_item?.claimValue}\n                                  type={\"text\"}\n                                  customInput={CustomInputField}\n                                  name={`claim_items[${index}].claimValue`}\n                                  onChange={handleChange}\n                                  style={{ width: 140 }}\n                                  variant=\"outlined\"\n                                  error={\n                                    errors?.claim_items?.[index]?.claimValue &&\n                                    touched?.claim_items?.[index]?.claimValue\n                                  }\n                                  onBlur={(e) => {\n                                    setFieldTouched(\n                                      `claim_items[${index}].claimValue`,\n                                      true\n                                    );\n                                  }}\n                                />\n                              </InputContainer>\n                              {touched?.claim_items?.[index]?.claimValue &&\n                                errors?.claim_items?.[index]?.claimValue && (\n                                  <HelperText style={{ whiteSpace: \"nowrap\" }}>\n                                    {errors?.claim_items?.[index]?.claimValue}\n                                  </HelperText>\n                                )}\n                            </TableCell>\n                            <TableCell style={{ position: \"relative\" }}>\n                              <div style={{ fontWeight: 500 }}>\n                                {claim_item.unit}\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              {!_.isEmpty(\n                                claim_item.description_document_url\n                              ) ? (\n                                <Row style={{ marginTop: 0, width: 123 }}>\n                                  <HyperLink\n                                    onClick={() =>\n                                      window.open(\n                                        claim_item.description_document_url\n                                      )\n                                    }\n                                  >\n                                    View\n                                  </HyperLink>\n                                  <Seperator />\n                                  <HyperLink\n                                    onClick={() =>\n                                      fileRef?.current[index]?.current?.click()\n                                    }\n                                  >\n                                    Update\n                                  </HyperLink>\n                                </Row>\n                              ) : (\n                                <>\n                                  <HyperLink\n                                    onClick={() =>\n                                      fileRef?.current[index]?.current?.click()\n                                    }\n                                  >\n                                    Upload\n                                  </HyperLink>\n                                </>\n                              )}\n                              <input\n                                ref={fileRef.current[index]}\n                                onChange={(e) =>\n                                  s3Upload(\n                                    e?.target?.files[0],\n                                    `claim_items[${index}].description_document_url`,\n                                    setFieldValue,\n                                    setFieldError\n                                  )\n                                }\n                                type=\"file\"\n                                accept=\".pdf, .mp3, .mp4, .docx, .mov, image/*\"\n                                style={{ display: \"none\" }}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              {!claim_item.description ? (\n                                <HyperLink\n                                  onClick={() =>\n                                    setModal({\n                                      state: true,\n                                      name: `claim_items[${index}].description`,\n                                      index,\n                                    })\n                                  }\n                                >\n                                  Add\n                                </HyperLink>\n                              ) : (\n                                <HyperLink\n                                  onClick={() =>\n                                    setModal({\n                                      state: true,\n                                      name: `claim_items[${index}].description`,\n                                      index,\n                                    })\n                                  }\n                                >\n                                  View\n                                </HyperLink>\n                              )}\n                            </TableCell>\n                            <TableCell align=\"center\" style={{ width: 100 }}>\n                              {values.claim_items.length > 1 && (\n                                <DeleteIcon\n                                  onClick={() =>\n                                    removeClaimItem(\n                                      index,\n                                      values,\n                                      setFieldValue\n                                    )\n                                  }\n                                  src={require(\"../../../assets/images/removeIcon.svg\")}\n                                />\n                              )}\n                            </TableCell>\n                          </TableRow>\n                        ))}\n                      </TableBody>\n                    </Table>\n                  </BigTable>\n                  <SmallTable>\n                    {values?.claim_items?.map((claim_item, index) => (\n                      <Details>\n                        <LabelValueContainer>\n                          <Label>Claim Item</Label>\n                          <Value>\n                            <div className=\"element\">\n                              <CustomInputField\n                                className={\"input-white\"}\n                                value={claim_item.title}\n                                name={`claim_items[${index}].title`}\n                                onChange={handleChange}\n                                style={{\n                                  paddingRight: 15,\n                                }}\n                                variant=\"outlined\"\n                                onBlur={handleBlur}\n                                error={\n                                  errors?.claim_items?.[index]?.title &&\n                                  touched?.claim_items?.[index]?.title\n                                }\n                                helperText={\n                                  errors?.claim_items?.[index]?.title &&\n                                  touched?.claim_items?.[index]?.title\n                                }\n                              />\n                              <HelperText>\n                                {touched?.claim_items?.[index]?.title &&\n                                  errors?.claim_items?.[index]?.title}\n                              </HelperText>\n                            </div>\n                          </Value>\n                        </LabelValueContainer>\n                        <LabelValueContainer>\n                          <Label> Claim Description</Label>\n                          <Value>\n                            <div className=\"element\">\n                              {!claim_item.description ? (\n                                <HyperLink\n                                  onClick={() =>\n                                    setModal({\n                                      state: true,\n                                      name: `claim_items[${index}].description`,\n                                      index,\n                                    })\n                                  }\n                                >\n                                  Add\n                                </HyperLink>\n                              ) : (\n                                <HyperLink\n                                  onClick={() =>\n                                    setModal({\n                                      state: true,\n                                      name: `claim_items[${index}].description`,\n                                      index,\n                                    })\n                                  }\n                                >\n                                  View\n                                </HyperLink>\n                              )}\n                            </div>\n                          </Value>\n                        </LabelValueContainer>\n                        <LabelValueContainer>\n                          <Label>Claim Value</Label>\n                          <Value>\n                            <div className=\"element\">\n                              <InputContainer>\n                                <NumberFormat\n                                  thousandSeparator\n                                  thousandsGroupStyle=\"lakh\"\n                                  isNumericString={true}\n                                  decimalScale={2}\n                                  fixedDecimalScale\n                                  allowNegative={false}\n                                  className={\"input-white\"}\n                                  displayType={\"input\"}\n                                  value={claim_item?.claimValue}\n                                  type={\"text\"}\n                                  customInput={CustomInputField}\n                                  name={`claim_items[${index}].claimValue`}\n                                  onChange={handleChange}\n                                  style={{\n                                    paddingRight: 15,\n                                  }}\n                                  variant=\"outlined\"\n                                  error={\n                                    errors?.claim_items?.[index]?.claimValue &&\n                                    touched?.claim_items?.[index]?.claimValue\n                                  }\n                                  onBlur={(e) => {\n                                    setFieldTouched(\n                                      `claim_items[${index}].claimValue`,\n                                      true\n                                    );\n                                  }}\n                                />\n                              </InputContainer>\n                              {touched?.claim_items?.[index]?.claimValue &&\n                                errors?.claim_items?.[index]?.claimValue && (\n                                  <HelperText style={{ whiteSpace: \"nowrap\" }}>\n                                    {errors?.claim_items?.[index]?.claimValue}\n                                  </HelperText>\n                                )}\n                            </div>\n                          </Value>\n                        </LabelValueContainer>\n                        <LabelValueContainer>\n                          <Label>Unit</Label>\n                          <Value>\n                            <div className=\"element\">{claim_item.unit}</div>\n                          </Value>\n                        </LabelValueContainer>\n                        <LabelValueContainer>\n                          <Label>Supporting Document</Label>\n                          <Value>\n                            <div className=\"element\">\n                              {!_.isEmpty(\n                                claim_item.description_document_url\n                              ) ? (\n                                <Row style={{ marginTop: 0, width: 123 }}>\n                                  <HyperLink\n                                    onClick={() =>\n                                      window.open(\n                                        claim_item.description_document_url\n                                      )\n                                    }\n                                  >\n                                    View\n                                  </HyperLink>\n                                  <Seperator />\n                                  <HyperLink\n                                    onClick={() =>\n                                      fileRef?.current[index]?.current?.click()\n                                    }\n                                  >\n                                    Update\n                                  </HyperLink>\n                                </Row>\n                              ) : (\n                                <>\n                                  <HyperLink\n                                    onClick={() =>\n                                      fileRef?.current[index]?.current?.click()\n                                    }\n                                  >\n                                    Upload\n                                  </HyperLink>\n                                </>\n                              )}\n                              <input\n                                ref={fileRef.current[index]}\n                                onChange={(e) =>\n                                  s3Upload(\n                                    e?.target?.files[0],\n                                    `claim_items[${index}].description_document_url`,\n                                    setFieldValue,\n                                    setFieldError\n                                  )\n                                }\n                                type=\"file\"\n                                accept=\".pdf, .mp3, .mp4, .docx, .mov, image/*\"\n                                style={{ display: \"none\" }}\n                              />\n                            </div>\n                          </Value>\n                        </LabelValueContainer>\n                        {values.claim_items.length > 1 && (\n                          <Delete\n                            onClick={() =>\n                              removeClaimItem(index, values, setFieldValue)\n                            }\n                          >\n                            Remove\n                          </Delete>\n                        )}\n                      </Details>\n                    ))}\n                  </SmallTable>\n                  <ButtonWrapper>\n                    <SecondaryCTAButton\n                      style={{ paddingLeft: 0 }}\n                      onClick={() => {\n                        if (\n                          errors?.claim_items?.[values.claim_items.length - 1]\n                            ?.title ||\n                          errors?.claim_items?.[values.claim_items.length - 1]\n                            ?.claimValue ||\n                          errors?.claim_items?.[values.claim_items.length - 1]\n                            ?.unit\n                        )\n                          return enqueueSnackbar(\n                            \"Enter claim items in order to add more claim items\",\n                            { variant: \"error\" }\n                          );\n\n                        addClaimItems(values, setFieldValue);\n                      }}\n                    >\n                      + Add Claim Items\n                    </SecondaryCTAButton>\n                  </ButtonWrapper>\n                </TableWrapper>\n                <MonetaryText>\n                  Total Monetary Claim Value :{\" \"}\n                  <span>INR {renderClaimValue(values)}</span>\n                </MonetaryText>\n              </TableContainer>\n\n              <FormControl>\n                <Row>\n                  <PrimaryOutlinedCTAButton\n                    type=\"button\"\n                    onClick={() => {\n                      onFormSubmit(values, null, true);\n                    }}\n                    style={{ width: \"47%\" }}\n                  >\n                    Save as Draft\n                  </PrimaryOutlinedCTAButton>\n                  <PrimaryCTAButton\n                    onClick={handleSubmit}\n                    disabled={!isValid}\n                    style={{ width: \"47%\" }}\n                  >\n                    Submit Case\n                  </PrimaryCTAButton>\n                </Row>\n              </FormControl>\n              <DescriptionModal\n                {...{\n                  modal,\n                  setModal,\n                  handleChange,\n                  errors,\n                  values,\n                  handleSubmit,\n                  touched,\n                  handleBlur,\n                  setFieldValue,\n                  setFieldError,\n                }}\n              />\n              <AlertDialog isOpen={open} {...{ ...dialogData }} />\n            </FormContainer>\n          )}\n        </Formik>\n      </Container>\n    </OuterContainer>\n  );\n};\n\nexport default Index;\n\nconst TooltipHeading = ({ tooltip, spacing, style, children, ...props }) => (\n  <Subheading spacing={spacing} {...props} style={style}>\n    {children}\n    {tooltip && (\n      <Tooltip title={tooltip} placement=\"top\">\n        <TooltipIcon src={require(\"../../../assets/images/toolTip.png\")} />\n      </Tooltip>\n    )}\n  </Subheading>\n);\n\nconst DetailsAlertmodal = ({\n  negotiationSuccessFee,\n  registrationFee,\n  caseObj,\n}) => {\n  return (\n    <UnorderList>\n      <li>\n        <div>Respondent(s)</div>\n        {caseObj?.respondentName ? (\n          <div>\n            <div className=\"data-row\">\n              <div className=\"data-field\">\n                <div className=\"label\">Name</div>\n                <div className=\"value\">{caseObj?.respondentName}</div>\n              </div>\n              <div className=\"data-field\">\n                <div className=\"label\">Email</div>\n                <div className=\"value\">{caseObj?.respondentEmail}</div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <>\n            {caseObj?.respondentParties?.map((el, index) => (\n              <div key={index}>\n                <div className=\"data-row\">\n                  <div className=\"data-field\">\n                    <div className=\"label\">Name</div>\n                    <div className=\"value\">{el?.name}</div>\n                  </div>\n                  <div className=\"data-field\">\n                    <div className=\"label\">Email</div>\n                    <div className=\"value\">{el?.email}</div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </>\n        )}\n      </li>\n      <li>\n        {caseObj?.resolutionKind === \"arbitration\"\n          ? \"Arbitration\"\n          : \"Registration\"}{\" \"}\n        Fee -{\" \"}\n        <b\n          style={{\n            fontFamily: `${theme.fonts.primaryFontExtraBold}`,\n          }}\n        >\n          INR {parseFloat(registrationFee?.total).toFixed(2) || 0.0}\n        </b>\n      </li>\n      <TextAlign>\n        (The{\" \"}\n        {caseObj?.resolutionKind === \"arbitration\"\n          ? \"Arbitration\"\n          : \"Registration\"}{\" \"}\n        Fee will be added to the cart)\n      </TextAlign>\n      {caseObj?.resolutionKind !== \"arbitration\" && (\n        <li>\n          Success Fee -{\" \"}\n          <b\n            style={{\n              fontFamily: `${theme.fonts.primaryFontExtraBold}`,\n            }}\n          >\n            INR {parseFloat(negotiationSuccessFee?.total).toFixed(2)}\n          </b>\n        </li>\n      )}\n      <TextAlign>\n        (If the case is negotiated successfully you need to pay the Success Fee\n        for getting the settlement agreement)\n        <br />\n        (Claim amount, once submitted, may be changed only if feasible. Any\n        difference in fee will need to be paid in such a case)\n      </TextAlign>\n    </UnorderList>\n  );\n};\n\nconst InputContainer = styled.div`\n  @media ${theme?.breakpoints?.md_up} {\n    & input {\n      text-align: right !important;\n    }\n  }\n`;\n\nconst TooltipIcon = styled.img`\n  width: 17px;\n  height: 17px;\n  object-fit: contain;\n  cursor: pointer;\n  margin-left: 5px;\n`;\n\nconst TextAlign = styled.text`\n  text-align: left;\n`;\n\nconst SuperTextSm = styled.span`\n  font-size: 8px;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  color: ${COLORS.INPUT_LABEL};\n`;\n\nconst HelperText = styled.div`\n  position: absolute;\n  left: 3px;\n  bottom: 2px;\n  position: absolute;\n  font-size: 9px;\n  padding-left: 16px;\n  font-family: openSans-SemiBold, sans-serif;\n  color: #f44336;\n`;\n\nconst UnorderList = styled.ul`\n  padding: 0px 10px;\n  & .data-row {\n    display: flex;\n    & .data-field {\n      padding: 10px 0px;\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      & .label {\n        color: ${COLORS.INPUT_LABEL};\n        font-size: 8px;\n      }\n      & .value {\n        font-size: 10px;\n      }\n      &:nth-child(2) {\n        margin-left: 20px;\n      }\n    }\n    @media ${theme?.breakpoints?.sm_up} {\n      & .data-field {\n        & .label {\n          color: ${COLORS.INPUT_LABEL};\n          font-size: 10px;\n        }\n        & .value {\n          font-size: 14px;\n        }\n        &:nth-child(2) {\n          margin-left: 30px;\n        }\n      }\n    }\n  }\n  & li {\n    padding: 5px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}