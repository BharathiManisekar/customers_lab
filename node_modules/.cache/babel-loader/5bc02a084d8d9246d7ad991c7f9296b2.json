{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport CaseService from \"../services/CaseService\";\n\nfunction initFreshChat(userObject, chatDetail, tags) {\n  window.fcWidget.init({\n    token: \"998c4eb3-1d78-4b8d-9e96-75dfa4a6f52f\",\n    host: \"https://wchat.in.freshchat.com\",\n    externalId: chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.externalId,\n    restoreId: (chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.restoreId) || \"\",\n    tags\n  });\n  window.fcWidget.user.get(function (resp) {\n    window.fcWidget.setExternalId(chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.externalId); // To set user name\n\n    window.fcWidget.user.setFirstName(userObject.name); // To set user email\n\n    window.fcWidget.user.setEmail(userObject.email);\n    var status = resp && resp.status;\n\n    if (status !== 200) {\n      window.fcWidget.user.setProperties({\n        firstName: userObject.name,\n        lastName: (chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.caseId) ? `- ${chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.caseId}` : \"\",\n        email: userObject.email // user's email address\n\n      });\n      window.fcWidget.on(\"user:created\", function (resp) {\n        var status = resp && resp.status,\n            data = resp && resp.data;\n\n        if (status === 200) {\n          if (data.restoreId) {\n            if (chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.caseId) {\n              updateRestoreId(chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.caseId, chatDetail === null || chatDetail === void 0 ? void 0 : chatDetail.externalId, data === null || data === void 0 ? void 0 : data.restoreId);\n            } // else {\n            //   localStorage.setItem(\"restoreId\", data?.restoreId);\n            // }\n            // Update restoreId in your database\n\n          }\n        }\n      });\n    }\n  });\n}\n/** Function to get the chatDetails */\n\n\nasync function updateRestoreId(id, externalId, restoreId) {\n  try {\n    const chatDetails = await CaseService.postRestoreId(id, externalId, restoreId);\n    console.log(chatDetails);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction initialize(i, t, userObject, chatDetail, tag) {\n  var e;\n\n  if (i.getElementById(t)) {\n    initFreshChat(userObject, chatDetail, tag);\n  } else {\n    (e = i.createElement(\"script\")).id = t;\n    e.async = !0;\n    e.src = \"https://wchat.in.freshchat.com/js/widget.js\";\n\n    e.onload = () => initFreshChat(userObject, chatDetail, tag);\n\n    i.head.appendChild(e);\n  }\n}\n\nfunction initiateCall(userObject, chatDetail, tag) {\n  initialize(document, \"freshchat-js-sdk\", userObject, chatDetail, tag);\n}\n\nfunction destroyChatBox() {\n  window.fcWidget.destroy();\n}\n\nexport default function useFreshChat({\n  userObject\n}, general) {\n  const [isInitialised, setIsInitialised] = useState();\n  const [chatDetail, setChatDetail] = useState({});\n  const [tag, setTag] = useState([]);\n\n  const handlePopup = () => {\n    if (window.fcWidget.isOpen()) {\n      window.fcWidget.close();\n    } else {\n      window.fcWidget.open();\n    }\n  };\n\n  useEffect(() => {\n    if (isInitialised && !_.isEmpty(chatDetail) || isInitialised && general || (tag === null || tag === void 0 ? void 0 : tag.length)) {\n      destroyChatBox();\n      setTimeout(() => {\n        initiateCall(userObject, chatDetail, tag);\n        window.fcWidget.user.clear().then(function () {\n          console.log('clear');\n        }, function () {\n          console.log(\"Not cleared\");\n        });\n      }, 200);\n      setTimeout(() => {\n        initiateCall(userObject, chatDetail, tag);\n      }, 200);\n    }\n  }, [isInitialised, userObject, chatDetail, general, tag]);\n  return {\n    setIsInitialised,\n    handlePopup,\n    setChatDetail,\n    setTag\n  };\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/hooks/useFreshChat.js"],"names":["useEffect","useState","_","CaseService","initFreshChat","userObject","chatDetail","tags","window","fcWidget","init","token","host","externalId","restoreId","user","get","resp","setExternalId","setFirstName","name","setEmail","email","status","setProperties","firstName","lastName","caseId","on","data","updateRestoreId","id","chatDetails","postRestoreId","console","log","error","initialize","i","t","tag","e","getElementById","createElement","async","src","onload","head","appendChild","initiateCall","document","destroyChatBox","destroy","useFreshChat","general","isInitialised","setIsInitialised","setChatDetail","setTag","handlePopup","isOpen","close","open","isEmpty","length","setTimeout","clear","then"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport CaseService from \"../services/CaseService\";\n\nfunction initFreshChat(userObject, chatDetail, tags) {\n  window.fcWidget.init({\n    token: \"998c4eb3-1d78-4b8d-9e96-75dfa4a6f52f\",\n    host: \"https://wchat.in.freshchat.com\",\n    externalId: chatDetail?.externalId,\n    restoreId: chatDetail?.restoreId || \"\",\n    tags,\n  });\n  window.fcWidget.user.get(function (resp) {\n    window.fcWidget.setExternalId(chatDetail?.externalId);\n    // To set user name\n    window.fcWidget.user.setFirstName(userObject.name);\n    // To set user email\n    window.fcWidget.user.setEmail(userObject.email);\n    var status = resp && resp.status;\n    if (status !== 200) {\n      window.fcWidget.user.setProperties({\n        firstName: userObject.name,\n        lastName: chatDetail?.caseId ? `- ${chatDetail?.caseId}` : \"\",\n        email: userObject.email, // user's email address\n      });\n\n      window.fcWidget.on(\"user:created\", function (resp) {\n        var status = resp && resp.status,\n          data = resp && resp.data;\n        if (status === 200) {\n          if (data.restoreId) {\n            if (chatDetail?.caseId) {\n              updateRestoreId(\n                chatDetail?.caseId,\n                chatDetail?.externalId,\n                data?.restoreId\n              );\n            }\n            // else {\n            //   localStorage.setItem(\"restoreId\", data?.restoreId);\n            // }\n            // Update restoreId in your database\n          }\n        }\n      });\n    }\n  });\n}\n\n/** Function to get the chatDetails */\nasync function updateRestoreId(id, externalId, restoreId) {\n  try {\n    const chatDetails = await CaseService.postRestoreId(\n      id,\n      externalId,\n      restoreId\n    );\n    console.log(chatDetails);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction initialize(i, t, userObject, chatDetail, tag) {\n  var e;\n  if (i.getElementById(t)) {\n    initFreshChat(userObject, chatDetail, tag);\n  } else {\n    (e = i.createElement(\"script\")).id = t;\n    e.async = !0;\n    e.src = \"https://wchat.in.freshchat.com/js/widget.js\";\n    e.onload = () => initFreshChat(userObject, chatDetail, tag);\n    i.head.appendChild(e);\n  }\n}\nfunction initiateCall(userObject, chatDetail, tag) {\n  initialize(document, \"freshchat-js-sdk\", userObject, chatDetail, tag);\n}\nfunction destroyChatBox() {\n  window.fcWidget.destroy();\n}\n\nexport default function useFreshChat({ userObject }, general) {\n  const [isInitialised, setIsInitialised] = useState();\n  const [chatDetail, setChatDetail] = useState({});\n  const [tag, setTag] = useState([]);\n  const handlePopup = () => {\n    if (window.fcWidget.isOpen()) {\n      window.fcWidget.close();\n    } else {\n      window.fcWidget.open();\n    }\n  };\n  useEffect(() => {\n    if (\n      (isInitialised && !_.isEmpty(chatDetail)) ||\n      (isInitialised && general) ||\n      tag?.length\n    ) {\n      destroyChatBox();\n      setTimeout(() => {\n        initiateCall(userObject, chatDetail, tag);\n        window.fcWidget.user.clear().then(function () {\n          console.log('clear');\n        }, function() {\n          console.log(\"Not cleared\")\n        })\n      }, 200);\n      setTimeout(() => {\n        initiateCall(userObject, chatDetail, tag);\n      }, 200);\n    }\n  }, [isInitialised, userObject, chatDetail, general, tag]);\n  return { setIsInitialised, handlePopup, setChatDetail, setTag };\n}\n"]},"metadata":{},"sourceType":"module"}