{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/ProfomaCaseListing/index.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { PageWrapper, Heading, TableWrapper, Footer, Hr, Row, HyperLink, StyledTitle, TextWrapper, Text, TextBold } from \"../CaseCart/Styles\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport { Header } from \"../Header/Header\";\nimport queryString from \"query-string\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage, parseTimeStamp, renderStatus } from \"../../../helpers/functions\";\nimport moment from \"moment\";\nimport { navigate } from \"@reach/router\";\nimport { PAYMENT_STATUS_CART } from \"../../../helpers/constants\";\nimport labels from \"../../../helpers/labels.json\";\nimport { CartSplitUp } from \"../CartSplitUp\";\nimport CartService from \"../../../services/CartService\";\nimport useLoader from \"../../../hooks/useLoader\";\n\nasync function getCases(query = \"\") {\n  try {\n    const response = await CartService.getSelectedCartItem(query);\n    return { ...response\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst ProfomaCaseListing = ({\n  location\n}) => {\n  var _state$data, _state$data2, _location$state2;\n\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setLoader\n  } = useLoader();\n  useEffect(() => {\n    var _location$state;\n\n    if (state === null || state === void 0 ? void 0 : state.message) {\n      enqueueSnackbar(state.message, {\n        variant: \"error\"\n      });\n      navigate(\"/dashboard\");\n    }\n\n    if (!(location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.selectedCartAmount)) {\n      navigate(\"/dashboard/cart\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [state, location]);\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.case_id\"],\n    tooltip: \"Unique Identifier for the Case across JustAct platform\",\n    sorting: false,\n    render: rowData => {\n      var _rowData$case3;\n\n      return /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => {\n          var _rowData$case, _rowData$case2;\n\n          return navigate(`/dashboard/cases/${rowData === null || rowData === void 0 ? void 0 : (_rowData$case = rowData.case) === null || _rowData$case === void 0 ? void 0 : _rowData$case.id}?caseType=${rowData === null || rowData === void 0 ? void 0 : (_rowData$case2 = rowData.case) === null || _rowData$case2 === void 0 ? void 0 : _rowData$case2.resolutionKind}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, rowData === null || rowData === void 0 ? void 0 : (_rowData$case3 = rowData.case) === null || _rowData$case3 === void 0 ? void 0 : _rowData$case3.id);\n    }\n  }, {\n    field: \"title\",\n    title: labels[\"table.case_title\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$case5;\n\n      return /*#__PURE__*/React.createElement(StyledTitle, {\n        onClick: () => {\n          var _rowData$case4;\n\n          return navigate(`/dashboard/cases/${rowData === null || rowData === void 0 ? void 0 : (_rowData$case4 = rowData.case) === null || _rowData$case4 === void 0 ? void 0 : _rowData$case4.id}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, rowData === null || rowData === void 0 ? void 0 : (_rowData$case5 = rowData.case) === null || _rowData$case5 === void 0 ? void 0 : _rowData$case5.title);\n    }\n  }, {\n    field: \"amount\",\n    title: labels[\"table.amount\"],\n    sorting: false,\n    render: rowData => {\n      var _rowData$fee;\n\n      return \"INR \" + Number(rowData === null || rowData === void 0 ? void 0 : (_rowData$fee = rowData.fee) === null || _rowData$fee === void 0 ? void 0 : _rowData$fee.total).toFixed(2);\n    }\n  }, {\n    field: \"created_at\",\n    title: labels[\"table.due\"],\n    sorting: true,\n    render: rowData => {\n      var _rowData$case6, _rowData$case7, _rowData$case8;\n\n      return (rowData === null || rowData === void 0 ? void 0 : (_rowData$case6 = rowData.case) === null || _rowData$case6 === void 0 ? void 0 : _rowData$case6.submittedOn) ? moment(rowData === null || rowData === void 0 ? void 0 : (_rowData$case7 = rowData.case) === null || _rowData$case7 === void 0 ? void 0 : _rowData$case7.submittedOn).add(7, \"days\").format(\"DD/MM/YYYY\") : moment(parseTimeStamp(rowData === null || rowData === void 0 ? void 0 : (_rowData$case8 = rowData.case) === null || _rowData$case8 === void 0 ? void 0 : _rowData$case8.created_at)).add(7, \"days\").format(\"DD/MM/YYYY\");\n    }\n  }, {\n    field: \"details\",\n    title: labels[\"table.description\"],\n    sorting: false,\n    render: rowData => {\n      var _PAYMENT_STATUS_CART$, _rowData$case9;\n\n      return renderStatus((_PAYMENT_STATUS_CART$ = PAYMENT_STATUS_CART[rowData === null || rowData === void 0 ? void 0 : (_rowData$case9 = rowData.case) === null || _rowData$case9 === void 0 ? void 0 : _rowData$case9.status]) === null || _PAYMENT_STATUS_CART$ === void 0 ? void 0 : _PAYMENT_STATUS_CART$.value, rowData === null || rowData === void 0 ? void 0 : rowData.case);\n    }\n  }];\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      perPage: 10,\n      inCart: true,\n      pagination: true\n    };\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = `?${queryString.stringify(params)}`;\n    getCases(stringParams).then(async result => {\n      if (result) {\n        resolve({\n          data: result === null || result === void 0 ? void 0 : result.cartItems.data,\n          page: (result === null || result === void 0 ? void 0 : result.cartItems.page) - 1,\n          total: result === null || result === void 0 ? void 0 : result.cartItems.total\n        });\n        setState(result === null || result === void 0 ? void 0 : result.cartItems);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  const detailPanel = [{\n    tooltip: \"View detailed split up...\",\n    render: rowData => {\n      return /*#__PURE__*/React.createElement(CartSplitUp, {\n        data: rowData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }\n      });\n    }\n  }];\n\n  const generateProfoma = async () => {\n    try {\n      setLoader({\n        state: true,\n        message: \"Generating Proforma Invoice...\"\n      });\n      const result = await CartService.generatePerforma();\n\n      if ((result === null || result === void 0 ? void 0 : result.status) === \"proformaGenerated\") {\n        enqueueSnackbar(\"Profoma invoice is generated Successfully\", {\n          variant: \"success\"\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Header, {\n    showSidebar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => navigate(\"/dashboard/cart\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, labels[\"appbar.case_cart\"]), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \" > \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, labels[\"selected_case\"])), /*#__PURE__*/React.createElement(TableWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CustomTable, {\n    hidePagination: (state === null || state === void 0 ? void 0 : state.lastPage) === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    columns,\n    data,\n    MTRef,\n    state,\n    detailPanel: detailPanel,\n    singularTitle: \"\",\n    pluralTitle: labels.cases,\n    noToolbar: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Hr, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 30,\n      marginBottom: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, labels.payable_amount, \": \"), /*#__PURE__*/React.createElement(TextBold, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"INR \", (location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedCartAmount) || 0)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"highlighted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 15\n    }\n  }, \"*All line items include 18% GST\")), /*#__PURE__*/React.createElement(PrimaryCTAButton, {\n    style: {\n      width: \"216px\",\n      marginLeft: \"26px\"\n    },\n    onClick: () => generateProfoma(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, labels.proceed)))));\n};\n\nexport default ProfomaCaseListing;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/ProfomaCaseListing/index.js"],"names":["React","useState","useEffect","useRef","PageWrapper","Heading","TableWrapper","Footer","Hr","Row","HyperLink","StyledTitle","TextWrapper","Text","TextBold","PrimaryCTAButton","CustomTable","Header","queryString","useSnackbar","getErrorMessage","parseTimeStamp","renderStatus","moment","navigate","PAYMENT_STATUS_CART","labels","CartSplitUp","CartService","useLoader","getCases","query","response","getSelectedCartItem","error","ProfomaCaseListing","location","state","setState","MTRef","enqueueSnackbar","setLoader","message","variant","selectedCartAmount","columns","field","title","tooltip","sorting","render","rowData","case","id","resolutionKind","Number","fee","total","toFixed","submittedOn","add","format","created_at","status","value","data","Promise","resolve","params","page","perPage","inCart","pagination","orderBy","sort","sortDirection","orderDirection","stringParams","stringify","then","result","cartItems","catch","lastPage","detailPanel","generateProfoma","generatePerforma","length","cases","marginTop","marginBottom","payable_amount","width","marginLeft","proceed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  PageWrapper,\n  Heading,\n  TableWrapper,\n  Footer,\n  Hr,\n  Row,\n  HyperLink,\n  StyledTitle,\n  TextWrapper,\n  Text,\n  TextBold,\n} from \"../CaseCart/Styles\";\nimport { PrimaryCTAButton } from \"../../common/Buttons\";\nimport CustomTable from \"../../common/CustomTable/CustomTable\";\nimport { Header } from \"../Header/Header\";\nimport queryString from \"query-string\";\nimport { useSnackbar } from \"notistack\";\nimport {\n  getErrorMessage,\n  parseTimeStamp,\n  renderStatus,\n} from \"../../../helpers/functions\";\nimport moment from \"moment\";\nimport { navigate } from \"@reach/router\";\nimport { PAYMENT_STATUS_CART } from \"../../../helpers/constants\";\nimport labels from \"../../../helpers/labels.json\";\nimport { CartSplitUp } from \"../CartSplitUp\";\nimport CartService from \"../../../services/CartService\";\nimport useLoader from \"../../../hooks/useLoader\";\n\nasync function getCases(query = \"\") {\n  try {\n    const response = await CartService.getSelectedCartItem(query);\n    return { ...response };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst ProfomaCaseListing = ({ location }) => {\n  const [state, setState] = useState({});\n  const MTRef = useRef();\n  const { enqueueSnackbar } = useSnackbar();\n  const { setLoader } = useLoader();\n\n  useEffect(() => {\n    if (state?.message) {\n      enqueueSnackbar(state.message, {\n        variant: \"error\",\n      });\n      navigate(\"/dashboard\");\n    }\n    if (!location?.state?.selectedCartAmount) {\n      navigate(\"/dashboard/cart\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state, location]);\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.case_id\"],\n      tooltip: \"Unique Identifier for the Case across JustAct platform\",\n      sorting: false,\n      render: (rowData) => (\n        <HyperLink\n          onClick={() =>\n            navigate(\n              `/dashboard/cases/${rowData?.case?.id}?caseType=${rowData?.case?.resolutionKind}`\n            )\n          }\n        >\n          {rowData?.case?.id}\n        </HyperLink>\n      ),\n    },\n    {\n      field: \"title\",\n      title: labels[\"table.case_title\"],\n      sorting: false,\n      render: (rowData) => (\n        <StyledTitle\n          onClick={() => navigate(`/dashboard/cases/${rowData?.case?.id}`)}\n        >\n          {rowData?.case?.title}\n        </StyledTitle>\n      ),\n    },\n    {\n      field: \"amount\",\n      title: labels[\"table.amount\"],\n      sorting: false,\n      render: (rowData) => \"INR \" + Number(rowData?.fee?.total).toFixed(2),\n    },\n    {\n      field: \"created_at\",\n      title: labels[\"table.due\"],\n      sorting: true,\n      render: (rowData) =>\n        rowData?.case?.submittedOn\n          ? moment(rowData?.case?.submittedOn)\n              .add(7, \"days\")\n              .format(\"DD/MM/YYYY\")\n          : moment(parseTimeStamp(rowData?.case?.created_at))\n              .add(7, \"days\")\n              .format(\"DD/MM/YYYY\"),\n    },\n    {\n      field: \"details\",\n      title: labels[\"table.description\"],\n      sorting: false,\n      render: (rowData) =>\n        renderStatus(\n          PAYMENT_STATUS_CART[rowData?.case?.status]?.value,\n          rowData?.case\n        ),\n    },\n  ];\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        perPage: 10,\n        inCart: true,\n        pagination: true,\n      };\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n\n      let stringParams = `?${queryString.stringify(params)}`;\n      getCases(stringParams)\n        .then(async (result) => {\n          if (result) {\n            resolve({\n              data: result?.cartItems.data,\n              page: result?.cartItems.page - 1,\n              total: result?.cartItems.total,\n            });\n            setState(result?.cartItems);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  const detailPanel = [\n    {\n      tooltip: \"View detailed split up...\",\n      render: (rowData) => {\n        return <CartSplitUp data={rowData} />;\n      },\n    },\n  ];\n\n  const generateProfoma = async () => {\n    try {\n      setLoader({ state: true, message: \"Generating Proforma Invoice...\" });\n      const result = await CartService.generatePerforma();\n      if (result?.status === \"proformaGenerated\") {\n        enqueueSnackbar(\"Profoma invoice is generated Successfully\", {\n          variant: \"success\",\n        });\n        navigate(\"/dashboard/cart\");\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\",\n      });\n    } finally {\n      setLoader({ state: false });\n    }\n  };\n\n  return (\n    <Header showSidebar>\n      <PageWrapper>\n        <Heading>\n          <span onClick={() => navigate(\"/dashboard/cart\")}>\n            {labels[\"appbar.case_cart\"]}\n          </span>\n          <span>{\" > \"}</span>\n          <span>{labels[\"selected_case\"]}</span>\n        </Heading>\n        <TableWrapper>\n          <CustomTable\n            hidePagination={state?.lastPage === 1}\n            pageSize={state?.data?.length ? state?.data?.length : 10}\n            {...{\n              columns,\n              data,\n              MTRef,\n              state,\n            }}\n            detailPanel={detailPanel}\n            singularTitle=\"\"\n            pluralTitle={labels.cases}\n            noToolbar\n          />\n        </TableWrapper>\n        <Footer>\n          <Hr />\n          <Row style={{ marginTop: 30, marginBottom: 30 }}>\n            <div>\n              <TextWrapper>\n                <Text>{labels.payable_amount}: </Text>\n                <TextBold>\n                  INR {location?.state?.selectedCartAmount || 0}\n                </TextBold>\n              </TextWrapper>\n              <div className=\"highlighted\">*All line items include 18% GST</div>\n            </div>\n            <PrimaryCTAButton\n              style={{\n                width: \"216px\",\n                marginLeft: \"26px\",\n              }}\n              onClick={() => generateProfoma()}\n            >\n              {labels.proceed}\n            </PrimaryCTAButton>\n          </Row>\n        </Footer>\n      </PageWrapper>\n    </Header>\n  );\n};\n\nexport default ProfomaCaseListing;\n"]},"metadata":{},"sourceType":"module"}