{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CustomTable/common/CustomHeader.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { Tooltip, Checkbox } from \"@material-ui/core\";\n\nconst toolTipIcon = require(\"../../../../assets/images/white_tooltip.png\");\n\nconst sortIcon = require(\"../../../../assets/images/sortIcon.svg\");\n\nconst CustomHeader = ({\n  MTRef,\n  ...props\n}) => {\n  function handleSort(column) {\n    var _MTRef$current, _MTRef$current$state;\n\n    if (column.hasOwnProperty(\"sorting\") && !column.sorting) {\n      return false;\n    }\n\n    const oldQuery = MTRef === null || MTRef === void 0 ? void 0 : (_MTRef$current = MTRef.current) === null || _MTRef$current === void 0 ? void 0 : (_MTRef$current$state = _MTRef$current.state) === null || _MTRef$current$state === void 0 ? void 0 : _MTRef$current$state.query;\n\n    if (oldQuery) {\n      var _oldQuery$orderBy, _oldQuery$orderBy2;\n\n      const orderBy = {\n        field: column.field\n      };\n      let orderDirection = \"asc\";\n\n      if (((_oldQuery$orderBy = oldQuery.orderBy) === null || _oldQuery$orderBy === void 0 ? void 0 : _oldQuery$orderBy.field) && ((_oldQuery$orderBy2 = oldQuery.orderBy) === null || _oldQuery$orderBy2 === void 0 ? void 0 : _oldQuery$orderBy2.field) === column.field) {\n        orderDirection = oldQuery.orderDirection === \"asc\" ? \"desc\" : \"asc\";\n      }\n\n      const newQuery = { ...oldQuery,\n        orderBy,\n        orderDirection\n      };\n      MTRef.current.onQueryChange(newQuery);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"thead\", {\n    className: \"MuiTableHead-root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: \"MuiTableRow-root MuiTableRow-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, props.hasSelection ? /*#__PURE__*/React.createElement(TH, {\n    style: {\n      minWidth: 60\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: e => props.onAllSelected(e.target.checked),\n    checked: props.dataCount === props.selectedCount,\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"checked\",\n      src: require(\"../../../../assets/images/checkboxWhite.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }),\n    checkedIcon: /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"checked\",\n      src: require(\"../../../../assets/images/checkBoxSelectedWhite.svg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })) : null, props.columns.map(column => /*#__PURE__*/React.createElement(TH, {\n    key: column.title,\n    style: { ...(column === null || column === void 0 ? void 0 : column.headerStyle)\n    } // cursor={\n    //   (column.hasOwnProperty(\"sorting\") && column?.sorting) ||\n    //   !column.hasOwnProperty(\"sorting\")\n    //     ? \"pointer\"\n    //     : \"inherit\"\n    // }\n    ,\n    onClick: () => handleSort(column),\n    className: \"MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, column.title, column.tooltip && /*#__PURE__*/React.createElement(Tooltip, {\n    style: {\n      position: \"relative\",\n      top: 3\n    },\n    title: column.tooltip,\n    placement: \"top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TooltipIcon, {\n    src: toolTipIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  })), column.hasOwnProperty(\"sorting\") ? !column.sorting ? null : /*#__PURE__*/React.createElement(SortIcon, {\n    src: sortIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(SortIcon, {\n    src: sortIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })))), props.hasDetailPanel && /*#__PURE__*/React.createElement(TH, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 34\n    }\n  })));\n};\n\nexport default CustomHeader;\nconst TooltipIcon = styled.img`\n  /* width: 17px; */\n  height: 17px;\n  margin-left: 9px;\n  cursor: pointer;\n  @media (max-width: 1440px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\nconst SortIcon = styled.img`\n  width: 8px;\n  height: 8px;\n  margin-left: 9px;\n  object-fit: contain;\n  cursor: pointer;\n`;\nconst TH = styled.th`\n  box-sizing: border-box;\n  white-space: nowrap;\n  cursor: ${({\n  cursor\n}) => cursor};\n  @media (max-width: 1440px) {\n    font-size: 12px;\n  }\n`;\nconst TableRow = styled.tr`\n  max-height: 44px !important;\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/CustomTable/common/CustomHeader.js"],"names":["React","styled","Tooltip","Checkbox","toolTipIcon","require","sortIcon","CustomHeader","MTRef","props","handleSort","column","hasOwnProperty","sorting","oldQuery","current","state","query","orderBy","field","orderDirection","newQuery","onQueryChange","hasSelection","minWidth","e","onAllSelected","target","checked","dataCount","selectedCount","columns","map","title","headerStyle","tooltip","position","top","hasDetailPanel","TooltipIcon","img","SortIcon","TH","th","cursor","TableRow","tr"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Tooltip, Checkbox } from \"@material-ui/core\";\n\nconst toolTipIcon = require(\"../../../../assets/images/white_tooltip.png\");\nconst sortIcon = require(\"../../../../assets/images/sortIcon.svg\");\n\nconst CustomHeader = ({ MTRef, ...props }) => {\n  function handleSort(column) {\n    if (column.hasOwnProperty(\"sorting\") && !column.sorting) {\n      return false;\n    }\n    const oldQuery = MTRef?.current?.state?.query;\n    if (oldQuery) {\n      const orderBy = { field: column.field };\n      let orderDirection = \"asc\";\n      if (oldQuery.orderBy?.field && oldQuery.orderBy?.field === column.field) {\n        orderDirection = oldQuery.orderDirection === \"asc\" ? \"desc\" : \"asc\";\n      }\n      const newQuery = { ...oldQuery, orderBy, orderDirection };\n      MTRef.current.onQueryChange(newQuery);\n    }\n  }\n  return (\n    <thead className=\"MuiTableHead-root\">\n      <TableRow className=\"MuiTableRow-root MuiTableRow-head\">\n        {props.hasSelection ? (\n          <TH\n            style={{\n              minWidth: 60,\n            }}\n          >\n            <Checkbox\n              onChange={(e) => props.onAllSelected(e.target.checked)}\n              checked={props.dataCount === props.selectedCount}\n              icon={\n                <img\n                  alt=\"checked\"\n                  src={require(\"../../../../assets/images/checkboxWhite.svg\")}\n                />\n              }\n              checkedIcon={\n                <img\n                  alt=\"checked\"\n                  src={require(\"../../../../assets/images/checkBoxSelectedWhite.svg\")}\n                />\n              }\n            />\n          </TH>\n        ) : null}\n        {props.columns.map((column) => (\n          <TH\n            key={column.title}\n            style={{\n              ...column?.headerStyle,\n            }}\n            // cursor={\n            //   (column.hasOwnProperty(\"sorting\") && column?.sorting) ||\n            //   !column.hasOwnProperty(\"sorting\")\n            //     ? \"pointer\"\n            //     : \"inherit\"\n            // }\n            onClick={() => handleSort(column)}\n            className=\"MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft\"\n          >\n            <>\n              {column.title}\n              {column.tooltip && (\n                <Tooltip\n                  style={{ position: \"relative\", top: 3 }}\n                  title={column.tooltip}\n                  placement=\"top\"\n                >\n                  <TooltipIcon src={toolTipIcon} />\n                </Tooltip>\n              )}\n              {column.hasOwnProperty(\"sorting\") ? (\n                !column.sorting ? null : (\n                  <SortIcon src={sortIcon} />\n                )\n              ) : (\n                <SortIcon src={sortIcon} />\n              )}\n            </>\n          </TH>\n        ))}\n        {props.hasDetailPanel && <TH />}\n      </TableRow>\n    </thead>\n  );\n};\n\nexport default CustomHeader;\n\nconst TooltipIcon = styled.img`\n  /* width: 17px; */\n  height: 17px;\n  margin-left: 9px;\n  cursor: pointer;\n  @media (max-width: 1440px) {\n    width: 14px;\n    height: 14px;\n  }\n`;\n\nconst SortIcon = styled.img`\n  width: 8px;\n  height: 8px;\n  margin-left: 9px;\n  object-fit: contain;\n  cursor: pointer;\n`;\n\nconst TH = styled.th`\n  box-sizing: border-box;\n  white-space: nowrap;\n  cursor: ${({ cursor }) => cursor};\n  @media (max-width: 1440px) {\n    font-size: 12px;\n  }\n`;\n\nconst TableRow = styled.tr`\n  max-height: 44px !important;\n`;\n"]},"metadata":{},"sourceType":"module"}