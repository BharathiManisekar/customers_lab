{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/PartyTable/index.js\",\n    _theme$breakpoints,\n    _theme$breakpoints2;\n\nimport React, { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { useSnackbar } from \"notistack\";\nimport queryString from \"query-string\";\nimport { navigate } from \"@reach/router\";\nimport CustomTable from \"../CustomTable/CustomTable\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport { getErrorMessage, getPartyLabelByStatus, parseTimeStamp } from \"../../../helpers/functions\";\nimport PartyService from \"../../../services/PartyService\";\nimport labels from \"../../../helpers/labels.json\";\n\nfunction handleNavigateToParty(type, id) {\n  switch (type) {\n    case \"active\":\n      navigate(`/dashboard/parties/${id}`);\n      break;\n\n    default:\n      navigate(`/dashboard/parties/draft/${id}`);\n      break;\n  }\n}\n\nasync function getParties(query = \"\") {\n  try {\n    const response = await PartyService.getParties(query);\n    const stats = await PartyService.partyStats();\n    return { ...response,\n      stats\n    };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst filterByStatus = selectedFilter => {\n  let key = \"\";\n\n  switch (selectedFilter) {\n    case labels[\"filters.draft\"]:\n      key = \"draft\";\n      break;\n\n    case labels[\"filters.under_verify\"]:\n      key = \"underReview\";\n      break;\n\n    case labels[\"filters.active\"]:\n      key = \"active\";\n      break;\n\n    default:\n      break;\n  }\n\n  return key;\n};\n\nconst initState = [{\n  label: labels[\"filters.all\"],\n  key: \"allCount\"\n}, {\n  label: labels[\"filters.active\"],\n  key: \"activeCount\"\n}, {\n  label: labels[\"filters.draft\"],\n  key: \"draftCount\"\n}, {\n  label: labels[\"filters.under_verify\"],\n  key: \"underReviewCount\"\n}];\nexport default function PartyTable() {\n  var _state$data, _state$data2;\n\n  const [state, setState] = useState();\n  const MTRef = useRef();\n  const [filters, setFilters] = useState(initState);\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const [selectedFilter, setSelectedFilter] = useState();\n  useEffect(() => {\n    var _MTRef$current;\n\n    if (selectedFilter && (MTRef === null || MTRef === void 0 ? void 0 : (_MTRef$current = MTRef.current) === null || _MTRef$current === void 0 ? void 0 : _MTRef$current.onQueryChange)) {\n      var _MTRef$current2, _MTRef$current2$state;\n\n      MTRef.current.onQueryChange(MTRef === null || MTRef === void 0 ? void 0 : (_MTRef$current2 = MTRef.current) === null || _MTRef$current2 === void 0 ? void 0 : (_MTRef$current2$state = _MTRef$current2.state) === null || _MTRef$current2$state === void 0 ? void 0 : _MTRef$current2$state.query);\n    }\n  }, [selectedFilter]);\n  useEffect(() => {\n    if (!_.isEmpty(state)) {\n      setFilters([{\n        label: labels[\"filters.all\"],\n        value: state.total\n      }, {\n        label: labels[\"filters.draft\"]\n      }, {\n        label: labels[\"filters.under_verify\"]\n      }]);\n    }\n  }, [state]);\n\n  function setStats(stats) {\n    const mapped = initState.map(filter => {\n      let returnData = {\n        label: filter.label\n      };\n\n      if (stats[filter.key] >= 0) {\n        returnData.value = stats[filter.key];\n      }\n\n      return returnData;\n    });\n    setFilters(mapped);\n  }\n\n  const getPartyAgent = agentList => {\n    var _agentList$;\n\n    if (((_agentList$ = agentList[0]) === null || _agentList$ === void 0 ? void 0 : _agentList$.role) === \"primary\") {\n      return \"Primary Agent\";\n    } else {\n      return \"Agent\";\n    }\n  };\n\n  const data = query => new Promise(resolve => {\n    var _query$orderBy;\n\n    let params = {\n      page: query.page + 1,\n      status: filterByStatus(selectedFilter),\n      perPage: 10,\n      search: query.search\n    };\n\n    if ((_query$orderBy = query.orderBy) === null || _query$orderBy === void 0 ? void 0 : _query$orderBy.field) {\n      params.sort = query.orderBy.field;\n      params.sortDirection = query.orderDirection;\n    }\n\n    let stringParams = \"\";\n\n    if (!_.isEmpty(params)) {\n      stringParams = `?${queryString.stringify(params)}`;\n    }\n\n    getParties(stringParams).then(result => {\n      if (result) {\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          total: result.total\n        });\n        setState(result);\n        setStats(result.stats);\n      }\n    }).catch(error => {\n      enqueueSnackbar(getErrorMessage(error), {\n        variant: \"error\"\n      });\n      setState({\n        data: [],\n        lastPage: 1,\n        page: 1,\n        perPage: 10,\n        total: 0\n      });\n      resolve({\n        data: [],\n        page: 0,\n        total: 0\n      });\n    });\n  });\n\n  const columns = [{\n    field: \"id\",\n    title: labels[\"table.party_id\"],\n    tooltip: \"Unique Identifier for the Party across JustAct platform\",\n    render: rowData => /*#__PURE__*/React.createElement(HyperLink, {\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }, rowData.id),\n    headerStyle: {\n      paddingLeft: 35\n    }\n  }, {\n    field: \"name\",\n    title: labels[\"table.party_name\"],\n    render: rowData => /*#__PURE__*/React.createElement(Bold, {\n      onClick: () => handleNavigateToParty(rowData === null || rowData === void 0 ? void 0 : rowData.status, rowData === null || rowData === void 0 ? void 0 : rowData.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, rowData.name)\n  }, {\n    field: \"kind\",\n    title: labels[\"table.party_type\"],\n    tooltip: \"Claimant or Respondent\",\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, _.capitalize(rowData.kind))\n  }, {\n    field: \"role\",\n    title: labels[\"table.party_role\"],\n    tooltip: \"Your role is either Claimant or Respondent with respect to a case\",\n    sorting: false,\n    render: rowData => {\n      var _rowData$agents;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : (_rowData$agents = rowData.agents) === null || _rowData$agents === void 0 ? void 0 : _rowData$agents.length) > 0 ? getPartyAgent(rowData === null || rowData === void 0 ? void 0 : rowData.agents) : /*#__PURE__*/React.createElement(Center, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }\n      }, \"-\"));\n    }\n  }, {\n    field: \"documentKind\",\n    tooltip: \"Identifier\",\n    title: labels[\"table.party_idKind\"],\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, rowData.documentKind === \"voter\" ? \"VOTER ID\" : rowData.documentKind === \"aadhar\" ? \"AADHAAR\" : _.upperCase(rowData.documentKind))\n  }, {\n    field: \"status\",\n    title: labels[\"table.status\"],\n    tooltip: \"Status of the Party\",\n    sorting: false,\n    render: rowData => getPartyLabelByStatus(rowData.status)\n  }, {\n    field: \"created_at\",\n    tooltip: \"Party Created Date\",\n    title: labels[\"table.created\"],\n    render: rowData => /*#__PURE__*/React.createElement(React.Fragment, null, (rowData === null || rowData === void 0 ? void 0 : rowData.submittedOn) ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\") : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\"))\n  }];\n  return /*#__PURE__*/React.createElement(CustomTable, {\n    hidePagination: (state === null || state === void 0 ? void 0 : state.lastPage) === 1,\n    pageSize: (state === null || state === void 0 ? void 0 : (_state$data = state.data) === null || _state$data === void 0 ? void 0 : _state$data.length) ? state === null || state === void 0 ? void 0 : (_state$data2 = state.data) === null || _state$data2 === void 0 ? void 0 : _state$data2.length : 10,\n    pluralTitle: labels[\"parties\"],\n    singularTitle: labels[\"party\"].toLowerCase(),\n    placeholderText: labels[\"table.partySearch\"],\n    columns,\n    data,\n    filters,\n    selectedFilter,\n    setSelectedFilter,\n    MTRef,\n    state: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  });\n}\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n  padding-left: 29px;\n`;\nconst Bold = styled.span`\n  cursor: pointer;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints = theme.breakpoints) === null || _theme$breakpoints === void 0 ? void 0 : _theme$breakpoints.sm_up} {\n    font-family: ${theme.fonts.primaryFontSemiBold};\n  }\n`;\nconst Center = styled.div`\n  margin-left: 0;\n  @media ${theme === null || theme === void 0 ? void 0 : (_theme$breakpoints2 = theme.breakpoints) === null || _theme$breakpoints2 === void 0 ? void 0 : _theme$breakpoints2.lg_up} {\n    margin-left: 35px;\n  }\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/common/PartyTable/index.js"],"names":["React","useState","useEffect","useRef","styled","moment","_","useSnackbar","queryString","navigate","CustomTable","COLORS","theme","getErrorMessage","getPartyLabelByStatus","parseTimeStamp","PartyService","labels","handleNavigateToParty","type","id","getParties","query","response","stats","partyStats","error","filterByStatus","selectedFilter","key","initState","label","PartyTable","state","setState","MTRef","filters","setFilters","enqueueSnackbar","setSelectedFilter","current","onQueryChange","isEmpty","value","total","setStats","mapped","map","filter","returnData","getPartyAgent","agentList","role","data","Promise","resolve","params","page","status","perPage","search","orderBy","field","sort","sortDirection","orderDirection","stringParams","stringify","then","result","catch","variant","lastPage","columns","title","tooltip","render","rowData","headerStyle","paddingLeft","name","capitalize","kind","sorting","agents","length","documentKind","upperCase","submittedOn","format","created_at","toLowerCase","HyperLink","span","BTN_GREEN","Bold","breakpoints","sm_up","fonts","primaryFontSemiBold","Center","div","lg_up"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { useSnackbar } from \"notistack\";\nimport queryString from \"query-string\";\nimport { navigate } from \"@reach/router\";\nimport CustomTable from \"../CustomTable/CustomTable\";\nimport COLORS from \"../../../assets/Colors\";\nimport theme from \"../../../assets/theme\";\nimport {\n  getErrorMessage,\n  getPartyLabelByStatus,\n  parseTimeStamp,\n} from \"../../../helpers/functions\";\nimport PartyService from \"../../../services/PartyService\";\nimport labels from \"../../../helpers/labels.json\";\n\nfunction handleNavigateToParty(type, id) {\n  switch (type) {\n    case \"active\":\n      navigate(`/dashboard/parties/${id}`);\n      break;\n    default:\n      navigate(`/dashboard/parties/draft/${id}`);\n      break;\n  }\n}\n\nasync function getParties(query = \"\") {\n  try {\n    const response = await PartyService.getParties(query);\n    const stats = await PartyService.partyStats();\n    return { ...response, stats };\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst filterByStatus = (selectedFilter) => {\n  let key = \"\";\n  switch (selectedFilter) {\n    case labels[\"filters.draft\"]:\n      key = \"draft\";\n      break;\n    case labels[\"filters.under_verify\"]:\n      key = \"underReview\";\n      break;\n    case labels[\"filters.active\"]:\n      key = \"active\";\n      break;\n    default:\n      break;\n  }\n  return key;\n};\n\nconst initState = [\n  { label: labels[\"filters.all\"], key: \"allCount\" },\n  { label: labels[\"filters.active\"], key: \"activeCount\" },\n  { label: labels[\"filters.draft\"], key: \"draftCount\" },\n  { label: labels[\"filters.under_verify\"], key: \"underReviewCount\" },\n];\n\nexport default function PartyTable() {\n  const [state, setState] = useState();\n  const MTRef = useRef();\n  const [filters, setFilters] = useState(initState);\n  const { enqueueSnackbar } = useSnackbar();\n  const [selectedFilter, setSelectedFilter] = useState();\n\n  useEffect(() => {\n    if (selectedFilter && MTRef?.current?.onQueryChange) {\n      MTRef.current.onQueryChange(MTRef?.current?.state?.query);\n    }\n  }, [selectedFilter]);\n\n  useEffect(() => {\n    if (!_.isEmpty(state)) {\n      setFilters([\n        { label: labels[\"filters.all\"], value: state.total },\n        { label: labels[\"filters.draft\"] },\n        { label: labels[\"filters.under_verify\"] },\n      ]);\n    }\n  }, [state]);\n\n  function setStats(stats) {\n    const mapped = initState.map((filter) => {\n      let returnData = {\n        label: filter.label,\n      };\n      if (stats[filter.key] >= 0) {\n        returnData.value = stats[filter.key];\n      }\n      return returnData;\n    });\n    setFilters(mapped);\n  }\n\n  const getPartyAgent = (agentList) => {\n    if (agentList[0]?.role === \"primary\") {\n      return \"Primary Agent\";\n    } else {\n      return \"Agent\";\n    }\n  };\n\n  const data = (query) =>\n    new Promise((resolve) => {\n      let params = {\n        page: query.page + 1,\n        status: filterByStatus(selectedFilter),\n        perPage: 10,\n        search: query.search,\n      };\n      if (query.orderBy?.field) {\n        params.sort = query.orderBy.field;\n        params.sortDirection = query.orderDirection;\n      }\n      let stringParams = \"\";\n      if (!_.isEmpty(params)) {\n        stringParams = `?${queryString.stringify(params)}`;\n      }\n      getParties(stringParams)\n        .then((result) => {\n          if (result) {\n            resolve({\n              data: result.data,\n              page: result.page - 1,\n              total: result.total,\n            });\n            setState(result);\n            setStats(result.stats);\n          }\n        })\n        .catch((error) => {\n          enqueueSnackbar(getErrorMessage(error), {\n            variant: \"error\",\n          });\n          setState({ data: [], lastPage: 1, page: 1, perPage: 10, total: 0 });\n          resolve({\n            data: [],\n            page: 0,\n            total: 0,\n          });\n        });\n    });\n\n  const columns = [\n    {\n      field: \"id\",\n      title: labels[\"table.party_id\"],\n      tooltip: \"Unique Identifier for the Party across JustAct platform\",\n      render: (rowData) => (\n        <HyperLink\n          onClick={() => handleNavigateToParty(rowData?.status, rowData?.id)}\n        >\n          {rowData.id}\n        </HyperLink>\n      ),\n      headerStyle: {\n        paddingLeft: 35,\n      },\n    },\n    {\n      field: \"name\",\n      title: labels[\"table.party_name\"],\n      render: (rowData) => (\n        <Bold\n          onClick={() => handleNavigateToParty(rowData?.status, rowData?.id)}\n        >\n          {rowData.name}\n        </Bold>\n      ),\n    },\n    {\n      field: \"kind\",\n      title: labels[\"table.party_type\"],\n      tooltip: \"Claimant or Respondent\",\n      render: (rowData) => <>{_.capitalize(rowData.kind)}</>,\n    },\n    {\n      field: \"role\",\n      title: labels[\"table.party_role\"],\n      tooltip:\n        \"Your role is either Claimant or Respondent with respect to a case\",\n      sorting: false,\n      render: (rowData) => (\n        <>\n          {rowData?.agents?.length > 0 ? (\n            getPartyAgent(rowData?.agents)\n          ) : (\n            <Center>-</Center>\n          )}\n        </>\n      ),\n    },\n    {\n      field: \"documentKind\",\n      tooltip: \"Identifier\",\n      title: labels[\"table.party_idKind\"],\n      render: (rowData) => (\n        <>\n          {rowData.documentKind === \"voter\"\n            ? \"VOTER ID\"\n            : rowData.documentKind === \"aadhar\"\n            ? \"AADHAAR\"\n            : _.upperCase(rowData.documentKind)}\n        </>\n      ),\n    },\n    {\n      field: \"status\",\n      title: labels[\"table.status\"],\n      tooltip: \"Status of the Party\",\n      sorting: false,\n      render: (rowData) => getPartyLabelByStatus(rowData.status),\n    },\n    {\n      field: \"created_at\",\n      tooltip: \"Party Created Date\",\n      title: labels[\"table.created\"],\n      render: (rowData) => (\n        <>\n          {rowData?.submittedOn\n            ? moment(rowData.submittedOn).format(\"DD/MM/YYYY\")\n            : moment(parseTimeStamp(rowData.created_at)).format(\"DD/MM/YYYY\")}\n        </>\n      ),\n    },\n  ];\n\n  return (\n    <CustomTable\n      hidePagination={state?.lastPage === 1}\n      pageSize={state?.data?.length ? state?.data?.length : 10}\n      pluralTitle={labels[\"parties\"]}\n      singularTitle={labels[\"party\"].toLowerCase()}\n      placeholderText={labels[\"table.partySearch\"]}\n      {...{\n        columns,\n        data,\n        filters,\n        selectedFilter,\n        setSelectedFilter,\n        MTRef,\n      }}\n      state={state}\n    />\n  );\n}\n\nconst HyperLink = styled.span`\n  cursor: pointer;\n  color: ${COLORS.BTN_GREEN};\n  text-decoration: underline;\n  padding-left: 29px;\n`;\nconst Bold = styled.span`\n  cursor: pointer;\n  @media ${theme?.breakpoints?.sm_up} {\n    font-family: ${theme.fonts.primaryFontSemiBold};\n  }\n`;\n\nconst Center = styled.div`\n  margin-left: 0;\n  @media ${theme?.breakpoints?.lg_up} {\n    margin-left: 35px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}