{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/SmallClaimTable.js\";\nimport React, { createRef, useEffect, useRef, useState } from \"react\";\nimport theme from \"../../../../assets/theme\";\nimport { Checkbox, Tooltip, makeStyles } from \"@material-ui/core\";\nimport { Images } from \"../../../../assets/images\";\nimport ReactTooltip from \"react-tooltip\";\nimport styled from \"styled-components\";\nimport { Formik, FieldArray } from \"formik\";\nimport DescriptionModal from \"../../../internal/CreateCase3/components/DescriptionModal\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport { formatNumberToMetrics, getErrorMessage } from \"../../../../helpers/functions\";\nimport CaseService from \"../../../../services/CaseService\";\nimport _ from \"lodash\";\nimport AWSService from \"../../../../services/AWSService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport StatusBadge from \"../../../common/StatusBadge\";\n\nconst SmallClaimTable = ({\n  items,\n  enableCheckBox,\n  selectAll,\n  allowEdit,\n  itemsChecked,\n  disableChekBox,\n  heading,\n  formikRef,\n  isRespondent,\n  caseId,\n  roundNumber,\n  status,\n  errorText\n}) => {\n  const useTooltipStyles = makeStyles(() => ({\n    tooltip: {\n      margin: 0\n    }\n  }));\n  const {\n    hideAlert,\n    showAlert\n  } = useAlert();\n  const classes = useTooltipStyles();\n  const [modal, setModal] = useState({\n    state: false\n  });\n  const fileRef = useRef([]);\n  const [length, setLength] = useState(1);\n  const [documents, setDocuments] = useState([]);\n  const {\n    setLoader\n  } = useLoader();\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  useEffect(() => {\n    if ((items === null || items === void 0 ? void 0 : items.length) > 0) {\n      setLength(items === null || items === void 0 ? void 0 : items.length);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [items === null || items === void 0 ? void 0 : items.length]);\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length).fill().map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const showwarning = value => {\n    var _value$offer;\n\n    return Number(value === null || value === void 0 ? void 0 : (_value$offer = value.offer) === null || _value$offer === void 0 ? void 0 : _value$offer.claimValue) === Number(value === null || value === void 0 ? void 0 : value.previousOffer);\n  }; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  async function getCaseDocuments() {\n    try {\n      const result = await CaseService.getcaseDocuments(caseId, \"?page=1&perPage=10000\");\n      if (result === null || result === void 0 ? void 0 : result.data) setDocuments(result.data.filter(doc => {\n        var _doc$meta;\n\n        return (doc === null || doc === void 0 ? void 0 : (_doc$meta = doc.meta) === null || _doc$meta === void 0 ? void 0 : _doc$meta.round) == roundNumber;\n      }));\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    if (items === null || items === void 0 ? void 0 : items.length) {\n      getCaseDocuments();\n    }\n  }, [items]);\n\n  function renderUploadBox({\n    item,\n    index\n  }) {\n    var _item$offer, _item$acceptedOffer;\n\n    const document = documents.find(doc => {\n      var _doc$meta2, _doc$meta3, _doc$meta4, _doc$meta5;\n\n      return (doc === null || doc === void 0 ? void 0 : (_doc$meta2 = doc.meta) === null || _doc$meta2 === void 0 ? void 0 : _doc$meta2.claimItemId) == (item === null || item === void 0 ? void 0 : item.id) && (isRespondent ? (doc === null || doc === void 0 ? void 0 : (_doc$meta3 = doc.meta) === null || _doc$meta3 === void 0 ? void 0 : _doc$meta3.role) == \"respondent\" : (doc === null || doc === void 0 ? void 0 : (_doc$meta4 = doc.meta) === null || _doc$meta4 === void 0 ? void 0 : _doc$meta4.role) == \"claimant\") && (doc === null || doc === void 0 ? void 0 : (_doc$meta5 = doc.meta) === null || _doc$meta5 === void 0 ? void 0 : _doc$meta5.round) == roundNumber;\n    });\n\n    if (allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer = item.offer) === null || _item$offer === void 0 ? void 0 : _item$offer.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer = item.acceptedOffer) === null || _item$acceptedOffer === void 0 ? void 0 : _item$acceptedOffer.status) === \"accepted\")) {\n      if (_.isEmpty(document)) {\n        return /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => {\n            var _fileRef$current$inde, _fileRef$current$inde2;\n\n            return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde = fileRef.current[index]) === null || _fileRef$current$inde === void 0 ? void 0 : (_fileRef$current$inde2 = _fileRef$current$inde.current) === null || _fileRef$current$inde2 === void 0 ? void 0 : _fileRef$current$inde2.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        }, \"Add\");\n      } else {\n        return /*#__PURE__*/React.createElement(Row, {\n          style: {\n            marginTop: 0,\n            width: 123\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => window.open(document === null || document === void 0 ? void 0 : document.url),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, \"View\"), /*#__PURE__*/React.createElement(Seperator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(HyperLink, {\n          onClick: () => {\n            var _fileRef$current$inde3, _fileRef$current$inde4;\n\n            return fileRef === null || fileRef === void 0 ? void 0 : (_fileRef$current$inde3 = fileRef.current[index]) === null || _fileRef$current$inde3 === void 0 ? void 0 : (_fileRef$current$inde4 = _fileRef$current$inde3.current) === null || _fileRef$current$inde4 === void 0 ? void 0 : _fileRef$current$inde4.click();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }\n        }, \"Update\"));\n      }\n    } else {\n      return !_.isEmpty(document) || item.description_document_url ? /*#__PURE__*/React.createElement(HyperLink, {\n        onClick: () => window.open(!_.isEmpty(document) ? document.url : item.description_document_url),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }\n      }, \"Download\") : /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }, \"-\");\n    }\n  }\n\n  async function addOrUpdateDoc({\n    file,\n    claimItemId\n  }) {\n    try {\n      const update = documents.find(doc => {\n        var _doc$meta6;\n\n        return (doc === null || doc === void 0 ? void 0 : (_doc$meta6 = doc.meta) === null || _doc$meta6 === void 0 ? void 0 : _doc$meta6.claimItemId) == claimItemId;\n      });\n      const errorMessage = \"Invalid File Type\";\n      if ((file === null || file === void 0 ? void 0 : file.type) !== \"application/pdf\") throw errorMessage;\n      setLoader({\n        state: true,\n        message: `Uploading file ${file.name} ...`\n      });\n      const payload = {\n        key: file.name\n      };\n      const s3Response = await AWSService.getS3URL(payload);\n\n      if (s3Response.url) {\n        const url = await AWSService.uploadToS3(s3Response.url, file);\n        let payload = {\n          url\n        };\n\n        if (!_.isEmpty(update)) {\n          const docId = update.id;\n          const response = await CaseService.caseUpdateDocument(payload, caseId, docId);\n\n          if (response) {\n            const newDocs = documents.map(doc => ({ ...doc,\n              url: (doc === null || doc === void 0 ? void 0 : doc.id) === docId ? url : doc === null || doc === void 0 ? void 0 : doc.url\n            }));\n            setDocuments(newDocs);\n          }\n        } else {\n          payload.meta = {\n            round: roundNumber,\n            claimItemId,\n            role: isRespondent ? \"respondent\" : \"claimant\"\n          };\n          const response = await CaseService.caseAddDocument(payload, caseId);\n\n          if (response === null || response === void 0 ? void 0 : response.uploadedDocument) {\n            setDocuments(s => [...s, response.uploadedDocument]);\n          }\n        }\n\n        enqueueSnackbar(\"Successfully Uploaded\", {\n          variant: \"success\"\n        });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, {\n        variant: \"error\"\n      });\n    } finally {\n      setLoader({\n        state: false\n      });\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Formik, {\n    innerRef: formikRef,\n    initialValues: {\n      items: items\n    },\n    enableReinitialize: true,\n    validateOnBlur: true,\n    validateOnChange: true,\n    validateOnMount: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, ({\n    values,\n    handleChange,\n    setFieldValue,\n    errors,\n    initialValues\n  }) => {\n    var _values$items, _values$items2, _values$items3;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ClaimBoxHeading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }\n    }, enableCheckBox && /*#__PURE__*/React.createElement(Tooltip, {\n      title: disableChekBox || (values === null || values === void 0 ? void 0 : (_values$items = values.items) === null || _values$items === void 0 ? void 0 : _values$items.every(el => {\n        var _el$offer, _el$acceptedOffer;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer = el.offer) === null || _el$offer === void 0 ? void 0 : _el$offer.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer = el.acceptedOffer) === null || _el$acceptedOffer === void 0 ? void 0 : _el$acceptedOffer.status) === \"accepted\";\n      })) ? \"\" : \"Accept All\",\n      placement: \"top\",\n      classes: classes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      icon: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"checked\",\n        style: disableChekBox ? {\n          filter: \"grayscale(100%) !important\",\n          opacity: 0.5\n        } : {},\n        src: Images.checkBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 27\n        }\n      }),\n      checked: values === null || values === void 0 ? void 0 : (_values$items2 = values.items) === null || _values$items2 === void 0 ? void 0 : _values$items2.every(el => {\n        var _el$offer2, _el$acceptedOffer2;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer2 = el.offer) === null || _el$offer2 === void 0 ? void 0 : _el$offer2.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer2 = el.acceptedOffer) === null || _el$acceptedOffer2 === void 0 ? void 0 : _el$acceptedOffer2.status) === \"accepted\";\n      }),\n      onChange: ev => {\n        const checked = ev.target.checked;\n        showAlert({\n          heading: \"Please confirm!\",\n          desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n          primaryBtnText: \"Yes\",\n          secondaryBtnText: \"No\",\n          clickSecondarybtn: () => hideAlert(),\n          clickPrimaryBtn: () => {\n            selectAll(checked, setFieldValue, initialValues);\n            hideAlert();\n          },\n          descriptionTextStyle: {\n            textAlign: \"left\"\n          },\n          isOpen: true,\n          onDialogClose: () => hideAlert()\n        });\n      },\n      disabled: disableChekBox || (values === null || values === void 0 ? void 0 : (_values$items3 = values.items) === null || _values$items3 === void 0 ? void 0 : _values$items3.every(el => {\n        var _el$offer3, _el$acceptedOffer3;\n\n        return (el === null || el === void 0 ? void 0 : el.offer) ? (el === null || el === void 0 ? void 0 : (_el$offer3 = el.offer) === null || _el$offer3 === void 0 ? void 0 : _el$offer3.status) === \"accepted\" : (el === null || el === void 0 ? void 0 : (_el$acceptedOffer3 = el.acceptedOffer) === null || _el$acceptedOffer3 === void 0 ? void 0 : _el$acceptedOffer3.status) === \"accepted\";\n      })),\n      checkedIcon: /*#__PURE__*/React.createElement(\"img\", {\n        alt: \"checked\",\n        style: disableChekBox ? {\n          filter: \"grayscale(100%) !important\",\n          opacity: 0.5\n        } : {},\n        src: Images.checkBoxSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 27\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }\n    }, heading)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: 4\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }\n    }, status && /*#__PURE__*/React.createElement(StatusBadge, {\n      text: status === \"success\" ? \"Negotiation Successful\" : errorText ? errorText : \"Negotiation In Progress\",\n      status: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(ClaimTable, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }\n    }, (values === null || values === void 0 ? void 0 : values.items) && /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"items\",\n      render: () => {\n        var _values$items4;\n\n        return values === null || values === void 0 ? void 0 : (_values$items4 = values.items) === null || _values$items4 === void 0 ? void 0 : _values$items4.map((item, index) => {\n          var _item$offer2, _item$acceptedOffer2, _item$acceptedOffer3, _item$offer3, _item$acceptedOffer4, _item$offer4, _item$acceptedOffer5, _item$acceptedOffer6, _item$offer5, _item$acceptedOffer7, _item$offer6, _item$offer7, _item$acceptedOffer8, _item$offer10, _item$offer11, _item$acceptedOffer10, _errors$items$index, _errors$items$index$o, _item$offer12, _item$offer13, _item$offer14, _item$offer15, _item$offer16, _item$acceptedOffer11;\n\n          return /*#__PURE__*/React.createElement(TR, {\n            isEven: index % 2 === 0,\n            key: index,\n            accepted: (item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer2 = item.offer) === null || _item$offer2 === void 0 ? void 0 : _item$offer2.status) === \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer2 = item.acceptedOffer) === null || _item$acceptedOffer2 === void 0 ? void 0 : _item$acceptedOffer2.status) === \"accepted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 21\n            }\n          }, enableCheckBox && /*#__PURE__*/React.createElement(Tooltip, {\n            title: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer3 = item.acceptedOffer) === null || _item$acceptedOffer3 === void 0 ? void 0 : _item$acceptedOffer3.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$offer3 = item.offer) === null || _item$offer3 === void 0 ? void 0 : _item$offer3.status) === \"accepted\" ? \"\" : \"Accept claim line item\",\n            placement: \"top\",\n            classes: classes,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              width: 44,\n              marginTop: \"-5px\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(Checkbox, {\n            icon: /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"checked\",\n              style: (disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer4 = item.acceptedOffer) === null || _item$acceptedOffer4 === void 0 ? void 0 : _item$acceptedOffer4.status) === \"accepted\" ? {\n                filter: \"grayscale(100%) !important\",\n                opacity: 0.5\n              } : {}, {\n                width: 15,\n                height: 15\n              }),\n              src: Images.checkBox,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }\n            }),\n            checked: (item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer4 = item.offer) === null || _item$offer4 === void 0 ? void 0 : _item$offer4.status) === \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer5 = item.acceptedOffer) === null || _item$acceptedOffer5 === void 0 ? void 0 : _item$acceptedOffer5.status) === \"accepted\",\n            onChange: ev => {\n              const checked = ev.target.checked;\n              showAlert({\n                heading: \"Please confirm!\",\n                desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                primaryBtnText: \"Yes\",\n                secondaryBtnText: \"No\",\n                clickSecondarybtn: () => hideAlert(),\n                clickPrimaryBtn: () => {\n                  itemsChecked(checked, item, setFieldValue, `items[${index}].offer`, initialValues === null || initialValues === void 0 ? void 0 : initialValues.items[index].offer.claimValue);\n                  hideAlert();\n                },\n                descriptionTextStyle: {\n                  textAlign: \"left\"\n                },\n                isOpen: true,\n                onDialogClose: () => hideAlert()\n              });\n            },\n            disabled: disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer6 = item.acceptedOffer) === null || _item$acceptedOffer6 === void 0 ? void 0 : _item$acceptedOffer6.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$offer5 = item.offer) === null || _item$offer5 === void 0 ? void 0 : _item$offer5.status) === \"accepted\",\n            checkedIcon: /*#__PURE__*/React.createElement(\"img\", {\n              alt: \"checked\",\n              style: (disableChekBox || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer7 = item.acceptedOffer) === null || _item$acceptedOffer7 === void 0 ? void 0 : _item$acceptedOffer7.status) === \"accepted\" ? {\n                filter: \"grayscale(100%) !important\",\n                opacity: 0.5\n              } : {}, {\n                width: 15,\n                height: 15\n              }),\n              src: Images.checkBoxSelected,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }\n          }))), /*#__PURE__*/React.createElement(Details, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(LabelValueContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 27\n            }\n          }, \"Claim Item\"), /*#__PURE__*/React.createElement(Value, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 29\n            }\n          }, item.title))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 27\n            }\n          }, \"Claim Description\"), /*#__PURE__*/React.createElement(Value, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 27\n            }\n          }, item.description || (item === null || item === void 0 ? void 0 : (_item$offer6 = item.offer) === null || _item$offer6 === void 0 ? void 0 : _item$offer6.reason) || allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer7 = item.offer) === null || _item$offer7 === void 0 ? void 0 : _item$offer7.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer8 = item.acceptedOffer) === null || _item$acceptedOffer8 === void 0 ? void 0 : _item$acceptedOffer8.status) === \"accepted\") ? /*#__PURE__*/React.createElement(HyperLink, {\n            onClick: () => {\n              var _item$offer8, _item$offer9, _item$acceptedOffer9;\n\n              return setModal({\n                state: true,\n                name: `items[${index}].offer.reason`,\n                index,\n                des: (item === null || item === void 0 ? void 0 : (_item$offer8 = item.offer) === null || _item$offer8 === void 0 ? void 0 : _item$offer8.reason) || item.description || \"\",\n                editable: allowEdit && !((item === null || item === void 0 ? void 0 : (_item$offer9 = item.offer) === null || _item$offer9 === void 0 ? void 0 : _item$offer9.status) === \"accepted\" || (item === null || item === void 0 ? void 0 : (_item$acceptedOffer9 = item.acceptedOffer) === null || _item$acceptedOffer9 === void 0 ? void 0 : _item$acceptedOffer9.status) === \"accepted\")\n              });\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 31\n            }\n          }, (item === null || item === void 0 ? void 0 : (_item$offer10 = item.offer) === null || _item$offer10 === void 0 ? void 0 : _item$offer10.reason) || item.description ? \"View\" : \"Add\") : /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 31\n            }\n          }, \"-\"))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 27\n            }\n          }, \"Claim Value\"), /*#__PURE__*/React.createElement(Value, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"claim-table\",\n            style: {\n              textAlign: \"left\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 478,\n              columnNumber: 29\n            }\n          }, allowEdit && ((item === null || item === void 0 ? void 0 : item.offer) ? (item === null || item === void 0 ? void 0 : (_item$offer11 = item.offer) === null || _item$offer11 === void 0 ? void 0 : _item$offer11.status) !== \"accepted\" : (item === null || item === void 0 ? void 0 : (_item$acceptedOffer10 = item.acceptedOffer) === null || _item$acceptedOffer10 === void 0 ? void 0 : _item$acceptedOffer10.status) !== \"accepted\") ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 35\n            }\n          }, /*#__PURE__*/React.createElement(NumberFormat, {\n            thousandSeparator: true,\n            thousandsGroupStyle: \"lakh\",\n            isNumericString: true,\n            decimalScale: 2,\n            allowNegative: false,\n            \"data-tip\": true,\n            \"data-for\": `input_${index}`,\n            error: (errors === null || errors === void 0 ? void 0 : errors.items) && (errors === null || errors === void 0 ? void 0 : (_errors$items$index = errors.items[index]) === null || _errors$items$index === void 0 ? void 0 : (_errors$items$index$o = _errors$items$index.offer) === null || _errors$items$index$o === void 0 ? void 0 : _errors$items$index$o.claimValue) ? true : false,\n            className: \"input-white\",\n            value: (_item$offer12 = item.offer) === null || _item$offer12 === void 0 ? void 0 : _item$offer12.claimValue // fixedDecimalScale\n            ,\n            type: \"text\",\n            customInput: CustomInputField,\n            name: `items[${index}].offer.claimValue`,\n            onChange: e => {\n              if (e.target.value) {\n                var _e$target$value;\n\n                const numberText = (_e$target$value = e.target.value) === null || _e$target$value === void 0 ? void 0 : _e$target$value.split(\",\").join(\"\");\n                setFieldValue(`items[${index}].offer.claimValue`, Number(numberText));\n              }\n            },\n            onBlur: e => {\n              if (e.target.value) {\n                var _e$target$value2;\n\n                const numberText = (_e$target$value2 = e.target.value) === null || _e$target$value2 === void 0 ? void 0 : _e$target$value2.split(\",\").join(\"\");\n                setFieldValue(`items[${index}].offer.claimValue`, Number(numberText).toFixed(2));\n              }\n            },\n            style: {\n              maxWidth: 120\n            },\n            variant: \"outlined\",\n            min: 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 37\n            }\n          }), /*#__PURE__*/React.createElement(NumberFormat, {\n            isNumericString: true,\n            decimalScale: 2,\n            allowNegative: false,\n            value: (_item$offer13 = item.offer) === null || _item$offer13 === void 0 ? void 0 : _item$offer13.claimValue,\n            type: \"text\",\n            name: `items[${index}].offer.claimValue`,\n            onChange: handleChange,\n            style: {\n              maxWidth: 110,\n              display: \"none\"\n            },\n            min: 0,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 537,\n              columnNumber: 37\n            }\n          })), !!(item === null || item === void 0 ? void 0 : (_item$offer14 = item.offer) === null || _item$offer14 === void 0 ? void 0 : _item$offer14.suggestedClaimValue) && item.unit === \"INR\" && /*#__PURE__*/React.createElement(ReactTooltip, {\n            className: \"tool-tip\",\n            place: \"bottom\",\n            backgroundColor: \"#e1edf9\",\n            id: `input_${index}`,\n            arrowColor: \"#007aff\",\n            borderColor: \"#007aff\",\n            type: \"warning\",\n            effect: \"solid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 39\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"message\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 41\n            }\n          }, item.unit, \" \", formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$offer15 = item.offer) === null || _item$offer15 === void 0 ? void 0 : _item$offer15.suggestedClaimValue).toFixed(2).toString(), item.unit), \" \", \"( JustAct Smart Suggest )\")), showwarning(values === null || values === void 0 ? void 0 : values.items[index], initialValues === null || initialValues === void 0 ? void 0 : initialValues.items[index].previousOffer) && /*#__PURE__*/React.createElement(\"div\", {\n            className: \"waring-msg\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 37\n            }\n          }, \"You've entered the same claim value\")) : /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element \",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 33\n            }\n          }, (item === null || item === void 0 ? void 0 : item.offer) ? formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$offer16 = item.offer) === null || _item$offer16 === void 0 ? void 0 : _item$offer16.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit) : (item === null || item === void 0 ? void 0 : item.acceptedOffer) ? formatNumberToMetrics(parseFloat(item === null || item === void 0 ? void 0 : (_item$acceptedOffer11 = item.acceptedOffer) === null || _item$acceptedOffer11 === void 0 ? void 0 : _item$acceptedOffer11.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit) : formatNumberToMetrics(parseFloat(item.claimValue).toFixed(2).toString(), item === null || item === void 0 ? void 0 : item.unit))))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 27\n            }\n          }, \"Unit\"), /*#__PURE__*/React.createElement(Value, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"element\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 29\n            }\n          }, item.unit))), /*#__PURE__*/React.createElement(LabelValueContainer, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Label, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 27\n            }\n          }, \"Supporting Document\"), /*#__PURE__*/React.createElement(Value, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 27\n            }\n          }, renderUploadBox({\n            item,\n            index\n          }), /*#__PURE__*/React.createElement(\"input\", {\n            ref: fileRef === null || fileRef === void 0 ? void 0 : fileRef.current[index],\n            onChange: e => {\n              var _e$target;\n\n              return addOrUpdateDoc({\n                file: e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.files[0],\n                round: roundNumber,\n                claimItemId: item === null || item === void 0 ? void 0 : item.id\n              });\n            },\n            type: \"file\",\n            accept: \".pdf\",\n            style: {\n              display: \"none\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 29\n            }\n          })))));\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(DescriptionModal, {\n      modal,\n      setModal,\n      handleChange,\n      values,\n      setFieldValue,\n      readOnly: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }\n    }));\n  });\n};\n\nexport default SmallClaimTable;\nconst ClaimTable = styled.table`\n  width: 100%;\n  & .tool-tip {\n    border: solid 0.5px #007aff;\n    & .name {\n      font-family: ${theme.fonts.primaryFontBold};\n      font-size: 12px;\n      font-weight: bold;\n      line-height: 1.83;\n      color: #007aff;\n    }\n    & .message {\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      font-size: 12px;\n      font-weight: 600;\n      color: #293461;\n    }\n  }\n  .input-white {\n    font-size: 12px;\n    & input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    & input[type=\"number\"] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst InputContainer = styled.div`\n  padding-right: 15px;\n`;\nconst TR = styled.tr`\n  display: flex;\n  border-radius: 10px;\n  background-color: #f9f9f9;\n  margin-bottom: 15px;\n  padding: 10px 15px 0 6px;\n  width: 100%;\n\n  .element {\n    opacity: ${props => props.accepted ? \"0.3\" : \"1\"};\n    font-family: ${theme.fonts.primaryFontSemiBold};\n    font-size: 12px;\n    color: #293461;\n  }\n`;\nconst HyperLink = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 12px;\n  color: #00838c;\n  text-decoration: underline;\n  cursor: pointer;\n  display: inline-block;\n`;\nconst Seperator = styled.div`\n  height: 18px;\n  width: 1px;\n  background-color: ${COLORS.INPUT_BORDER};\n`;\nconst ClaimBoxHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 1.83;\n  color: #293461;\n  text-transform: capitalize;\n  margin-bottom: 10px;\n`;\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst LabelValueContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 20px;\n  &:nth-child(5n) {\n    margin-bottom: 15px;\n  }\n`;\nconst Label = styled.div`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 10px;\n  text-transform: capitalize;\n  font-weight: 600;\n  line-height: 1.7;\n  margin-bottom: 6px;\n  color: ${COLORS.INPUT_LABEL};\n  text-align: left;\n  & span {\n    padding: 0px;\n  }\n`;\nconst Value = styled.div`\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  color: #293461;\n  & span {\n    padding: 0px;\n  }\n  & .waring-msg {\n    color: ${COLORS.WARNING_COLOR};\n    font-size: 10px;\n    white-space: nowrap;\n    position: absolute;\n  }\n`;\nconst Details = styled.div`\n  width: 100%;\n  display: flex;\n  padding-left: 5px;\n  flex-wrap: wrap;\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/SmallClaimTable.js"],"names":["React","createRef","useEffect","useRef","useState","theme","Checkbox","Tooltip","makeStyles","Images","ReactTooltip","styled","Formik","FieldArray","DescriptionModal","CustomInputField","NumberFormat","COLORS","formatNumberToMetrics","getErrorMessage","CaseService","_","AWSService","useLoader","useSnackbar","useAlert","StatusBadge","SmallClaimTable","items","enableCheckBox","selectAll","allowEdit","itemsChecked","disableChekBox","heading","formikRef","isRespondent","caseId","roundNumber","status","errorText","useTooltipStyles","tooltip","margin","hideAlert","showAlert","classes","modal","setModal","state","fileRef","length","setLength","documents","setDocuments","setLoader","enqueueSnackbar","current","Array","fill","map","i","showwarning","value","Number","offer","claimValue","previousOffer","getCaseDocuments","result","getcaseDocuments","data","filter","doc","meta","round","error","renderUploadBox","item","index","document","find","claimItemId","id","role","acceptedOffer","isEmpty","click","marginTop","width","window","open","url","description_document_url","addOrUpdateDoc","file","update","errorMessage","type","message","name","payload","key","s3Response","getS3URL","uploadToS3","docId","response","caseUpdateDocument","newDocs","caseAddDocument","uploadedDocument","s","variant","values","handleChange","setFieldValue","errors","initialValues","marginLeft","every","el","opacity","checkBox","ev","checked","target","desc","primaryBtnText","secondaryBtnText","clickSecondarybtn","clickPrimaryBtn","descriptionTextStyle","textAlign","isOpen","onDialogClose","checkBoxSelected","height","title","description","reason","des","editable","e","numberText","split","join","toFixed","maxWidth","display","suggestedClaimValue","unit","parseFloat","toString","files","readOnly","ClaimTable","table","fonts","primaryFontBold","primaryFontSemiBold","Row","div","InputContainer","TR","tr","props","accepted","HyperLink","Seperator","INPUT_BORDER","ClaimBoxHeading","Title","LabelValueContainer","Label","primaryFontRegular","INPUT_LABEL","Value","WARNING_COLOR","Details"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,MAAtC,EAA8CC,QAA9C,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,mBAA9C;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,QAAnC;AACA,OAAOC,gBAAP,MAA6B,2DAA7B;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SACEC,qBADF,EAEEC,eAFF,QAGO,+BAHP;AAIA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,MAAMC,eAAe,GAAG,CAAC;AACvBC,EAAAA,KADuB;AAEvBC,EAAAA,cAFuB;AAGvBC,EAAAA,SAHuB;AAIvBC,EAAAA,SAJuB;AAKvBC,EAAAA,YALuB;AAMvBC,EAAAA,cANuB;AAOvBC,EAAAA,OAPuB;AAQvBC,EAAAA,SARuB;AASvBC,EAAAA,YATuB;AAUvBC,EAAAA,MAVuB;AAWvBC,EAAAA,WAXuB;AAYvBC,EAAAA,MAZuB;AAavBC,EAAAA;AAbuB,CAAD,KAclB;AACJ,QAAMC,gBAAgB,GAAGjC,UAAU,CAAC,OAAO;AACzCkC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE;AADD;AADgC,GAAP,CAAD,CAAnC;AAKA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BpB,QAAQ,EAAzC;AAEA,QAAMqB,OAAO,GAAGL,gBAAgB,EAAhC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoB5C,QAAQ,CAAC;AACjC6C,IAAAA,KAAK,EAAE;AAD0B,GAAD,CAAlC;AAGA,QAAMC,OAAO,GAAG/C,MAAM,CAAC,EAAD,CAAtB;AACA,QAAM,CAACgD,MAAD,EAASC,SAAT,IAAsBhD,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACiD,SAAD,EAAYC,YAAZ,IAA4BlD,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM;AAAEmD,IAAAA;AAAF,MAAgBhC,SAAS,EAA/B;AACA,QAAM;AAAEiC,IAAAA;AAAF,MAAsBhC,WAAW,EAAvC;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAA0B,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEuB,MAAP,IAAgB,CAApB,EAAuB;AACrBC,MAAAA,SAAS,CAACxB,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEuB,MAAR,CAAT;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACvB,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEuB,MAAR,CALM,CAAT;AAOAjD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgD,OAAO,CAACO,OAAR,CAAgBN,MAAhB,KAA2BA,MAA/B,EAAuC;AACrC;AACAD,MAAAA,OAAO,CAACO,OAAR,GAAkBC,KAAK,CAACP,MAAD,CAAL,CACfQ,IADe,GAEfC,GAFe,CAEX,CAACvC,CAAD,EAAIwC,CAAJ,KAAUX,OAAO,CAACO,OAAR,CAAgBI,CAAhB,KAAsB5D,SAAS,EAF9B,CAAlB;AAGD;AACF,GAPQ,EAON,CAACiD,OAAO,CAACO,OAAR,CAAgBN,MAAjB,EAAyBA,MAAzB,CAPM,CAAT;;AASA,QAAMW,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,WAAOC,MAAM,CAACD,KAAD,aAACA,KAAD,uCAACA,KAAK,CAAEE,KAAR,iDAAC,aAAcC,UAAf,CAAN,KAAqCF,MAAM,CAACD,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEI,aAAR,CAAlD;AACD,GAFD,CAlCI,CAsCJ;;;AAEA,iBAAeC,gBAAf,GAAkC;AAChC,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMjD,WAAW,CAACkD,gBAAZ,CACnBjC,MADmB,EAEnB,uBAFmB,CAArB;AAIA,UAAIgC,MAAJ,aAAIA,MAAJ,uBAAIA,MAAM,CAAEE,IAAZ,EACEjB,YAAY,CACVe,MAAM,CAACE,IAAP,CAAYC,MAAZ,CAAoBC,GAAD;AAAA;;AAAA,eAAS,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,yBAAAA,GAAG,CAAEC,IAAL,wDAAWC,KAAX,KAAoBrC,WAA7B;AAAA,OAAnB,CADU,CAAZ;AAGH,KATD,CASE,OAAOsC,KAAP,EAAc,CAAE;AACnB;;AAED1E,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI0B,KAAJ,aAAIA,KAAJ,uBAAIA,KAAK,CAAEuB,MAAX,EAAmB;AACjBiB,MAAAA,gBAAgB;AACjB;AACF,GAJQ,EAIN,CAACxC,KAAD,CAJM,CAAT;;AAMA,WAASiD,eAAT,CAAyB;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAzB,EAA0C;AAAA;;AACxC,UAAMC,QAAQ,GAAG3B,SAAS,CAAC4B,IAAV,CACdR,GAAD;AAAA;;AAAA,aACE,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWQ,WAAX,MAA0BJ,IAA1B,aAA0BA,IAA1B,uBAA0BA,IAAI,CAAEK,EAAhC,MACC/C,YAAY,GACT,CAAAqC,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWU,IAAX,KAAmB,YADV,GAET,CAAAX,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWU,IAAX,KAAmB,UAHvB,KAIA,CAAAX,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWC,KAAX,KAAoBrC,WALtB;AAAA,KADe,CAAjB;;AAQA,QACEP,SAAS,IACT,EACE,CAAA+C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,2BAAAA,IAAI,CAAEb,KAAN,4DAAa1B,MAAb,MAAwB,UAAxB,IACA,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,mCAAAA,IAAI,CAAEO,aAAN,4EAAqB9C,MAArB,MAAgC,UAFlC,CAFF,EAME;AACA,UAAIlB,CAAC,CAACiE,OAAF,CAAUN,QAAV,CAAJ,EAAyB;AACvB,4BACE,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAE;AAAA;;AAAA,mBAAM9B,OAAN,aAAMA,OAAN,gDAAMA,OAAO,CAAEO,OAAT,CAAiBsB,KAAjB,CAAN,oFAAM,sBAAyBtB,OAA/B,2DAAM,uBAAkC8B,KAAlC,EAAN;AAAA,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF;AAKD,OAND,MAMO;AACL,4BACE,oBAAC,GAAD;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE,CAAb;AAAgBC,YAAAA,KAAK,EAAE;AAAvB,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,SAAD;AAAW,UAAA,OAAO,EAAE,MAAMC,MAAM,CAACC,IAAP,CAAYX,QAAZ,aAAYA,QAAZ,uBAAYA,QAAQ,CAAEY,GAAtB,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE,oBAAC,SAAD;AACE,UAAA,OAAO,EAAE;AAAA;;AAAA,mBAAM1C,OAAN,aAAMA,OAAN,iDAAMA,OAAO,CAAEO,OAAT,CAAiBsB,KAAjB,CAAN,qFAAM,uBAAyBtB,OAA/B,2DAAM,uBAAkC8B,KAAlC,EAAN;AAAA,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,CADF;AAaD;AACF,KA5BD,MA4BO;AACL,aAAO,CAAClE,CAAC,CAACiE,OAAF,CAAUN,QAAV,CAAD,IAAwBF,IAAI,CAACe,wBAA7B,gBACL,oBAAC,SAAD;AACE,QAAA,OAAO,EAAE,MACPH,MAAM,CAACC,IAAP,CACE,CAACtE,CAAC,CAACiE,OAAF,CAAUN,QAAV,CAAD,GACIA,QAAQ,CAACY,GADb,GAEId,IAAI,CAACe,wBAHX,CAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG,UATH,CADK,gBAaL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF;AAeD;AACF;;AAED,iBAAeC,cAAf,CAA8B;AAAEC,IAAAA,IAAF;AAAQb,IAAAA;AAAR,GAA9B,EAAqD;AACnD,QAAI;AACF,YAAMc,MAAM,GAAG3C,SAAS,CAAC4B,IAAV,CACZR,GAAD;AAAA;;AAAA,eAAS,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,0BAAAA,GAAG,CAAEC,IAAL,0DAAWQ,WAAX,KAA0BA,WAAnC;AAAA,OADa,CAAf;AAGA,YAAMe,YAAY,GAAG,mBAArB;AACA,UAAI,CAAAF,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEG,IAAN,MAAe,iBAAnB,EAAsC,MAAMD,YAAN;AACtC1C,MAAAA,SAAS,CAAC;AAAEN,QAAAA,KAAK,EAAE,IAAT;AAAekD,QAAAA,OAAO,EAAG,kBAAiBJ,IAAI,CAACK,IAAK;AAApD,OAAD,CAAT;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,GAAG,EAAEP,IAAI,CAACK;AADI,OAAhB;AAGA,YAAMG,UAAU,GAAG,MAAMjF,UAAU,CAACkF,QAAX,CAAoBH,OAApB,CAAzB;;AACA,UAAIE,UAAU,CAACX,GAAf,EAAoB;AAClB,cAAMA,GAAG,GAAG,MAAMtE,UAAU,CAACmF,UAAX,CAAsBF,UAAU,CAACX,GAAjC,EAAsCG,IAAtC,CAAlB;AACA,YAAIM,OAAO,GAAG;AACZT,UAAAA;AADY,SAAd;;AAGA,YAAI,CAACvE,CAAC,CAACiE,OAAF,CAAUU,MAAV,CAAL,EAAwB;AACtB,gBAAMU,KAAK,GAAGV,MAAM,CAACb,EAArB;AACA,gBAAMwB,QAAQ,GAAG,MAAMvF,WAAW,CAACwF,kBAAZ,CACrBP,OADqB,EAErBhE,MAFqB,EAGrBqE,KAHqB,CAAvB;;AAKA,cAAIC,QAAJ,EAAc;AACZ,kBAAME,OAAO,GAAGxD,SAAS,CAACO,GAAV,CAAea,GAAD,KAAU,EACtC,GAAGA,GADmC;AAEtCmB,cAAAA,GAAG,EAAE,CAAAnB,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEU,EAAL,MAAYuB,KAAZ,GAAoBd,GAApB,GAA0BnB,GAA1B,aAA0BA,GAA1B,uBAA0BA,GAAG,CAAEmB;AAFE,aAAV,CAAd,CAAhB;AAIAtC,YAAAA,YAAY,CAACuD,OAAD,CAAZ;AACD;AACF,SAdD,MAcO;AACLR,UAAAA,OAAO,CAAC3B,IAAR,GAAe;AACbC,YAAAA,KAAK,EAAErC,WADM;AAEb4C,YAAAA,WAFa;AAGbE,YAAAA,IAAI,EAAEhD,YAAY,GAAG,YAAH,GAAkB;AAHvB,WAAf;AAKA,gBAAMuE,QAAQ,GAAG,MAAMvF,WAAW,CAAC0F,eAAZ,CAA4BT,OAA5B,EAAqChE,MAArC,CAAvB;;AACA,cAAIsE,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAEI,gBAAd,EAAgC;AAC9BzD,YAAAA,YAAY,CAAE0D,CAAD,IAAO,CAAC,GAAGA,CAAJ,EAAOL,QAAQ,CAACI,gBAAhB,CAAR,CAAZ;AACD;AACF;;AACDvD,QAAAA,eAAe,CAAC,uBAAD,EAA0B;AAAEyD,UAAAA,OAAO,EAAE;AAAX,SAA1B,CAAf;AACD;AACF,KA3CD,CA2CE,OAAOrC,KAAP,EAAc;AACd,YAAMuB,OAAO,GAAGhF,eAAe,CAACyD,KAAD,CAA/B;AACApB,MAAAA,eAAe,CAAC2C,OAAD,EAAU;AAAEc,QAAAA,OAAO,EAAE;AAAX,OAAV,CAAf;AACD,KA9CD,SA8CU;AACR1D,MAAAA,SAAS,CAAC;AAAEN,QAAAA,KAAK,EAAE;AAAT,OAAD,CAAT;AACD;AACF;;AACD,sBACE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAEd,SADZ;AAEE,IAAA,aAAa,EAAE;AACbP,MAAAA,KAAK,EAAEA;AADM,KAFjB;AAKE,IAAA,kBAAkB,MALpB;AAME,IAAA,cAAc,MANhB;AAOE,IAAA,gBAAgB,MAPlB;AAQE,IAAA,eAAe,MARjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUG,CAAC;AAAEsF,IAAAA,MAAF;AAAUC,IAAAA,YAAV;AAAwBC,IAAAA,aAAxB;AAAuCC,IAAAA,MAAvC;AAA+CC,IAAAA;AAA/C,GAAD;AAAA;;AAAA,wBACC,uDACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG1F,cAAc,iBACb,oBAAC,OAAD;AACE,MAAA,KAAK,EACHI,cAAc,KACdiF,MADc,aACdA,MADc,wCACdA,MAAM,CAAEtF,KADM,kDACd,cAAe4F,KAAf,CAAsBC,EAAD;AAAA;;AAAA,eACnB,CAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAExD,KAAJ,IACI,CAAAwD,EAAE,SAAF,IAAAA,EAAE,WAAF,yBAAAA,EAAE,CAAExD,KAAJ,wDAAW1B,MAAX,MAAsB,UAD1B,GAEI,CAAAkF,EAAE,SAAF,IAAAA,EAAE,WAAF,iCAAAA,EAAE,CAAEpC,aAAJ,wEAAmB9C,MAAnB,MAA8B,UAHf;AAAA,OAArB,CADc,CAAd,GAMI,EANJ,GAOI,YATR;AAWE,MAAA,SAAS,EAAC,KAXZ;AAYE,MAAA,OAAO,EAAEO,OAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AACE,MAAA,IAAI,eACF;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,KAAK,EACHb,cAAc,GACV;AACEuC,UAAAA,MAAM,EAAE,4BADV;AAEEkD,UAAAA,OAAO,EAAE;AAFX,SADU,GAKV,EARR;AAUE,QAAA,GAAG,EAAEjH,MAAM,CAACkH,QAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ;AAeE,MAAA,OAAO,EAAET,MAAF,aAAEA,MAAF,yCAAEA,MAAM,CAAEtF,KAAV,mDAAE,eAAe4F,KAAf,CAAsBC,EAAD;AAAA;;AAAA,eAC5B,CAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAExD,KAAJ,IACI,CAAAwD,EAAE,SAAF,IAAAA,EAAE,WAAF,0BAAAA,EAAE,CAAExD,KAAJ,0DAAW1B,MAAX,MAAsB,UAD1B,GAEI,CAAAkF,EAAE,SAAF,IAAAA,EAAE,WAAF,kCAAAA,EAAE,CAAEpC,aAAJ,0EAAmB9C,MAAnB,MAA8B,UAHN;AAAA,OAArB,CAfX;AAoBE,MAAA,QAAQ,EAAGqF,EAAD,IAAQ;AAChB,cAAMC,OAAO,GAAGD,EAAE,CAACE,MAAH,CAAUD,OAA1B;AACAhF,QAAAA,SAAS,CAAC;AACRX,UAAAA,OAAO,EAAE,iBADD;AAER6F,UAAAA,IAAI,EAAG,+IAFC;AAGRC,UAAAA,cAAc,EAAE,KAHR;AAIRC,UAAAA,gBAAgB,EAAE,IAJV;AAKRC,UAAAA,iBAAiB,EAAE,MAAMtF,SAAS,EAL1B;AAMRuF,UAAAA,eAAe,EAAE,MAAM;AACrBrG,YAAAA,SAAS,CAAC+F,OAAD,EAAUT,aAAV,EAAyBE,aAAzB,CAAT;AACA1E,YAAAA,SAAS;AACV,WATO;AAURwF,UAAAA,oBAAoB,EAAE;AACpBC,YAAAA,SAAS,EAAE;AADS,WAVd;AAaRC,UAAAA,MAAM,EAAE,IAbA;AAcRC,UAAAA,aAAa,EAAE,MAAM3F,SAAS;AAdtB,SAAD,CAAT;AAgBD,OAtCH;AAuCE,MAAA,QAAQ,EACNX,cAAc,KACdiF,MADc,aACdA,MADc,yCACdA,MAAM,CAAEtF,KADM,mDACd,eAAe4F,KAAf,CAAsBC,EAAD;AAAA;;AAAA,eACnB,CAAAA,EAAE,SAAF,IAAAA,EAAE,WAAF,YAAAA,EAAE,CAAExD,KAAJ,IACI,CAAAwD,EAAE,SAAF,IAAAA,EAAE,WAAF,0BAAAA,EAAE,CAAExD,KAAJ,0DAAW1B,MAAX,MAAsB,UAD1B,GAEI,CAAAkF,EAAE,SAAF,IAAAA,EAAE,WAAF,kCAAAA,EAAE,CAAEpC,aAAJ,0EAAmB9C,MAAnB,MAA8B,UAHf;AAAA,OAArB,CADc,CAxClB;AA+CE,MAAA,WAAW,eACT;AACE,QAAA,GAAG,EAAC,SADN;AAEE,QAAA,KAAK,EACHN,cAAc,GACV;AACEuC,UAAAA,MAAM,EAAE,4BADV;AAEEkD,UAAAA,OAAO,EAAE;AAFX,SADU,GAKV,EARR;AAUE,QAAA,GAAG,EAAEjH,MAAM,CAAC+H,gBAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAdF,CAFJ,CADF,eAoFE;AAAK,MAAA,KAAK,EAAE;AAAEjB,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAgCrF,OAAhC,CApFF,CADF,eAuFE;AAAK,MAAA,KAAK,EAAE;AAAEqF,QAAAA,UAAU,EAAE;AAAd,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhF,MAAM,iBACL,oBAAC,WAAD;AACE,MAAA,IAAI,EACFA,MAAM,KAAK,SAAX,GACI,wBADJ,GAEIC,SAAS,GACTA,SADS,GAET,yBANR;AAQE,MAAA,MAAM,EAAED,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAvFF,CADF,eAwGE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAA2E,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEtF,KAAR,kBACC,oBAAC,UAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,MAAM,EAAE;AAAA;;AAAA,eACNsF,MADM,aACNA,MADM,yCACNA,MAAM,CAAEtF,KADF,mDACN,eAAegC,GAAf,CAAmB,CAACkB,IAAD,EAAOC,KAAP;AAAA;;AAAA,8BACjB,oBAAC,EAAD;AACE,YAAA,MAAM,EAAEA,KAAK,GAAG,CAAR,KAAc,CADxB;AAEE,YAAA,GAAG,EAAEA,KAFP;AAGE,YAAA,QAAQ,EACN,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEb,KAAN,IACI,CAAAa,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAD5B,GAEI,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aASGV,cAAc,iBACb,oBAAC,OAAD;AACE,YAAA,KAAK,EACHI,cAAc,IACd,CAAA6C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UADhC,IAEA,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAFxB,GAGI,EAHJ,GAII,wBANR;AAQE,YAAA,SAAS,EAAC,KARZ;AASE,YAAA,OAAO,EAAEO,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAWE;AACE,YAAA,KAAK,EAAE;AACL2C,cAAAA,KAAK,EAAE,EADF;AAELD,cAAAA,SAAS,EAAE;AAFN,aADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAME,oBAAC,QAAD;AACE,YAAA,IAAI,eACF;AACE,cAAA,GAAG,EAAC,SADN;AAEE,cAAA,KAAK,GACFvD,cAAc,IACf,CAAA6C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UAD/B,GAEG;AACEiC,gBAAAA,MAAM,EAAE,4BADV;AAEEkD,gBAAAA,OAAO,EAAE;AAFX,eAFH,GAMG,EANH,EAOD;AAAEjC,gBAAAA,KAAK,EAAE,EAAT;AAAagD,gBAAAA,MAAM,EAAE;AAArB,eARG,CAFP;AAYE,cAAA,GAAG,EAAEhI,MAAM,CAACkH,QAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAiBE,YAAA,OAAO,EACL,CAAA7C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEb,KAAN,IACI,CAAAa,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAD5B,GAEI,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UApBxC;AAsBE,YAAA,QAAQ,EAAGqF,EAAD,IAAQ;AAChB,oBAAMC,OAAO,GAAGD,EAAE,CAACE,MAAH,CAAUD,OAA1B;AACAhF,cAAAA,SAAS,CAAC;AACRX,gBAAAA,OAAO,EAAE,iBADD;AAER6F,gBAAAA,IAAI,EAAG,+IAFC;AAGRC,gBAAAA,cAAc,EAAE,KAHR;AAIRC,gBAAAA,gBAAgB,EAAE,IAJV;AAKRC,gBAAAA,iBAAiB,EAAE,MAAMtF,SAAS,EAL1B;AAMRuF,gBAAAA,eAAe,EAAE,MAAM;AACrBnG,kBAAAA,YAAY,CACV6F,OADU,EAEV/C,IAFU,EAGVsC,aAHU,EAIT,SAAQrC,KAAM,SAJL,EAKVuC,aALU,aAKVA,aALU,uBAKVA,aAAa,CAAE1F,KAAf,CAAqBmD,KAArB,EAA4Bd,KAA5B,CACGC,UANO,CAAZ;AAQAtB,kBAAAA,SAAS;AACV,iBAhBO;AAiBRwF,gBAAAA,oBAAoB,EAAE;AACpBC,kBAAAA,SAAS,EAAE;AADS,iBAjBd;AAoBRC,gBAAAA,MAAM,EAAE,IApBA;AAqBRC,gBAAAA,aAAa,EAAE,MAAM3F,SAAS;AArBtB,eAAD,CAAT;AAuBD,aA/CH;AAgDE,YAAA,QAAQ,EACNX,cAAc,IACd,CAAA6C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UADhC,IAEA,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAnD5B;AAqDE,YAAA,WAAW,eACT;AACE,cAAA,GAAG,EAAC,SADN;AAEE,cAAA,KAAK,GACFN,cAAc,IACf,CAAA6C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UAD/B,GAEG;AACEiC,gBAAAA,MAAM,EAAE,4BADV;AAEEkD,gBAAAA,OAAO,EAAE;AAFX,eAFH,GAMG,EANH,EAOD;AAAEjC,gBAAAA,KAAK,EAAE,EAAT;AAAagD,gBAAAA,MAAM,EAAE;AAArB,eARG,CAFP;AAYE,cAAA,GAAG,EAAEhI,MAAM,CAAC+H,gBAZd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,CAXF,CAVJ,eAqGE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0B1D,IAAI,CAAC4D,KAA/B,CADF,CAFF,CADF,eAQE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG5D,IAAI,CAAC6D,WAAL,KACD7D,IADC,aACDA,IADC,uCACDA,IAAI,CAAEb,KADL,iDACD,aAAa2E,MADZ,KAEA7G,SAAS,IACR,EACE,CAAA+C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAAxB,IACA,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MAAgC,UAFlC,CAHD,gBAOC,oBAAC,SAAD;AACE,YAAA,OAAO,EAAE;AAAA;;AAAA,qBACPS,QAAQ,CAAC;AACPC,gBAAAA,KAAK,EAAE,IADA;AAEPmD,gBAAAA,IAAI,EAAG,SAAQrB,KAAM,gBAFd;AAGPA,gBAAAA,KAHO;AAIP8D,gBAAAA,GAAG,EACD,CAAA/D,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa2E,MAAb,KACA9D,IAAI,CAAC6D,WADL,IAEA,EAPK;AAQPG,gBAAAA,QAAQ,EACN/G,SAAS,IACT,EACE,CAAA+C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,4BAAAA,IAAI,CAAEb,KAAN,8DAAa1B,MAAb,MAAwB,UAAxB,IACA,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,oCAAAA,IAAI,CAAEO,aAAN,8EAAqB9C,MAArB,MACE,UAHJ;AAVK,eAAD,CADD;AAAA,aADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAoBG,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEb,KAAN,gEAAa2E,MAAb,KAAuB9D,IAAI,CAAC6D,WAA5B,GACG,MADH,GAEG,KAtBN,CAPD,gBAgCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAjCJ,CAFF,CARF,eAgDE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AACE,YAAA,SAAS,EAAC,aADZ;AAEE,YAAA,KAAK,EAAE;AAAEN,cAAAA,SAAS,EAAE;AAAb,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIGtG,SAAS,KACT,CAAA+C,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEb,KAAN,IACG,CAAAa,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEb,KAAN,gEAAa1B,MAAb,MAAwB,UAD3B,GAEG,CAAAuC,IAAI,SAAJ,IAAAA,IAAI,WAAJ,qCAAAA,IAAI,CAAEO,aAAN,gFAAqB9C,MAArB,MACA,UAJM,CAAT,gBAKC,uDACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,YAAD;AACE,YAAA,iBAAiB,MADnB;AAEE,YAAA,mBAAmB,EAAC,MAFtB;AAGE,YAAA,eAAe,EAAE,IAHnB;AAIE,YAAA,YAAY,EAAE,CAJhB;AAKE,YAAA,aAAa,EAAE,KALjB;AAME,4BANF;AAOE,wBAAW,SAAQwC,KAAM,EAP3B;AAQE,YAAA,KAAK,EACH,CAAAsC,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEzF,KAAR,MACAyF,MADA,aACAA,MADA,8CACAA,MAAM,CAAEzF,KAAR,CAAcmD,KAAd,CADA,iFACA,oBAAsBd,KADtB,0DACA,sBAA6BC,UAD7B,IAEI,IAFJ,GAGI,KAZR;AAcE,YAAA,SAAS,EAAE,aAdb;AAeE,YAAA,KAAK,mBAAEY,IAAI,CAACb,KAAP,kDAAE,cAAYC,UAfrB,CAgBE;AAhBF;AAiBE,YAAA,IAAI,EAAE,MAjBR;AAkBE,YAAA,WAAW,EAAEnD,gBAlBf;AAmBE,YAAA,IAAI,EAAG,SAAQgE,KAAM,oBAnBvB;AAoBE,YAAA,QAAQ,EAAGgE,CAAD,IAAO;AACf,kBAAIA,CAAC,CAACjB,MAAF,CAAS/D,KAAb,EAAoB;AAAA;;AAClB,sBAAMiF,UAAU,sBAAGD,CAAC,CAACjB,MAAF,CAAS/D,KAAZ,oDAAG,gBACfkF,KADe,CACT,GADS,EAEhBC,IAFgB,CAEX,EAFW,CAAnB;AAGA9B,gBAAAA,aAAa,CACV,SAAQrC,KAAM,oBADJ,EAEXf,MAAM,CAACgF,UAAD,CAFK,CAAb;AAID;AACF,aA9BH;AA+BE,YAAA,MAAM,EAAGD,CAAD,IAAO;AACb,kBAAIA,CAAC,CAACjB,MAAF,CAAS/D,KAAb,EAAoB;AAAA;;AAClB,sBAAMiF,UAAU,uBAAGD,CAAC,CAACjB,MAAF,CAAS/D,KAAZ,qDAAG,iBACfkF,KADe,CACT,GADS,EAEhBC,IAFgB,CAEX,EAFW,CAAnB;AAGA9B,gBAAAA,aAAa,CACV,SAAQrC,KAAM,oBADJ,EAEXf,MAAM,CAACgF,UAAD,CAAN,CAAmBG,OAAnB,CAA2B,CAA3B,CAFW,CAAb;AAID;AACF,aAzCH;AA0CE,YAAA,KAAK,EAAE;AACLC,cAAAA,QAAQ,EAAE;AADL,aA1CT;AA6CE,YAAA,OAAO,EAAC,UA7CV;AA8CE,YAAA,GAAG,EAAE,CA9CP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAiDE,oBAAC,YAAD;AACE,YAAA,eAAe,EAAE,IADnB;AAEE,YAAA,YAAY,EAAE,CAFhB;AAGE,YAAA,aAAa,EAAE,KAHjB;AAIE,YAAA,KAAK,mBAAEtE,IAAI,CAACb,KAAP,kDAAE,cAAYC,UAJrB;AAKE,YAAA,IAAI,EAAE,MALR;AAME,YAAA,IAAI,EAAG,SAAQa,KAAM,oBANvB;AAOE,YAAA,QAAQ,EAAEoC,YAPZ;AAQE,YAAA,KAAK,EAAE;AAAEiC,cAAAA,QAAQ,EAAE,GAAZ;AAAiBC,cAAAA,OAAO,EAAE;AAA1B,aART;AASE,YAAA,GAAG,EAAE,CATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjDF,CADF,EA8DG,CAAC,EAACvE,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEb,KAAP,kDAAC,cAAaqF,mBAAd,CAAD,IACCxE,IAAI,CAACyE,IAAL,KAAc,KADf,iBAEG,oBAAC,YAAD;AACE,YAAA,SAAS,EAAC,UADZ;AAEE,YAAA,KAAK,EAAC,QAFR;AAGE,YAAA,eAAe,EAAC,SAHlB;AAIE,YAAA,EAAE,EAAG,SAAQxE,KAAM,EAJrB;AAKE,YAAA,UAAU,EAAC,SALb;AAME,YAAA,WAAW,EAAC,SANd;AAOE,YAAA,IAAI,EAAC,SAPP;AAQE,YAAA,MAAM,EAAC,OART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAWE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACyE,IADR,EACc,GADd,EAEGrI,qBAAqB,CACpBsI,UAAU,CACR1E,IADQ,aACRA,IADQ,wCACRA,IAAI,CAAEb,KADE,kDACR,cAAaqF,mBADL,CAAV,CAGGH,OAHH,CAGW,CAHX,EAIGM,QAJH,EADoB,EAMpB3E,IAAI,CAACyE,IANe,CAFxB,EASK,GATL,8BAXF,CAhEN,EA0FGzF,WAAW,CACVoD,MADU,aACVA,MADU,uBACVA,MAAM,CAAEtF,KAAR,CAAcmD,KAAd,CADU,EAEVuC,aAFU,aAEVA,aAFU,uBAEVA,aAAa,CAAE1F,KAAf,CAAqBmD,KAArB,EAA4BZ,aAFlB,CAAX,iBAIC;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDA9FJ,CALD,gBAyGC;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG,CAAAW,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEb,KAAN,IACG/C,qBAAqB,CACnBsI,UAAU,CAAC1E,IAAD,aAACA,IAAD,wCAACA,IAAI,CAAEb,KAAP,kDAAC,cAAaC,UAAd,CAAV,CACGiF,OADH,CACW,CADX,EAEGM,QAFH,EADmB,EAInB3E,IAJmB,aAInBA,IAJmB,uBAInBA,IAAI,CAAEyE,IAJa,CADxB,GAOG,CAAAzE,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEO,aAAN,IACAnE,qBAAqB,CACnBsI,UAAU,CACR1E,IADQ,aACRA,IADQ,gDACRA,IAAI,CAAEO,aADE,0DACR,sBAAqBnB,UADb,CAAV,CAGGiF,OAHH,CAGW,CAHX,EAIGM,QAJH,EADmB,EAMnB3E,IANmB,aAMnBA,IANmB,uBAMnBA,IAAI,CAAEyE,IANa,CADrB,GASArI,qBAAqB,CACnBsI,UAAU,CAAC1E,IAAI,CAACZ,UAAN,CAAV,CACGiF,OADH,CACW,CADX,EAEGM,QAFH,EADmB,EAInB3E,IAJmB,aAInBA,IAJmB,uBAInBA,IAAI,CAAEyE,IAJa,CAjB3B,CA7GJ,CADF,CAFF,CAhDF,eA6LE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAK,YAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA0BzE,IAAI,CAACyE,IAA/B,CADF,CAFF,CA7LF,eAoME,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,eAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACG1E,eAAe,CAAC;AAAEC,YAAAA,IAAF;AAAQC,YAAAA;AAAR,WAAD,CADlB,eAEE;AACE,YAAA,GAAG,EAAE7B,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEO,OAAT,CAAiBsB,KAAjB,CADP;AAEE,YAAA,QAAQ,EAAGgE,CAAD;AAAA;;AAAA,qBACRjD,cAAc,CAAC;AACbC,gBAAAA,IAAI,EAAEgD,CAAF,aAAEA,CAAF,oCAAEA,CAAC,CAAEjB,MAAL,8CAAE,UAAW4B,KAAX,CAAiB,CAAjB,CADO;AAEb/E,gBAAAA,KAAK,EAAErC,WAFM;AAGb4C,gBAAAA,WAAW,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK;AAHN,eAAD,CADN;AAAA,aAFZ;AASE,YAAA,IAAI,EAAC,MATP;AAUE,YAAA,MAAM,EAAC,MAVT;AAWE,YAAA,KAAK,EAAE;AAAEkE,cAAAA,OAAO,EAAE;AAAX,aAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,CAFF,CApMF,CArGF,CADiB;AAAA,SAAnB,CADM;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAxGF,eAkbE,oBAAC,gBAAD;AAEItG,MAAAA,KAFJ;AAGIC,MAAAA,QAHJ;AAIImE,MAAAA,YAJJ;AAKID,MAAAA,MALJ;AAMIE,MAAAA,aANJ;AAOIuC,MAAAA,QAAQ,EAAE,IAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlbF,CADD;AAAA,GAVH,CADF;AA4cD,CAhoBD;;AAkoBA,eAAehI,eAAf;AAEA,MAAMiI,UAAU,GAAGjJ,MAAM,CAACkJ,KAAM;AAChC;AACA;AACA;AACA;AACA,qBAAqBxJ,KAAK,CAACyJ,KAAN,CAAYC,eAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB1J,KAAK,CAACyJ,KAAN,CAAYE,mBAAoB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA5BA;AA8BA,OAAO,MAAMC,GAAG,GAAGtJ,MAAM,CAACuJ,GAAI;AAC9B;AACA;AACA,CAHO;AAKP,MAAMC,cAAc,GAAGxJ,MAAM,CAACuJ,GAAI;AAClC;AACA,CAFA;AAIA,MAAME,EAAE,GAAGzJ,MAAM,CAAC0J,EAAG;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAgBC,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,KAAjB,GAAyB,GAAK;AACzD,mBAAmBlK,KAAK,CAACyJ,KAAN,CAAYE,mBAAoB;AACnD;AACA;AACA;AACA,CAdA;AAgBA,MAAMQ,SAAS,GAAG7J,MAAM,CAACuJ,GAAI;AAC7B,iBAAiB7J,KAAK,CAACyJ,KAAN,CAAYE,mBAAoB;AACjD;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMS,SAAS,GAAG9J,MAAM,CAACuJ,GAAI;AAC7B;AACA;AACA,sBAAsBjJ,MAAM,CAACyJ,YAAa;AAC1C,CAJA;AAMA,MAAMC,eAAe,GAAGhK,MAAM,CAACuJ,GAAI;AACnC;AACA;AACA;AACA,iBAAiB7J,KAAK,CAACyJ,KAAN,CAAYC,eAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,CAXA;AAaA,MAAMa,KAAK,GAAGjK,MAAM,CAACuJ,GAAI;AACzB;AACA;AACA,CAHA;AAKA,MAAMW,mBAAmB,GAAGlK,MAAM,CAACuJ,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMY,KAAK,GAAGnK,MAAM,CAACuJ,GAAI;AACzB,iBAAiB7J,KAAK,CAACyJ,KAAN,CAAYiB,kBAAmB;AAChD;AACA;AACA;AACA;AACA;AACA,WAAW9J,MAAM,CAAC+J,WAAY;AAC9B;AACA;AACA;AACA;AACA,CAZA;AAcA,MAAMC,KAAK,GAAGtK,MAAM,CAACuJ,GAAI;AACzB,iBAAiB7J,KAAK,CAACyJ,KAAN,CAAYC,eAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,aAAa9I,MAAM,CAACiK,aAAc;AAClC;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMC,OAAO,GAAGxK,MAAM,CAACuJ,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA","sourcesContent":["import React, { createRef, useEffect, useRef, useState } from \"react\";\nimport theme from \"../../../../assets/theme\";\nimport { Checkbox, Tooltip, makeStyles } from \"@material-ui/core\";\nimport { Images } from \"../../../../assets/images\";\nimport ReactTooltip from \"react-tooltip\";\nimport styled from \"styled-components\";\nimport { Formik, FieldArray } from \"formik\";\nimport DescriptionModal from \"../../../internal/CreateCase3/components/DescriptionModal\";\nimport { CustomInputField } from \"../../../common/FormInputs\";\nimport NumberFormat from \"react-number-format\";\nimport COLORS from \"../../../../assets/Colors\";\nimport {\n  formatNumberToMetrics,\n  getErrorMessage,\n} from \"../../../../helpers/functions\";\nimport CaseService from \"../../../../services/CaseService\";\nimport _ from \"lodash\";\nimport AWSService from \"../../../../services/AWSService\";\nimport useLoader from \"../../../../hooks/useLoader\";\nimport { useSnackbar } from \"notistack\";\nimport useAlert from \"../../../../hooks/useAlert\";\nimport StatusBadge from \"../../../common/StatusBadge\";\n\nconst SmallClaimTable = ({\n  items,\n  enableCheckBox,\n  selectAll,\n  allowEdit,\n  itemsChecked,\n  disableChekBox,\n  heading,\n  formikRef,\n  isRespondent,\n  caseId,\n  roundNumber,\n  status,\n  errorText,\n}) => {\n  const useTooltipStyles = makeStyles(() => ({\n    tooltip: {\n      margin: 0,\n    },\n  }));\n  const { hideAlert, showAlert } = useAlert();\n\n  const classes = useTooltipStyles();\n  const [modal, setModal] = useState({\n    state: false,\n  });\n  const fileRef = useRef([]);\n  const [length, setLength] = useState(1);\n  const [documents, setDocuments] = useState([]);\n  const { setLoader } = useLoader();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (items?.length > 0) {\n      setLength(items?.length);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [items?.length]);\n\n  useEffect(() => {\n    if (fileRef.current.length !== length) {\n      // add or remove refs\n      fileRef.current = Array(length)\n        .fill()\n        .map((_, i) => fileRef.current[i] || createRef());\n    }\n  }, [fileRef.current.length, length]);\n\n  const showwarning = (value) => {\n    return Number(value?.offer?.claimValue) === Number(value?.previousOffer);\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  async function getCaseDocuments() {\n    try {\n      const result = await CaseService.getcaseDocuments(\n        caseId,\n        \"?page=1&perPage=10000\"\n      );\n      if (result?.data)\n        setDocuments(\n          result.data.filter((doc) => doc?.meta?.round == roundNumber)\n        );\n    } catch (error) {}\n  }\n\n  useEffect(() => {\n    if (items?.length) {\n      getCaseDocuments();\n    }\n  }, [items]);\n\n  function renderUploadBox({ item, index }) {\n    const document = documents.find(\n      (doc) =>\n        doc?.meta?.claimItemId == item?.id &&\n        (isRespondent\n          ? doc?.meta?.role == \"respondent\"\n          : doc?.meta?.role == \"claimant\") &&\n        doc?.meta?.round == roundNumber\n    );\n    if (\n      allowEdit &&\n      !(\n        item?.offer?.status === \"accepted\" ||\n        item?.acceptedOffer?.status === \"accepted\"\n      )\n    ) {\n      if (_.isEmpty(document)) {\n        return (\n          <HyperLink onClick={() => fileRef?.current[index]?.current?.click()}>\n            Add\n          </HyperLink>\n        );\n      } else {\n        return (\n          <Row style={{ marginTop: 0, width: 123 }}>\n            <HyperLink onClick={() => window.open(document?.url)}>\n              View\n            </HyperLink>\n            <Seperator />\n            <HyperLink\n              onClick={() => fileRef?.current[index]?.current?.click()}\n            >\n              Update\n            </HyperLink>\n          </Row>\n        );\n      }\n    } else {\n      return !_.isEmpty(document) || item.description_document_url ? (\n        <HyperLink\n          onClick={() =>\n            window.open(\n              !_.isEmpty(document)\n                ? document.url\n                : item.description_document_url\n            )\n          }\n        >\n          {\"Download\"}\n        </HyperLink>\n      ) : (\n        <div>-</div>\n      );\n    }\n  }\n\n  async function addOrUpdateDoc({ file, claimItemId }) {\n    try {\n      const update = documents.find(\n        (doc) => doc?.meta?.claimItemId == claimItemId\n      );\n      const errorMessage = \"Invalid File Type\";\n      if (file?.type !== \"application/pdf\") throw errorMessage;\n      setLoader({ state: true, message: `Uploading file ${file.name} ...` });\n      const payload = {\n        key: file.name,\n      };\n      const s3Response = await AWSService.getS3URL(payload);\n      if (s3Response.url) {\n        const url = await AWSService.uploadToS3(s3Response.url, file);\n        let payload = {\n          url,\n        };\n        if (!_.isEmpty(update)) {\n          const docId = update.id;\n          const response = await CaseService.caseUpdateDocument(\n            payload,\n            caseId,\n            docId\n          );\n          if (response) {\n            const newDocs = documents.map((doc) => ({\n              ...doc,\n              url: doc?.id === docId ? url : doc?.url,\n            }));\n            setDocuments(newDocs);\n          }\n        } else {\n          payload.meta = {\n            round: roundNumber,\n            claimItemId,\n            role: isRespondent ? \"respondent\" : \"claimant\",\n          };\n          const response = await CaseService.caseAddDocument(payload, caseId);\n          if (response?.uploadedDocument) {\n            setDocuments((s) => [...s, response.uploadedDocument]);\n          }\n        }\n        enqueueSnackbar(\"Successfully Uploaded\", { variant: \"success\" });\n      }\n    } catch (error) {\n      const message = getErrorMessage(error);\n      enqueueSnackbar(message, { variant: \"error\" });\n    } finally {\n      setLoader({ state: false });\n    }\n  }\n  return (\n    <Formik\n      innerRef={formikRef}\n      initialValues={{\n        items: items,\n      }}\n      enableReinitialize\n      validateOnBlur\n      validateOnChange\n      validateOnMount\n    >\n      {({ values, handleChange, setFieldValue, errors, initialValues }) => (\n        <>\n          <ClaimBoxHeading>\n            <Title>\n              <div style={{ marginLeft: 4 }}>\n                {enableCheckBox && (\n                  <Tooltip\n                    title={\n                      disableChekBox ||\n                      values?.items?.every((el) =>\n                        el?.offer\n                          ? el?.offer?.status === \"accepted\"\n                          : el?.acceptedOffer?.status === \"accepted\"\n                      )\n                        ? \"\"\n                        : \"Accept All\"\n                    }\n                    placement=\"top\"\n                    classes={classes}\n                  >\n                    <div>\n                      <Checkbox\n                        icon={\n                          <img\n                            alt=\"checked\"\n                            style={\n                              disableChekBox\n                                ? {\n                                    filter: \"grayscale(100%) !important\",\n                                    opacity: 0.5,\n                                  }\n                                : {}\n                            }\n                            src={Images.checkBox}\n                          />\n                        }\n                        checked={values?.items?.every((el) =>\n                          el?.offer\n                            ? el?.offer?.status === \"accepted\"\n                            : el?.acceptedOffer?.status === \"accepted\"\n                        )}\n                        onChange={(ev) => {\n                          const checked = ev.target.checked;\n                          showAlert({\n                            heading: \"Please confirm!\",\n                            desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                            primaryBtnText: \"Yes\",\n                            secondaryBtnText: \"No\",\n                            clickSecondarybtn: () => hideAlert(),\n                            clickPrimaryBtn: () => {\n                              selectAll(checked, setFieldValue, initialValues);\n                              hideAlert();\n                            },\n                            descriptionTextStyle: {\n                              textAlign: \"left\",\n                            },\n                            isOpen: true,\n                            onDialogClose: () => hideAlert(),\n                          });\n                        }}\n                        disabled={\n                          disableChekBox ||\n                          values?.items?.every((el) =>\n                            el?.offer\n                              ? el?.offer?.status === \"accepted\"\n                              : el?.acceptedOffer?.status === \"accepted\"\n                          )\n                        }\n                        checkedIcon={\n                          <img\n                            alt=\"checked\"\n                            style={\n                              disableChekBox\n                                ? {\n                                    filter: \"grayscale(100%) !important\",\n                                    opacity: 0.5,\n                                  }\n                                : {}\n                            }\n                            src={Images.checkBoxSelected}\n                          />\n                        }\n                      />\n                    </div>\n                  </Tooltip>\n                )}\n              </div>\n              <div style={{ marginLeft: 8 }}>{heading}</div>\n            </Title>\n            <div style={{ marginLeft: 4 }}>\n              {status && (\n                <StatusBadge\n                  text={\n                    status === \"success\"\n                      ? \"Negotiation Successful\"\n                      : errorText\n                      ? errorText\n                      : \"Negotiation In Progress\"\n                  }\n                  status={status}\n                />\n              )}\n            </div>\n          </ClaimBoxHeading>\n\n          <ClaimTable>\n            {values?.items && (\n              <FieldArray\n                name=\"items\"\n                render={() =>\n                  values?.items?.map((item, index) => (\n                    <TR\n                      isEven={index % 2 === 0}\n                      key={index}\n                      accepted={\n                        item?.offer\n                          ? item?.offer?.status === \"accepted\"\n                          : item?.acceptedOffer?.status === \"accepted\"\n                      }\n                    >\n                      {enableCheckBox && (\n                        <Tooltip\n                          title={\n                            disableChekBox ||\n                            item?.acceptedOffer?.status === \"accepted\" ||\n                            item?.offer?.status === \"accepted\"\n                              ? \"\"\n                              : \"Accept claim line item\"\n                          }\n                          placement=\"top\"\n                          classes={classes}\n                        >\n                          <div\n                            style={{\n                              width: 44,\n                              marginTop: \"-5px\",\n                            }}\n                          >\n                            <Checkbox\n                              icon={\n                                <img\n                                  alt=\"checked\"\n                                  style={\n                                    (disableChekBox ||\n                                    item?.acceptedOffer?.status === \"accepted\"\n                                      ? {\n                                          filter: \"grayscale(100%) !important\",\n                                          opacity: 0.5,\n                                        }\n                                      : {},\n                                    { width: 15, height: 15 })\n                                  }\n                                  src={Images.checkBox}\n                                />\n                              }\n                              checked={\n                                item?.offer\n                                  ? item?.offer?.status === \"accepted\"\n                                  : item?.acceptedOffer?.status === \"accepted\"\n                              }\n                              onChange={(ev) => {\n                                const checked = ev.target.checked;\n                                showAlert({\n                                  heading: \"Please confirm!\",\n                                  desc: `You are about to accept the offer made by the other party. Are you sure, you want to proceed? Claim items once accepted cannot be unaccepted.`,\n                                  primaryBtnText: \"Yes\",\n                                  secondaryBtnText: \"No\",\n                                  clickSecondarybtn: () => hideAlert(),\n                                  clickPrimaryBtn: () => {\n                                    itemsChecked(\n                                      checked,\n                                      item,\n                                      setFieldValue,\n                                      `items[${index}].offer`,\n                                      initialValues?.items[index].offer\n                                        .claimValue\n                                    );\n                                    hideAlert();\n                                  },\n                                  descriptionTextStyle: {\n                                    textAlign: \"left\",\n                                  },\n                                  isOpen: true,\n                                  onDialogClose: () => hideAlert(),\n                                });\n                              }}\n                              disabled={\n                                disableChekBox ||\n                                item?.acceptedOffer?.status === \"accepted\" ||\n                                item?.offer?.status === \"accepted\"\n                              }\n                              checkedIcon={\n                                <img\n                                  alt=\"checked\"\n                                  style={\n                                    (disableChekBox ||\n                                    item?.acceptedOffer?.status === \"accepted\"\n                                      ? {\n                                          filter: \"grayscale(100%) !important\",\n                                          opacity: 0.5,\n                                        }\n                                      : {},\n                                    { width: 15, height: 15 })\n                                  }\n                                  src={Images.checkBoxSelected}\n                                />\n                              }\n                            />\n                          </div>\n                        </Tooltip>\n                      )}\n\n                      <Details>\n                        <LabelValueContainer>\n                          <Label>Claim Item</Label>\n                          <Value>\n                            <div className=\"element\">{item.title}</div>\n                          </Value>\n                        </LabelValueContainer>\n\n                        <LabelValueContainer>\n                          <Label>Claim Description</Label>\n                          <Value>\n                            {item.description ||\n                            item?.offer?.reason ||\n                            (allowEdit &&\n                              !(\n                                item?.offer?.status === \"accepted\" ||\n                                item?.acceptedOffer?.status === \"accepted\"\n                              )) ? (\n                              <HyperLink\n                                onClick={() =>\n                                  setModal({\n                                    state: true,\n                                    name: `items[${index}].offer.reason`,\n                                    index,\n                                    des:\n                                      item?.offer?.reason ||\n                                      item.description ||\n                                      \"\",\n                                    editable:\n                                      allowEdit &&\n                                      !(\n                                        item?.offer?.status === \"accepted\" ||\n                                        item?.acceptedOffer?.status ===\n                                          \"accepted\"\n                                      ),\n                                  })\n                                }\n                              >\n                                {item?.offer?.reason || item.description\n                                  ? \"View\"\n                                  : \"Add\"}\n                              </HyperLink>\n                            ) : (\n                              <div>-</div>\n                            )}\n                          </Value>\n                        </LabelValueContainer>\n\n                        <LabelValueContainer>\n                          <Label>Claim Value</Label>\n                          <Value>\n                            <div\n                              className=\"claim-table\"\n                              style={{ textAlign: \"left\" }}\n                            >\n                              {allowEdit &&\n                              (item?.offer\n                                ? item?.offer?.status !== \"accepted\"\n                                : item?.acceptedOffer?.status !==\n                                  \"accepted\") ? (\n                                <>\n                                  <InputContainer>\n                                    <NumberFormat\n                                      thousandSeparator\n                                      thousandsGroupStyle=\"lakh\"\n                                      isNumericString={true}\n                                      decimalScale={2}\n                                      allowNegative={false}\n                                      data-tip\n                                      data-for={`input_${index}`}\n                                      error={\n                                        errors?.items &&\n                                        errors?.items[index]?.offer?.claimValue\n                                          ? true\n                                          : false\n                                      }\n                                      className={\"input-white\"}\n                                      value={item.offer?.claimValue}\n                                      // fixedDecimalScale\n                                      type={\"text\"}\n                                      customInput={CustomInputField}\n                                      name={`items[${index}].offer.claimValue`}\n                                      onChange={(e) => {\n                                        if (e.target.value) {\n                                          const numberText = e.target.value\n                                            ?.split(\",\")\n                                            .join(\"\");\n                                          setFieldValue(\n                                            `items[${index}].offer.claimValue`,\n                                            Number(numberText)\n                                          );\n                                        }\n                                      }}\n                                      onBlur={(e) => {\n                                        if (e.target.value) {\n                                          const numberText = e.target.value\n                                            ?.split(\",\")\n                                            .join(\"\");\n                                          setFieldValue(\n                                            `items[${index}].offer.claimValue`,\n                                            Number(numberText).toFixed(2)\n                                          );\n                                        }\n                                      }}\n                                      style={{\n                                        maxWidth: 120,\n                                      }}\n                                      variant=\"outlined\"\n                                      min={0}\n                                    />\n                                    <NumberFormat\n                                      isNumericString={true}\n                                      decimalScale={2}\n                                      allowNegative={false}\n                                      value={item.offer?.claimValue}\n                                      type={\"text\"}\n                                      name={`items[${index}].offer.claimValue`}\n                                      onChange={handleChange}\n                                      style={{ maxWidth: 110, display: \"none\" }}\n                                      min={0}\n                                    />\n                                  </InputContainer>\n                                  {!!item?.offer?.suggestedClaimValue &&\n                                    item.unit === \"INR\" && (\n                                      <ReactTooltip\n                                        className=\"tool-tip\"\n                                        place=\"bottom\"\n                                        backgroundColor=\"#e1edf9\"\n                                        id={`input_${index}`}\n                                        arrowColor=\"#007aff\"\n                                        borderColor=\"#007aff\"\n                                        type=\"warning\"\n                                        effect=\"solid\"\n                                      >\n                                        {/* <div className=\"name\">JA Suggested</div> */}\n                                        <div className=\"message\">\n                                          {item.unit}{\" \"}\n                                          {formatNumberToMetrics(\n                                            parseFloat(\n                                              item?.offer?.suggestedClaimValue\n                                            )\n                                              .toFixed(2)\n                                              .toString(),\n                                            item.unit\n                                          )}{\" \"}\n                                          ( JustAct Smart Suggest )\n                                        </div>\n                                      </ReactTooltip>\n                                    )}\n\n                                  {showwarning(\n                                    values?.items[index],\n                                    initialValues?.items[index].previousOffer\n                                  ) && (\n                                    <div className=\"waring-msg\">\n                                      You've entered the same claim value\n                                    </div>\n                                  )}\n                                </>\n                              ) : (\n                                <div className=\"element \">\n                                  {item?.offer\n                                    ? formatNumberToMetrics(\n                                        parseFloat(item?.offer?.claimValue)\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )\n                                    : item?.acceptedOffer\n                                    ? formatNumberToMetrics(\n                                        parseFloat(\n                                          item?.acceptedOffer?.claimValue\n                                        )\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )\n                                    : formatNumberToMetrics(\n                                        parseFloat(item.claimValue)\n                                          .toFixed(2)\n                                          .toString(),\n                                        item?.unit\n                                      )}\n                                </div>\n                              )}\n                            </div>\n                          </Value>\n                        </LabelValueContainer>\n\n                        <LabelValueContainer>\n                          <Label>Unit</Label>\n                          <Value>\n                            <div className=\"element\">{item.unit}</div>\n                          </Value>\n                        </LabelValueContainer>\n\n                        <LabelValueContainer>\n                          <Label>Supporting Document</Label>\n                          <Value>\n                            {renderUploadBox({ item, index })}\n                            <input\n                              ref={fileRef?.current[index]}\n                              onChange={(e) =>\n                                addOrUpdateDoc({\n                                  file: e?.target?.files[0],\n                                  round: roundNumber,\n                                  claimItemId: item?.id,\n                                })\n                              }\n                              type=\"file\"\n                              accept=\".pdf\"\n                              style={{ display: \"none\" }}\n                            />\n                          </Value>\n                        </LabelValueContainer>\n                      </Details>\n                    </TR>\n                  ))\n                }\n              />\n            )}\n          </ClaimTable>\n\n          <DescriptionModal\n            {...{\n              modal,\n              setModal,\n              handleChange,\n              values,\n              setFieldValue,\n              readOnly: true,\n            }}\n          />\n        </>\n      )}\n    </Formik>\n  );\n};\n\nexport default SmallClaimTable;\n\nconst ClaimTable = styled.table`\n  width: 100%;\n  & .tool-tip {\n    border: solid 0.5px #007aff;\n    & .name {\n      font-family: ${theme.fonts.primaryFontBold};\n      font-size: 12px;\n      font-weight: bold;\n      line-height: 1.83;\n      color: #007aff;\n    }\n    & .message {\n      font-family: ${theme.fonts.primaryFontSemiBold};\n      font-size: 12px;\n      font-weight: 600;\n      color: #293461;\n    }\n  }\n  .input-white {\n    font-size: 12px;\n    & input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n    & input[type=\"number\"] {\n      -moz-appearance: textfield;\n    }\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst InputContainer = styled.div`\n  padding-right: 15px;\n`;\n\nconst TR = styled.tr`\n  display: flex;\n  border-radius: 10px;\n  background-color: #f9f9f9;\n  margin-bottom: 15px;\n  padding: 10px 15px 0 6px;\n  width: 100%;\n\n  .element {\n    opacity: ${(props) => (props.accepted ? \"0.3\" : \"1\")};\n    font-family: ${theme.fonts.primaryFontSemiBold};\n    font-size: 12px;\n    color: #293461;\n  }\n`;\n\nconst HyperLink = styled.div`\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  font-size: 12px;\n  color: #00838c;\n  text-decoration: underline;\n  cursor: pointer;\n  display: inline-block;\n`;\n\nconst Seperator = styled.div`\n  height: 18px;\n  width: 1px;\n  background-color: ${COLORS.INPUT_BORDER};\n`;\n\nconst ClaimBoxHeading = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  font-weight: bold;\n  line-height: 1.83;\n  color: #293461;\n  text-transform: capitalize;\n  margin-bottom: 10px;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst LabelValueContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 50%;\n  margin-bottom: 20px;\n  &:nth-child(5n) {\n    margin-bottom: 15px;\n  }\n`;\n\nconst Label = styled.div`\n  font-family: ${theme.fonts.primaryFontRegular};\n  font-size: 10px;\n  text-transform: capitalize;\n  font-weight: 600;\n  line-height: 1.7;\n  margin-bottom: 6px;\n  color: ${COLORS.INPUT_LABEL};\n  text-align: left;\n  & span {\n    padding: 0px;\n  }\n`;\n\nconst Value = styled.div`\n  font-family: ${theme.fonts.primaryFontBold};\n  font-size: 12px;\n  color: #293461;\n  & span {\n    padding: 0px;\n  }\n  & .waring-msg {\n    color: ${COLORS.WARNING_COLOR};\n    font-size: 10px;\n    white-space: nowrap;\n    position: absolute;\n  }\n`;\n\nconst Details = styled.div`\n  width: 100%;\n  display: flex;\n  padding-left: 5px;\n  flex-wrap: wrap;\n`;\n"]},"metadata":{},"sourceType":"module"}