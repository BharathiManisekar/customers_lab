{"ast":null,"code":"import API from \"../api/manager\";\nimport config from \"../api/config\";\n\nconst createParty = data => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.create,\n    data\n  });\n};\n\nconst createPartyDraft = data => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.draft,\n    data\n  });\n};\n\nconst updatePartyDraft = (data, id) => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.party.draft + `/${id}`,\n    data\n  });\n};\n\nconst submitPartyDraft = (data, id) => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.party.create + `/${id}`,\n    data\n  });\n};\n\nconst getPartyOrDraft = id => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + `/${id}`\n  });\n};\n\nconst getParties = query => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + query\n  });\n};\n\nconst agentCreate = (id, data) => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.party + `/${id}/agents`,\n    data\n  });\n};\n\nconst agentDelete = (id, partyId) => {\n  return API({\n    method: \"DELETE\",\n    url: config.urls.party.party + `/${partyId}/agents/${id}`\n  });\n};\n\nconst partyStats = () => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.stats\n  });\n};\n\nconst partyCaseStats = id => {\n  return API({\n    method: \"GET\",\n    url: config.urls.case.stats + `?partyId=${id}`\n  });\n};\n\nconst getCaseParties = query => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + query\n  });\n};\n\nexport default {\n  createParty,\n  createPartyDraft,\n  getPartyOrDraft,\n  updatePartyDraft,\n  submitPartyDraft,\n  getParties,\n  agentCreate,\n  agentDelete,\n  partyStats,\n  partyCaseStats,\n  getCaseParties\n};","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/services/PartyService.js"],"names":["API","config","createParty","data","method","url","urls","party","create","createPartyDraft","draft","updatePartyDraft","id","submitPartyDraft","getPartyOrDraft","getParties","query","agentCreate","agentDelete","partyId","partyStats","stats","partyCaseStats","case","getCaseParties"],"mappings":"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","sourcesContent":["import API from \"../api/manager\";\nimport config from \"../api/config\";\n\nconst createParty = (data) => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.create,\n    data,\n  });\n};\n\nconst createPartyDraft = (data) => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.draft,\n    data,\n  });\n};\n\nconst updatePartyDraft = (data, id) => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.party.draft + `/${id}`,\n    data,\n  });\n};\n\nconst submitPartyDraft = (data, id) => {\n  return API({\n    method: \"PUT\",\n    url: config.urls.party.create + `/${id}`,\n    data,\n  });\n};\n\nconst getPartyOrDraft = (id) => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + `/${id}`,\n  });\n};\n\nconst getParties = (query) => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + query,\n  });\n};\n\nconst agentCreate = (id, data) => {\n  return API({\n    method: \"POST\",\n    url: config.urls.party.party + `/${id}/agents`,\n    data,\n  });\n};\n\nconst agentDelete = (id, partyId) => {\n  return API({\n    method: \"DELETE\",\n    url: config.urls.party.party + `/${partyId}/agents/${id}`,\n  });\n};\n\nconst partyStats = () => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.stats,\n  });\n};\n\nconst partyCaseStats = (id) => {\n  return API({\n    method: \"GET\",\n    url: config.urls.case.stats + `?partyId=${id}`,\n  });\n};\n\nconst getCaseParties = (query) => {\n  return API({\n    method: \"GET\",\n    url: config.urls.party.party + query,\n  });\n};\n\nexport default {\n  createParty,\n  createPartyDraft,\n  getPartyOrDraft,\n  updatePartyDraft,\n  submitPartyDraft,\n  getParties,\n  agentCreate,\n  agentDelete,\n  partyStats,\n  partyCaseStats,\n  getCaseParties,\n};\n"]},"metadata":{},"sourceType":"module"}