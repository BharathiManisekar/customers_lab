{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/ClaimBox.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails, makeStyles, useTheme } from \"@material-ui/core\";\nimport StatusBadge from \"../../../common/StatusBadge\";\nimport { Images } from \"../../../../assets/images\";\nimport { DropDown, Icon, Actions, Heading, Header, BigScreen, Title } from \"../styles\";\nimport ClaimTabel from \"./ClaimTable\";\nimport _ from \"lodash\";\nimport { useMediaQuery } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    boxShadow: \"none\",\n    [theme.breakpoints.up(640)]: {\n      border: `solid 0.5px #e1e3ee`\n    }\n  },\n  content: {\n    margin: `0 !important`,\n    \"& .MuiExpansionPanelSummary-content.Mui-expanded\": {\n      margin: `0 !important`\n    }\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: `0 15px 15px !important`,\n    [theme.breakpoints.up(640)]: {\n      padding: `0 21px 21px !important`\n    }\n  }\n}));\nexport default function ClaimBox({\n  title,\n  claimItems,\n  status,\n  enableCheckBox = false,\n  expand,\n  showRespondantView,\n  isRespondent,\n  errorText,\n  formikRef,\n  negotiationRound,\n  caseId,\n  roundNumber\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(expand);\n  const [items, setItems] = useState(claimItems ? claimItems : []);\n  const [trigggerStateChange, setTrigggerStateChange] = useState(false);\n  const themes = useTheme();\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(769));\n\n  const itemsChecked = (checked, item, setFieldValue, name, oldValue) => {\n    if (_.isEmpty(item === null || item === void 0 ? void 0 : item.acceptedOffer) && (item === null || item === void 0 ? void 0 : item.offer)) {\n      item.offer.status = checked ? \"accepted\" : \"offered\";\n      setFieldValue(`${name}.status`, checked ? \"accepted\" : \"offered\");\n\n      if (checked) {\n        if (item === null || item === void 0 ? void 0 : item.previousOffer) {\n          setFieldValue(`${name}.claimValue`, item === null || item === void 0 ? void 0 : item.previousOffer);\n        } else if (item === null || item === void 0 ? void 0 : item.claimValue) {\n          setFieldValue(`${name}.claimValue`, item === null || item === void 0 ? void 0 : item.claimValue);\n        }\n      } else {\n        setFieldValue(`${name}.claimValue`, oldValue);\n      }\n\n      setTrigggerStateChange(true);\n    }\n  };\n\n  const selectAll = (e, setFieldValue, initialValues) => {\n    isRespondent && showRespondantView ? items.respondentClaims.map((item, index) => {\n      var _initialValues$items$, _initialValues$items$2;\n\n      return itemsChecked(e, item, setFieldValue, `items[${index}].offer`, initialValues === null || initialValues === void 0 ? void 0 : (_initialValues$items$ = initialValues.items[index]) === null || _initialValues$items$ === void 0 ? void 0 : (_initialValues$items$2 = _initialValues$items$.offer) === null || _initialValues$items$2 === void 0 ? void 0 : _initialValues$items$2.claimValue);\n    }) : items.claimantClaims.map((item, index) => {\n      var _initialValues$items$3, _initialValues$items$4;\n\n      return itemsChecked(e, item, setFieldValue, `items[${index}].offer`, initialValues === null || initialValues === void 0 ? void 0 : (_initialValues$items$3 = initialValues.items[index]) === null || _initialValues$items$3 === void 0 ? void 0 : (_initialValues$items$4 = _initialValues$items$3.offer) === null || _initialValues$items$4 === void 0 ? void 0 : _initialValues$items$4.claimValue);\n    });\n  };\n\n  useEffect(() => {\n    if (trigggerStateChange) {\n      setTrigggerStateChange(false);\n    }\n\n    setItems(items); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trigggerStateChange]);\n\n  const checkIsFromMakeOffer = (items, index) => {\n    var _items$index;\n\n    return (_items$index = items[index]) === null || _items$index === void 0 ? void 0 : _items$index.some(el => {\n      var _el$offer;\n\n      return (el === null || el === void 0 ? void 0 : (_el$offer = el.offer) === null || _el$offer === void 0 ? void 0 : _el$offer.statusAlais) === \"makeOffer\";\n    });\n  };\n\n  const checkboxEnable = (items, index) => {\n    var _items$index2;\n\n    return (_items$index2 = items[index]) === null || _items$index2 === void 0 ? void 0 : _items$index2.some(el => {\n      var _el$offer2;\n\n      return (el === null || el === void 0 ? void 0 : (_el$offer2 = el.offer) === null || _el$offer2 === void 0 ? void 0 : _el$offer2.status) === \"accepted\";\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ExpansionPanel, {\n    className: classes.root,\n    expanded: expanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ExpansionPanelSummary, {\n    classes: {\n      content: classes.content\n    },\n    onClick: () => setExpanded(e => !e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Heading, {\n    style: {\n      marginBottom: \"unset\",\n      textTransform: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, title)), !status && roundNumber == 4 ? /*#__PURE__*/React.createElement(StatusBadge, {\n    text: \"This is your Final Round !\",\n    status: \"round4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }) : \"\", status && (!expanded || isBigScreen) && /*#__PURE__*/React.createElement(StatusBadge, {\n    text: status === \"success\" ? \"Negotiation Successful\" : errorText ? errorText : \"Negotiation In Progress\",\n    status: status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Actions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DropDown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    src: Images.dropDownArrow,\n    alt: \"dropdown\",\n    expanded: expanded,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(ExpansionPanelDetails, {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, items.claimantClaims && /*#__PURE__*/React.createElement(ClaimTabel, {\n    allowEdit: checkIsFromMakeOffer(items, \"claimantClaims\"),\n    disableChekBox: showRespondantView && isRespondent || !enableCheckBox,\n    enableCheckBox: negotiationRound > 1 || enableCheckBox || showRespondantView || checkboxEnable(items, \"claimantClaims\"),\n    itemsChecked,\n    selectAll,\n    items: items.claimantClaims,\n    heading: isRespondent ? \"Claimant Claim\" : \"Your Claim\",\n    formikRef,\n    isRespondent: false,\n    caseId,\n    roundNumber,\n    status,\n    errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), showRespondantView && /*#__PURE__*/React.createElement(ClaimTabel, {\n    allowEdit: checkIsFromMakeOffer(items, \"respondentClaims\"),\n    enableCheckBox: enableCheckBox || showRespondantView,\n    disableChekBox: !enableCheckBox || !expand,\n    itemsChecked,\n    selectAll,\n    items: items.respondentClaims,\n    isRespondent: true,\n    heading: isRespondent ? \"Your offer\" : \"Respondent Offer\",\n    formikRef,\n    caseId,\n    roundNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/pages/NegotiationPages/common/ClaimBox.js"],"names":["React","useState","useEffect","ExpansionPanel","ExpansionPanelSummary","ExpansionPanelDetails","makeStyles","useTheme","StatusBadge","Images","DropDown","Icon","Actions","Heading","Header","BigScreen","Title","ClaimTabel","_","useMediaQuery","useStyles","theme","root","boxShadow","breakpoints","up","border","content","margin","details","display","flexDirection","padding","ClaimBox","title","claimItems","status","enableCheckBox","expand","showRespondantView","isRespondent","errorText","formikRef","negotiationRound","caseId","roundNumber","classes","expanded","setExpanded","items","setItems","trigggerStateChange","setTrigggerStateChange","themes","isBigScreen","itemsChecked","checked","item","setFieldValue","name","oldValue","isEmpty","acceptedOffer","offer","previousOffer","claimValue","selectAll","e","initialValues","respondentClaims","map","index","claimantClaims","checkIsFromMakeOffer","some","el","statusAlais","checkboxEnable","marginBottom","textTransform","dropDownArrow","allowEdit","disableChekBox","heading"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  ExpansionPanel,\n  ExpansionPanelSummary,\n  ExpansionPanelDetails,\n  makeStyles,\n  useTheme,\n} from \"@material-ui/core\";\nimport StatusBadge from \"../../../common/StatusBadge\";\nimport { Images } from \"../../../../assets/images\";\nimport {\n  DropDown,\n  Icon,\n  Actions,\n  Heading,\n  Header,\n  BigScreen,\n  Title,\n} from \"../styles\";\nimport ClaimTabel from \"./ClaimTable\";\nimport _ from \"lodash\";\nimport { useMediaQuery } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: \"none\",\n    [theme.breakpoints.up(640)]: {\n      border: `solid 0.5px #e1e3ee`,\n    },\n  },\n  content: {\n    margin: `0 !important`,\n    \"& .MuiExpansionPanelSummary-content.Mui-expanded\": {\n      margin: `0 !important`,\n    },\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    padding: `0 15px 15px !important`,\n    [theme.breakpoints.up(640)]: {\n      padding: `0 21px 21px !important`,\n    },\n  },\n}));\n\nexport default function ClaimBox({\n  title,\n  claimItems,\n  status,\n  enableCheckBox = false,\n  expand,\n  showRespondantView,\n  isRespondent,\n  errorText,\n  formikRef,\n  negotiationRound,\n  caseId,\n  roundNumber,\n}) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(expand);\n  const [items, setItems] = useState(claimItems ? claimItems : []);\n  const [trigggerStateChange, setTrigggerStateChange] = useState(false);\n  const themes = useTheme();\n  const isBigScreen = useMediaQuery(themes.breakpoints.up(769));\n\n  const itemsChecked = (checked, item, setFieldValue, name, oldValue) => {\n    if (_.isEmpty(item?.acceptedOffer) && item?.offer) {\n      item.offer.status = checked ? \"accepted\" : \"offered\";\n      setFieldValue(`${name}.status`, checked ? \"accepted\" : \"offered\");\n      if (checked) {\n        if (item?.previousOffer) {\n          setFieldValue(`${name}.claimValue`, item?.previousOffer);\n        } else if (item?.claimValue) {\n          setFieldValue(`${name}.claimValue`, item?.claimValue);\n        }\n      } else {\n        setFieldValue(`${name}.claimValue`, oldValue);\n      }\n      setTrigggerStateChange(true);\n    }\n  };\n\n  const selectAll = (e, setFieldValue, initialValues) => {\n    isRespondent && showRespondantView\n      ? items.respondentClaims.map((item, index) =>\n          itemsChecked(\n            e,\n            item,\n            setFieldValue,\n            `items[${index}].offer`,\n            initialValues?.items[index]?.offer?.claimValue\n          )\n        )\n      : items.claimantClaims.map((item, index) =>\n          itemsChecked(\n            e,\n            item,\n            setFieldValue,\n            `items[${index}].offer`,\n            initialValues?.items[index]?.offer?.claimValue\n          )\n        );\n  };\n\n  useEffect(() => {\n    if (trigggerStateChange) {\n      setTrigggerStateChange(false);\n    }\n    setItems(items);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [trigggerStateChange]);\n\n  const checkIsFromMakeOffer = (items, index) => {\n    return items[index]?.some((el) => el?.offer?.statusAlais === \"makeOffer\");\n  };\n\n  const checkboxEnable = (items, index) => {\n    return items[index]?.some((el) => el?.offer?.status === \"accepted\");\n  };\n\n  return (\n    <ExpansionPanel className={classes.root} expanded={expanded}>\n      <ExpansionPanelSummary\n        classes={{ content: classes.content }}\n        onClick={() => setExpanded((e) => !e)}\n      >\n        <Header>\n          <div className=\"title-container\">\n            <Heading\n              style={{\n                marginBottom: \"unset\",\n                textTransform: \"none\",\n              }}\n            >\n              <Title>{title}</Title>\n            </Heading>\n            {!status && roundNumber == 4 ? (\n              <StatusBadge\n                text={\"This is your Final Round !\"}\n                status={\"round4\"}\n              />\n            ) : (\n              \"\"\n            )}\n            {status && (!expanded || isBigScreen) && (\n              <StatusBadge\n                text={\n                  status === \"success\"\n                    ? \"Negotiation Successful\"\n                    : errorText\n                    ? errorText\n                    : \"Negotiation In Progress\"\n                }\n                status={status}\n              />\n            )}\n          </div>\n          <Actions>\n            <DropDown>\n              <Icon\n                src={Images.dropDownArrow}\n                alt=\"dropdown\"\n                expanded={expanded}\n              />\n            </DropDown>\n          </Actions>\n        </Header>\n      </ExpansionPanelSummary>\n      <ExpansionPanelDetails className={classes.details}>\n        <div>\n          {items.claimantClaims && (\n            <ClaimTabel\n              {...{\n                allowEdit: checkIsFromMakeOffer(items, \"claimantClaims\"),\n                disableChekBox:\n                  (showRespondantView && isRespondent) || !enableCheckBox,\n                enableCheckBox:\n                  negotiationRound > 1 ||\n                  enableCheckBox ||\n                  showRespondantView ||\n                  checkboxEnable(items, \"claimantClaims\"),\n                itemsChecked,\n                selectAll,\n                items: items.claimantClaims,\n                heading: isRespondent ? \"Claimant Claim\" : \"Your Claim\",\n                formikRef,\n                isRespondent: false,\n                caseId,\n                roundNumber,\n                status,\n                errorText,\n              }}\n            />\n          )}\n          {showRespondantView && (\n            <ClaimTabel\n              {...{\n                allowEdit: checkIsFromMakeOffer(items, \"respondentClaims\"),\n                enableCheckBox: enableCheckBox || showRespondantView,\n                disableChekBox: !enableCheckBox || !expand,\n                itemsChecked,\n                selectAll,\n                items: items.respondentClaims,\n                isRespondent: true,\n                heading: isRespondent ? \"Your offer\" : \"Respondent Offer\",\n                formikRef,\n                caseId,\n                roundNumber,\n              }}\n            />\n          )}\n        </div>\n      </ExpansionPanelDetails>\n    </ExpansionPanel>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}