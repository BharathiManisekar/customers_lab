{"ast":null,"code":"var _jsxFileName = \"/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/AccountVerification/AccountVerification.js\";\nimport React from \"react\";\nimport { CardWrapper, HeadingContainer, Header3, Center } from \"../../../styles/component/style\";\nimport { MessageContainer } from \"./Styles\";\nimport { ResentTimer } from \"../../common/ResendTimer/ResendTimer\";\nimport styled from \"styled-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { useEffect } from \"react\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { navigate } from \"@reach/router\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\nexport const AccountVerification = ({\n  heading = \"Validate your Email (4/4)\",\n  timer = 60,\n  message = `Hey user as the final step of becoming part of JustAct we want you to verify your email.\n  Please login to your email ID and click on the verification Link we sent in order to verify`,\n  triggerResent = () => {},\n  location,\n  email_token\n}) => {\n  const {\n    enqueueSnackbar\n  } = useSnackbar();\n  const {\n    setToken,\n    userObject\n  } = useUser();\n  const {\n    setLoader\n  } = useLoader();\n\n  const resendOtp = () => {\n    triggerResent();\n  };\n\n  useEffect(() => {\n    if ((userObject === null || userObject === void 0 ? void 0 : userObject.emailVerified) && !email_token) {\n      navigate(\"/dashboard\");\n    }\n  }, [userObject, email_token]);\n  useEffect(() => {\n    async function validateEmail() {\n      try {\n        setLoader({\n          state: true,\n          message: \"Verifying your email...\"\n        });\n        const body = {\n          emailToken: email_token\n        };\n        const response = await AuthService.validateEmail(body);\n\n        if (response && response.token) {\n          enqueueSnackbar(response.message, {\n            variant: \"success\"\n          });\n          setToken(response.token);\n          navigate(\"/dashboard/welcome\");\n        } else {\n          enqueueSnackbar(response.message, {\n            variant: \"error\"\n          });\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\"\n        });\n        navigate(\"/login\");\n      } finally {\n        setLoader({\n          state: false\n        });\n      }\n    }\n\n    if (email_token) {\n      validateEmail();\n      localStorage.setItem(\"auth_token\", \"\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [email_token]);\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeadingContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header3, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, heading)), !email_token ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MessageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Center, {\n    style: {\n      paddingBottom: 0,\n      textAlign: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ResentTimer, {\n    timer: timer,\n    message: `Didnâ€™t receive verification email?`,\n    resendOtp: resendOtp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })))) : /*#__PURE__*/React.createElement(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LoadingText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, \"Verifying your Email...\"), /*#__PURE__*/React.createElement(CircularProgress, {\n    style: {\n      color: COLORS.BTN_GREEN\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  })));\n};\nconst Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 25px;\n`;\nconst LoadingText = styled.span`\n  margin-right: 25px;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  color: ${COLORS.COLOR_DARK};\n`;","map":{"version":3,"sources":["/home/justact/13-12-2021(Frontend Dev)/justact-fe/src/components/internal/AccountVerification/AccountVerification.js"],"names":["React","CardWrapper","HeadingContainer","Header3","Center","MessageContainer","ResentTimer","styled","CircularProgress","theme","COLORS","useEffect","AuthService","useSnackbar","getErrorMessage","navigate","useUser","useLoader","AccountVerification","heading","timer","message","triggerResent","location","email_token","enqueueSnackbar","setToken","userObject","setLoader","resendOtp","emailVerified","validateEmail","state","body","emailToken","response","token","variant","error","localStorage","setItem","paddingBottom","textAlign","color","BTN_GREEN","Flex","div","LoadingText","span","fonts","primaryFontSemiBold","COLOR_DARK"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,OAHF,EAIEC,MAJF,QAKO,iCALP;AAMA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,WAAT,QAA4B,sCAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,CAAC;AAClCC,EAAAA,OAAO,GAAG,2BADwB;AAElCC,EAAAA,KAAK,GAAG,EAF0B;AAGlCC,EAAAA,OAAO,GAAI;AACb,8FAJoC;AAKlCC,EAAAA,aAAa,GAAG,MAAM,CAAE,CALU;AAMlCC,EAAAA,QANkC;AAOlCC,EAAAA;AAPkC,CAAD,KAQ7B;AACJ,QAAM;AAAEC,IAAAA;AAAF,MAAsBZ,WAAW,EAAvC;AACA,QAAM;AAAEa,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BX,OAAO,EAAxC;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAgBX,SAAS,EAA/B;;AAEA,QAAMY,SAAS,GAAG,MAAM;AACtBP,IAAAA,aAAa;AACd,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAAgB,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEG,aAAZ,KAA6B,CAACN,WAAlC,EAA+C;AAC7CT,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACD;AACF,GAJQ,EAIN,CAACY,UAAD,EAAaH,WAAb,CAJM,CAAT;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeoB,aAAf,GAA+B;AAC7B,UAAI;AACFH,QAAAA,SAAS,CAAC;AAAEI,UAAAA,KAAK,EAAE,IAAT;AAAeX,UAAAA,OAAO,EAAE;AAAxB,SAAD,CAAT;AACA,cAAMY,IAAI,GAAG;AAAEC,UAAAA,UAAU,EAAEV;AAAd,SAAb;AACA,cAAMW,QAAQ,GAAG,MAAMvB,WAAW,CAACmB,aAAZ,CAA0BE,IAA1B,CAAvB;;AACA,YAAIE,QAAQ,IAAIA,QAAQ,CAACC,KAAzB,EAAgC;AAC9BX,UAAAA,eAAe,CAACU,QAAQ,CAACd,OAAV,EAAmB;AAChCgB,YAAAA,OAAO,EAAE;AADuB,WAAnB,CAAf;AAGAX,UAAAA,QAAQ,CAACS,QAAQ,CAACC,KAAV,CAAR;AACArB,UAAAA,QAAQ,CAAC,oBAAD,CAAR;AACD,SAND,MAMO;AACLU,UAAAA,eAAe,CAACU,QAAQ,CAACd,OAAV,EAAmB;AAChCgB,YAAAA,OAAO,EAAE;AADuB,WAAnB,CAAf;AAGAtB,UAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;AACF,OAhBD,CAgBE,OAAOuB,KAAP,EAAc;AACd,cAAMjB,OAAO,GAAGP,eAAe,CAACwB,KAAD,CAA/B;AACAb,QAAAA,eAAe,CAACJ,OAAD,EAAU;AACvBgB,UAAAA,OAAO,EAAE;AADc,SAAV,CAAf;AAGAtB,QAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,OAtBD,SAsBU;AACRa,QAAAA,SAAS,CAAC;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAD,CAAT;AACD;AACF;;AACD,QAAIR,WAAJ,EAAiB;AACfO,MAAAA,aAAa;AACbQ,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,EAAnC;AACD,KA/Ba,CAgCd;;AACD,GAjCQ,EAiCN,CAAChB,WAAD,CAjCM,CAAT;AAmCA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAUL,OAAV,CADF,CADF,EAIG,CAACK,WAAD,gBACC,uDACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBH,OAAnB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEoB,MAAAA,aAAa,EAAE,CAAjB;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AACE,IAAA,KAAK,EAAEtB,KADT;AAEE,IAAA,OAAO,EAAG,oCAFZ;AAGE,IAAA,SAAS,EAAES,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAFF,CADD,gBAcC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAEE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAEjC,MAAM,CAACkC;AAAhB,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAlBJ,CADF;AA0BD,CApFM;AAsFP,MAAMC,IAAI,GAAGtC,MAAM,CAACuC,GAAI;AACxB;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMC,WAAW,GAAGxC,MAAM,CAACyC,IAAK;AAChC;AACA,iBAAiBvC,KAAK,CAACwC,KAAN,CAAYC,mBAAoB;AACjD,WAAWxC,MAAM,CAACyC,UAAW;AAC7B,CAJA","sourcesContent":["import React from \"react\";\nimport {\n  CardWrapper,\n  HeadingContainer,\n  Header3,\n  Center,\n} from \"../../../styles/component/style\";\nimport { MessageContainer } from \"./Styles\";\nimport { ResentTimer } from \"../../common/ResendTimer/ResendTimer\";\nimport styled from \"styled-components\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport theme from \"../../../assets/theme\";\nimport COLORS from \"../../../assets/Colors\";\nimport { useEffect } from \"react\";\nimport AuthService from \"../../../services/AuthService\";\nimport { useSnackbar } from \"notistack\";\nimport { getErrorMessage } from \"../../../helpers/functions\";\nimport { navigate } from \"@reach/router\";\nimport useUser from \"../../../hooks/useUser\";\nimport useLoader from \"../../../hooks/useLoader\";\n\nexport const AccountVerification = ({\n  heading = \"Validate your Email (4/4)\",\n  timer = 60,\n  message = `Hey user as the final step of becoming part of JustAct we want you to verify your email.\n  Please login to your email ID and click on the verification Link we sent in order to verify`,\n  triggerResent = () => {},\n  location,\n  email_token,\n}) => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { setToken, userObject } = useUser();\n  const { setLoader } = useLoader();\n\n  const resendOtp = () => {\n    triggerResent();\n  };\n\n  useEffect(() => {\n    if (userObject?.emailVerified && !email_token) {\n      navigate(\"/dashboard\");\n    }\n  }, [userObject, email_token]);\n\n  useEffect(() => {\n    async function validateEmail() {\n      try {\n        setLoader({ state: true, message: \"Verifying your email...\" });\n        const body = { emailToken: email_token };\n        const response = await AuthService.validateEmail(body);\n        if (response && response.token) {\n          enqueueSnackbar(response.message, {\n            variant: \"success\",\n          });\n          setToken(response.token);\n          navigate(\"/dashboard/welcome\");\n        } else {\n          enqueueSnackbar(response.message, {\n            variant: \"error\",\n          });\n          navigate(\"/login\");\n        }\n      } catch (error) {\n        const message = getErrorMessage(error);\n        enqueueSnackbar(message, {\n          variant: \"error\",\n        });\n        navigate(\"/login\");\n      } finally {\n        setLoader({ state: false });\n      }\n    }\n    if (email_token) {\n      validateEmail();\n      localStorage.setItem(\"auth_token\", \"\");\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [email_token]);\n\n  return (\n    <CardWrapper>\n      <HeadingContainer>\n        <Header3>{heading}</Header3>\n      </HeadingContainer>\n      {!email_token ? (\n        <>\n          <MessageContainer>{message}</MessageContainer>\n          <div className=\"pt10\">\n            <Center style={{ paddingBottom: 0, textAlign: \"center\" }}>\n              <ResentTimer\n                timer={timer}\n                message={`Didnâ€™t receive verification email?`}\n                resendOtp={resendOtp}\n              />\n            </Center>\n          </div>\n        </>\n      ) : (\n        <Flex>\n          <LoadingText>Verifying your Email...</LoadingText>\n          <CircularProgress style={{ color: COLORS.BTN_GREEN }} />\n        </Flex>\n      )}\n    </CardWrapper>\n  );\n};\n\nconst Flex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 25px;\n`;\n\nconst LoadingText = styled.span`\n  margin-right: 25px;\n  font-family: ${theme.fonts.primaryFontSemiBold};\n  color: ${COLORS.COLOR_DARK};\n`;\n"]},"metadata":{},"sourceType":"module"}